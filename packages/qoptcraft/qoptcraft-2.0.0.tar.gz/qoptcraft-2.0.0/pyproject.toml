######## Building

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "qoptcraft"
authors = [
  {name = "Daniel GÃ³mez Aguado", email = "gomezaguado99@gmail.com"},
  {name = "Pablo V. Parellada", email = "pablo.veganzones@uva.es"}
]
maintainers = [
  {name = "Pablo V. Parellada", email = "pablo.veganzones@uva.es"}
]
description = """A package for the design and study of linear optical quantum systems.

QOprCraft navigates through the subalgebras of mainly unitary matrices.
Via decomposing files into beam splitters and shifters, theoretically desired matrices can be implemented (Selements()), as well as their quantum evolution (read: influence) given a number of photons (StoU()).
The reverse operation: giving a desired evolution for finding the original matrix, is also true (SfromU()).
For unavailable implementations, the option to obtain its closest, possible evolution matrix is also given via Toponogov().
Systems with loss are treated by the fifth function QuasiU().
A matrix generator, a test of some algorithms and every logarithm developed are also included as individual functions.
"""

readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dependencies = [
    "numpy",
    "scipy",
    "numba",
    "sympy",
]
dynamic = ["version"]

[project.urls]
repository = "https://gitlab.tel.uva.es/juagar/qoptcraft"

[tool.setuptools]
platforms = ["unix", "linux", "osx", "cygwin", "win32"]

[tool.setuptools.packages.find]
include = ["qoptcraft*"]
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[tool.setuptools.dynamic]
version = {attr = "qoptcraft._version.__version__"}


[project.optional-dependencies]
dev = ["qoptcraft[test,lint,build,docs]"]
test = [
    "pytest",
    "pyinstrument",
    "hypothesis"
]
lint = [
    "ruff",
    "black",
    "black[jupyter]",
    "mypy",
    "vulture"
]
build = [
    "setuptools",
    "build",
    "twine"
    ]
docs = [
    "mkdocs",
    "mkdocstrings",
    "mkdocstrings[python]",
    "mkdocs-material",
    "Pygments",
    "python-markdown-math",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocs-same-dir",
    "mkdocs-autorefs",
    "mkdocs-jupyter",
]


######## Tools

[tool.pytest.ini_options]
minversion = "7.3"
testpaths = "tests"


[tool.ruff]
line-length = 100
select = ["F", "E"]
extend-select = ["W", "I002", "B", "UP", "PLE", "PLW", "NPY", "RUF", "PD", "SIM", "PT"]
unfixable = ["NPY002"]
ignore = ["RUF005"]
fixable = ["E", "F", "W", "I", "B", "UP", "PLE", "PLW", "NPY", "RUF", "PD", "SIM", "PT"]
extend-exclude = ["tests", "test"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
force-single-line = false
force-sort-within-sections = false
lines-after-imports = 2

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.flake8-annotations]
allow-star-arg-any = false
ignore-fully-untyped = false


[tool.black]
line-length = 100
skip-string-normalization = false
skip-magic-trailing-comma = false
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | setup.py
)
'''


[tool.mypy]
warn_return_any = true
warn_unused_configs = true
follow_imports = "silent"
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_subclassing_any = true
strict_optional = true
no_implicit_optional = true
warn_no_return = true
warn_unreachable = true
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true