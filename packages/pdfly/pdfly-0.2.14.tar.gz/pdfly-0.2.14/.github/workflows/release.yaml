# This action assumes that there is a REL-commit which already has a
# Markdown-formatted git tag. Hence the CHANGELOG is already adjusted
# and it's decided what should be in the release.
# This action only ensures the release is done with the proper contents
# and that it's announced with a Github release.
name: Publish Python Package to PyPI
on:
  push:
    tags:
      - '*.*.*'

jobs:
  build_and_publish:
    name: Publish a new version
    runs-on: ubuntu-latest

    steps:
      # Ensure it's on PyPI
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Flit
        run: |
          python -m pip install --upgrade pip
          pip install flit

      - name: Publish Package to PyPIðŸš€
        env:
          FLIT_USERNAME: '__token__'
          FLIT_PASSWORD: ${{ secrets.FLIT_PASSWORD }}
        run: |
          flit publish

      # Create the Github Page
      - name: Prepare variables
        id: prepare_variables
        run: |
          git fetch --tags --force
          echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"
          echo "tag_body<<$EOF" >> "$GITHUB_ENV"
          git tag -l "${GITHUB_REF_NAME}" --format='%(contents:body)' >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
      - name: Create GitHub Release ðŸš€
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Version ${{ env.GITHUB_REF_NAME }}, ${{ env.date }}
          draft: false
          prerelease: false
          body: Body is ${{ env.tag_body }}
