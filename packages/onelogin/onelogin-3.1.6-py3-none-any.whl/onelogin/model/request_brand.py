# coding: utf-8

"""
    OneLogin API

    OpenAPI Specification for OneLogin  # noqa: E501

    The version of the OpenAPI document: 3.1.1
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from onelogin import schemas  # noqa: F401


class RequestBrand(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "name",
        }
        
        class properties:
            name = schemas.StrSchema
            enabled = schemas.BoolSchema
            custom_support_enabled = schemas.BoolSchema
            custom_color = schemas.StrSchema
            custom_accent_color = schemas.StrSchema
            custom_masking_color = schemas.StrSchema
            custom_masking_opacity = schemas.IntSchema
            enable_custom_label_for_login_screen = schemas.BoolSchema
            custom_label_text_for_login_screen = schemas.StrSchema
            login_instruction_title = schemas.StrSchema
            login_instruction = schemas.StrSchema
            hide_onelogin_footer = schemas.BoolSchema
            mfa_enrollment_message = schemas.StrSchema
            background = schemas.StrSchema
            logo = schemas.StrSchema
            __annotations__ = {
                "name": name,
                "enabled": enabled,
                "custom_support_enabled": custom_support_enabled,
                "custom_color": custom_color,
                "custom_accent_color": custom_accent_color,
                "custom_masking_color": custom_masking_color,
                "custom_masking_opacity": custom_masking_opacity,
                "enable_custom_label_for_login_screen": enable_custom_label_for_login_screen,
                "custom_label_text_for_login_screen": custom_label_text_for_login_screen,
                "login_instruction_title": login_instruction_title,
                "login_instruction": login_instruction,
                "hide_onelogin_footer": hide_onelogin_footer,
                "mfa_enrollment_message": mfa_enrollment_message,
                "background": background,
                "logo": logo,
            }
    
    name: MetaOapg.properties.name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enabled"]) -> MetaOapg.properties.enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_support_enabled"]) -> MetaOapg.properties.custom_support_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_color"]) -> MetaOapg.properties.custom_color: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_accent_color"]) -> MetaOapg.properties.custom_accent_color: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_masking_color"]) -> MetaOapg.properties.custom_masking_color: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_masking_opacity"]) -> MetaOapg.properties.custom_masking_opacity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enable_custom_label_for_login_screen"]) -> MetaOapg.properties.enable_custom_label_for_login_screen: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["custom_label_text_for_login_screen"]) -> MetaOapg.properties.custom_label_text_for_login_screen: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["login_instruction_title"]) -> MetaOapg.properties.login_instruction_title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["login_instruction"]) -> MetaOapg.properties.login_instruction: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hide_onelogin_footer"]) -> MetaOapg.properties.hide_onelogin_footer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mfa_enrollment_message"]) -> MetaOapg.properties.mfa_enrollment_message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["background"]) -> MetaOapg.properties.background: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["logo"]) -> MetaOapg.properties.logo: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "enabled", "custom_support_enabled", "custom_color", "custom_accent_color", "custom_masking_color", "custom_masking_opacity", "enable_custom_label_for_login_screen", "custom_label_text_for_login_screen", "login_instruction_title", "login_instruction", "hide_onelogin_footer", "mfa_enrollment_message", "background", "logo", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enabled"]) -> typing.Union[MetaOapg.properties.enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_support_enabled"]) -> typing.Union[MetaOapg.properties.custom_support_enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_color"]) -> typing.Union[MetaOapg.properties.custom_color, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_accent_color"]) -> typing.Union[MetaOapg.properties.custom_accent_color, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_masking_color"]) -> typing.Union[MetaOapg.properties.custom_masking_color, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_masking_opacity"]) -> typing.Union[MetaOapg.properties.custom_masking_opacity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enable_custom_label_for_login_screen"]) -> typing.Union[MetaOapg.properties.enable_custom_label_for_login_screen, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["custom_label_text_for_login_screen"]) -> typing.Union[MetaOapg.properties.custom_label_text_for_login_screen, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["login_instruction_title"]) -> typing.Union[MetaOapg.properties.login_instruction_title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["login_instruction"]) -> typing.Union[MetaOapg.properties.login_instruction, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hide_onelogin_footer"]) -> typing.Union[MetaOapg.properties.hide_onelogin_footer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mfa_enrollment_message"]) -> typing.Union[MetaOapg.properties.mfa_enrollment_message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["background"]) -> typing.Union[MetaOapg.properties.background, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["logo"]) -> typing.Union[MetaOapg.properties.logo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "enabled", "custom_support_enabled", "custom_color", "custom_accent_color", "custom_masking_color", "custom_masking_opacity", "enable_custom_label_for_login_screen", "custom_label_text_for_login_screen", "login_instruction_title", "login_instruction", "hide_onelogin_footer", "mfa_enrollment_message", "background", "logo", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        enabled: typing.Union[MetaOapg.properties.enabled, bool, schemas.Unset] = schemas.unset,
        custom_support_enabled: typing.Union[MetaOapg.properties.custom_support_enabled, bool, schemas.Unset] = schemas.unset,
        custom_color: typing.Union[MetaOapg.properties.custom_color, str, schemas.Unset] = schemas.unset,
        custom_accent_color: typing.Union[MetaOapg.properties.custom_accent_color, str, schemas.Unset] = schemas.unset,
        custom_masking_color: typing.Union[MetaOapg.properties.custom_masking_color, str, schemas.Unset] = schemas.unset,
        custom_masking_opacity: typing.Union[MetaOapg.properties.custom_masking_opacity, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        enable_custom_label_for_login_screen: typing.Union[MetaOapg.properties.enable_custom_label_for_login_screen, bool, schemas.Unset] = schemas.unset,
        custom_label_text_for_login_screen: typing.Union[MetaOapg.properties.custom_label_text_for_login_screen, str, schemas.Unset] = schemas.unset,
        login_instruction_title: typing.Union[MetaOapg.properties.login_instruction_title, str, schemas.Unset] = schemas.unset,
        login_instruction: typing.Union[MetaOapg.properties.login_instruction, str, schemas.Unset] = schemas.unset,
        hide_onelogin_footer: typing.Union[MetaOapg.properties.hide_onelogin_footer, bool, schemas.Unset] = schemas.unset,
        mfa_enrollment_message: typing.Union[MetaOapg.properties.mfa_enrollment_message, str, schemas.Unset] = schemas.unset,
        background: typing.Union[MetaOapg.properties.background, str, schemas.Unset] = schemas.unset,
        logo: typing.Union[MetaOapg.properties.logo, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'RequestBrand':
        return super().__new__(
            cls,
            *_args,
            name=name,
            enabled=enabled,
            custom_support_enabled=custom_support_enabled,
            custom_color=custom_color,
            custom_accent_color=custom_accent_color,
            custom_masking_color=custom_masking_color,
            custom_masking_opacity=custom_masking_opacity,
            enable_custom_label_for_login_screen=enable_custom_label_for_login_screen,
            custom_label_text_for_login_screen=custom_label_text_for_login_screen,
            login_instruction_title=login_instruction_title,
            login_instruction=login_instruction,
            hide_onelogin_footer=hide_onelogin_footer,
            mfa_enrollment_message=mfa_enrollment_message,
            background=background,
            logo=logo,
            _configuration=_configuration,
            **kwargs,
        )
