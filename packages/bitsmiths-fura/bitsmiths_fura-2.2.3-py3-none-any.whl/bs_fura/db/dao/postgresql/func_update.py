# This file was generated by mettle.genes.db.GenPy3 [ver 2.2] on Thu Jul 20 09:12:34 2023
#  Target Database = postgresql
#
import datetime
import uuid
import time
import mettle.lib
import mettle.io
import mettle.db

from bs_fura.db.tables.func import tFunc

class dFuncUpdate:
    __slots__ = ("_dbcon", "_dbstmnt", "irec")

    def __init__(self, dbcon: mettle.db.IConnect):
        """
        Constructor.

        :param dbcon: Mettle database connection object.
        """
        self._dbcon   = dbcon
        self._dbstmnt = None
        self.irec     = tFunc()

    def __enter__(self):
        """
        With statement enter.
        """
        return self

    def __exit__(self, type, value, traceback):
        """
        With statement exit.
        """
        self._destroy()

    def _destroy(self):
        if self._dbstmnt:
            self._dbstmnt.destroy()
            self._dbstmnt = None

    def exec_deft(self,
                  id: str,
                  funcgrp_id: str,
                  descr: str,
                  action: str,
                  oride: str,
                  audit_lvl: int,
                  modified_by: str) -> "dFuncUpdate":
        """
        Execute the query by setting all the inputs.

        :param id: str
        :param funcgrp_id: str
        :param descr: str
        :param action: str
        :param oride: str
        :param audit_lvl: int
        :param modified_by: str
        :param tm_stamp: datetime.datetime
        :return: Self for convenience.
        """
        self.irec.id = id
        self.irec.funcgrp_id = funcgrp_id
        self.irec.descr = descr
        self.irec.action = action
        self.irec.oride = oride
        self.irec.audit_lvl = audit_lvl
        self.irec.modified_by = modified_by

        return self.exec()

    def exec(self, irec: tFunc = None) -> "dFuncUpdate":
        """
        Execute the query, optionally passing in the input rec.

        :param irec:
        :return: Self for convenience.
        """
        if irec:
            self.irec._copy_from(irec)

        self._destroy()

        self._dbstmnt = self._dbcon.statement("FuncUpdate", self._dbcon.STMNT_TYPE_CUD)

        self._dbstmnt.sql("""update
  fura.Func
set
  funcgrp_id = :funcgrp_id,
  descr = :descr,
  action = :action,
  oride = :oride,
  audit_lvl = :audit_lvl,
  modified_by = :modified_by,
  tm_stamp = :tm_stamp
where
  id = :id""")

        self.irec.tm_stamp = self._dbcon.get_timestamp()

        self._dbstmnt.bind_in("id", self.irec.id, str, 128)
        self._dbstmnt.bind_in("funcgrp_id", self.irec.funcgrp_id, str, 128)
        self._dbstmnt.bind_in("descr", self.irec.descr, str, 256)
        self._dbstmnt.bind_in("action", self.irec.action, str, 1)
        self._dbstmnt.bind_in("oride", self.irec.oride, str, 1)
        self._dbstmnt.bind_in("audit_lvl", self.irec.audit_lvl, int, 4)
        self._dbstmnt.bind_in("modified_by", self.irec.modified_by, str, 128)
        self._dbstmnt.bind_in("tm_stamp", self.irec.tm_stamp, datetime.datetime)

        self._dbcon.execute(self._dbstmnt)

        if irec:
            irec._copy_from(self.irec)

        return self

