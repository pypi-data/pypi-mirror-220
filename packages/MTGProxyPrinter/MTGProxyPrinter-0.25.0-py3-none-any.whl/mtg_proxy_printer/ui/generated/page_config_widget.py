# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/tmp/build-via-sdist-8pb_2oic/MTGProxyPrinter-0.25.0/mtg_proxy_printer/resources/ui/page_config_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PageConfigWidget(object):
    def setupUi(self, PageConfigWidget):
        PageConfigWidget.setObjectName("PageConfigWidget")
        PageConfigWidget.resize(642, 475)
        self.gridLayout = QtWidgets.QGridLayout(PageConfigWidget)
        self.gridLayout.setObjectName("gridLayout")
        self.page_height = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_height.sizePolicy().hasHeightForWidth())
        self.page_height.setSizePolicy(sizePolicy)
        self.page_height.setMaximum(10000)
        self.page_height.setObjectName("page_height")
        self.gridLayout.addWidget(self.page_height, 17, 3, 1, 1)
        self.draw_page_numbers = QtWidgets.QCheckBox(PageConfigWidget)
        self.draw_page_numbers.setObjectName("draw_page_numbers")
        self.gridLayout.addWidget(self.draw_page_numbers, 1, 3, 1, 1)
        self.page_capacity_label = QtWidgets.QLabel(PageConfigWidget)
        self.page_capacity_label.setObjectName("page_capacity_label")
        self.gridLayout.addWidget(self.page_capacity_label, 27, 1, 1, 1)
        self.draw_cut_markers = QtWidgets.QCheckBox(PageConfigWidget)
        self.draw_cut_markers.setObjectName("draw_cut_markers")
        self.gridLayout.addWidget(self.draw_cut_markers, 2, 3, 1, 1)
        self.margin_top = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.margin_top.sizePolicy().hasHeightForWidth())
        self.margin_top.setSizePolicy(sizePolicy)
        self.margin_top.setMaximum(10000)
        self.margin_top.setObjectName("margin_top")
        self.gridLayout.addWidget(self.margin_top, 20, 3, 1, 1)
        self.margin_right_label = QtWidgets.QLabel(PageConfigWidget)
        self.margin_right_label.setObjectName("margin_right_label")
        self.gridLayout.addWidget(self.margin_right_label, 24, 1, 1, 1)
        self.image_spacing_horizontal = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.image_spacing_horizontal.sizePolicy().hasHeightForWidth())
        self.image_spacing_horizontal.setSizePolicy(sizePolicy)
        self.image_spacing_horizontal.setMaximum(10000)
        self.image_spacing_horizontal.setObjectName("image_spacing_horizontal")
        self.gridLayout.addWidget(self.image_spacing_horizontal, 25, 3, 1, 1)
        self.margin_top_label = QtWidgets.QLabel(PageConfigWidget)
        self.margin_top_label.setObjectName("margin_top_label")
        self.gridLayout.addWidget(self.margin_top_label, 20, 1, 1, 1)
        self.margin_bottom_label = QtWidgets.QLabel(PageConfigWidget)
        self.margin_bottom_label.setObjectName("margin_bottom_label")
        self.gridLayout.addWidget(self.margin_bottom_label, 21, 1, 1, 1)
        self.page_width_label = QtWidgets.QLabel(PageConfigWidget)
        self.page_width_label.setObjectName("page_width_label")
        self.gridLayout.addWidget(self.page_width_label, 19, 1, 1, 1)
        self.margin_left_label = QtWidgets.QLabel(PageConfigWidget)
        self.margin_left_label.setObjectName("margin_left_label")
        self.gridLayout.addWidget(self.margin_left_label, 23, 1, 1, 1)
        self.image_spacing_horizontal_label = QtWidgets.QLabel(PageConfigWidget)
        self.image_spacing_horizontal_label.setObjectName("image_spacing_horizontal_label")
        self.gridLayout.addWidget(self.image_spacing_horizontal_label, 25, 1, 1, 1)
        self.image_spacing_vertical_label = QtWidgets.QLabel(PageConfigWidget)
        self.image_spacing_vertical_label.setObjectName("image_spacing_vertical_label")
        self.gridLayout.addWidget(self.image_spacing_vertical_label, 26, 1, 1, 1)
        self.margin_right = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.margin_right.sizePolicy().hasHeightForWidth())
        self.margin_right.setSizePolicy(sizePolicy)
        self.margin_right.setMaximum(10000)
        self.margin_right.setObjectName("margin_right")
        self.gridLayout.addWidget(self.margin_right, 24, 3, 1, 1)
        self.margin_bottom = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.margin_bottom.sizePolicy().hasHeightForWidth())
        self.margin_bottom.setSizePolicy(sizePolicy)
        self.margin_bottom.setMaximum(10000)
        self.margin_bottom.setObjectName("margin_bottom")
        self.gridLayout.addWidget(self.margin_bottom, 21, 3, 1, 1)
        self.image_spacing_vertical = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.image_spacing_vertical.sizePolicy().hasHeightForWidth())
        self.image_spacing_vertical.setSizePolicy(sizePolicy)
        self.image_spacing_vertical.setMaximum(10000)
        self.image_spacing_vertical.setObjectName("image_spacing_vertical")
        self.gridLayout.addWidget(self.image_spacing_vertical, 26, 3, 1, 1)
        self.line = QtWidgets.QFrame(PageConfigWidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 15, 1, 1, 3)
        self.page_capacity = QtWidgets.QLabel(PageConfigWidget)
        self.page_capacity.setText("")
        self.page_capacity.setObjectName("page_capacity")
        self.gridLayout.addWidget(self.page_capacity, 27, 3, 1, 1)
        self.margin_left = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.margin_left.sizePolicy().hasHeightForWidth())
        self.margin_left.setSizePolicy(sizePolicy)
        self.margin_left.setMaximum(10000)
        self.margin_left.setObjectName("margin_left")
        self.gridLayout.addWidget(self.margin_left, 23, 3, 1, 1)
        self.page_height_label = QtWidgets.QLabel(PageConfigWidget)
        self.page_height_label.setObjectName("page_height_label")
        self.gridLayout.addWidget(self.page_height_label, 17, 1, 1, 1)
        self.draw_sharp_corners = QtWidgets.QCheckBox(PageConfigWidget)
        self.draw_sharp_corners.setObjectName("draw_sharp_corners")
        self.gridLayout.addWidget(self.draw_sharp_corners, 3, 3, 1, 1)
        self.page_width = QtWidgets.QSpinBox(PageConfigWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.page_width.sizePolicy().hasHeightForWidth())
        self.page_width.setSizePolicy(sizePolicy)
        self.page_width.setMaximum(10000)
        self.page_width.setObjectName("page_width")
        self.gridLayout.addWidget(self.page_width, 19, 3, 1, 1)
        self.document_name = QtWidgets.QLineEdit(PageConfigWidget)
        self.document_name.setMaxLength(200)
        self.document_name.setClearButtonEnabled(True)
        self.document_name.setObjectName("document_name")
        self.gridLayout.addWidget(self.document_name, 0, 3, 1, 1)
        self.document_name_label = QtWidgets.QLabel(PageConfigWidget)
        self.document_name_label.setObjectName("document_name_label")
        self.gridLayout.addWidget(self.document_name_label, 0, 1, 1, 1)
        self.margin_right_label.setBuddy(self.margin_right)
        self.margin_top_label.setBuddy(self.margin_top)
        self.margin_bottom_label.setBuddy(self.margin_bottom)
        self.page_width_label.setBuddy(self.page_width)
        self.margin_left_label.setBuddy(self.margin_left)
        self.image_spacing_horizontal_label.setBuddy(self.image_spacing_horizontal)
        self.image_spacing_vertical_label.setBuddy(self.image_spacing_vertical)
        self.page_height_label.setBuddy(self.page_height)
        self.document_name_label.setBuddy(self.document_name)

        self.retranslateUi(PageConfigWidget)
        self.page_height.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.page_height.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.page_width.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.page_width.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.margin_top.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.margin_top.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.margin_bottom.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.margin_bottom.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.margin_left.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.margin_left.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.margin_right.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.margin_right.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.image_spacing_horizontal.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.image_spacing_horizontal.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        self.image_spacing_vertical.valueChanged['int'].connect(PageConfigWidget.validate_paper_size_settings) # type: ignore
        self.image_spacing_vertical.valueChanged['int'].connect(PageConfigWidget.page_layout_setting_changed) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(PageConfigWidget)
        PageConfigWidget.setTabOrder(self.document_name, self.draw_page_numbers)
        PageConfigWidget.setTabOrder(self.draw_page_numbers, self.draw_cut_markers)
        PageConfigWidget.setTabOrder(self.draw_cut_markers, self.draw_sharp_corners)
        PageConfigWidget.setTabOrder(self.draw_sharp_corners, self.page_height)
        PageConfigWidget.setTabOrder(self.page_height, self.page_width)
        PageConfigWidget.setTabOrder(self.page_width, self.margin_top)
        PageConfigWidget.setTabOrder(self.margin_top, self.margin_bottom)
        PageConfigWidget.setTabOrder(self.margin_bottom, self.margin_left)
        PageConfigWidget.setTabOrder(self.margin_left, self.margin_right)
        PageConfigWidget.setTabOrder(self.margin_right, self.image_spacing_horizontal)
        PageConfigWidget.setTabOrder(self.image_spacing_horizontal, self.image_spacing_vertical)

    def retranslateUi(self, PageConfigWidget):
        _translate = QtCore.QCoreApplication.translate
        PageConfigWidget.setTitle(_translate("PageConfigWidget", "Default settings for new documents"))
        self.page_height.setToolTip(_translate("PageConfigWidget", "Default paper height in millimeters"))
        self.page_height.setSuffix(_translate("PageConfigWidget", " mm"))
        self.draw_page_numbers.setToolTip(_translate("PageConfigWidget", "If enabled, the page number is printed on each page. Makes it easier to notice missing pages in a stack."))
        self.draw_page_numbers.setText(_translate("PageConfigWidget", "Print page numbers"))
        self.page_capacity_label.setText(_translate("PageConfigWidget", "Resulting page capacity:"))
        self.draw_cut_markers.setToolTip(_translate("PageConfigWidget", "Enable printing additional lines to aid cutting the printed sheets."))
        self.draw_cut_markers.setText(_translate("PageConfigWidget", "Print cut markers"))
        self.margin_top.setToolTip(_translate("PageConfigWidget", "<html><head/><body><p>Minimum margin between the top paper border and the page content.</p><p>Most printers have a minimum printing margin of 3 to 5 mm.</p></body></html>"))
        self.margin_top.setSuffix(_translate("PageConfigWidget", " mm"))
        self.margin_right_label.setText(_translate("PageConfigWidget", "Right margin"))
        self.image_spacing_horizontal.setToolTip(_translate("PageConfigWidget", "<html><head/><body><p>Space left and right of images. Images are this many millimeters apart.</p><p>If set to zero, you only need one cut to separate two images, otherwise you need two cuts but require less precision hitting the exact middle.</p></body></html>"))
        self.image_spacing_horizontal.setSuffix(_translate("PageConfigWidget", " mm"))
        self.margin_top_label.setText(_translate("PageConfigWidget", "Top margin"))
        self.margin_bottom_label.setText(_translate("PageConfigWidget", "Bottom Margin"))
        self.page_width_label.setText(_translate("PageConfigWidget", "Page width"))
        self.margin_left_label.setText(_translate("PageConfigWidget", "Left margin"))
        self.image_spacing_horizontal_label.setText(_translate("PageConfigWidget", "Horizontal image spacing"))
        self.image_spacing_vertical_label.setText(_translate("PageConfigWidget", "Vertical image spacing"))
        self.margin_right.setToolTip(_translate("PageConfigWidget", "<html><head/><body><p>Minimum margin between the right paper border and the page content.</p><p>Most printers have a minimum printing margin of 3 to 5 mm.</p></body></html>"))
        self.margin_right.setSuffix(_translate("PageConfigWidget", " mm"))
        self.margin_bottom.setToolTip(_translate("PageConfigWidget", "<html><head/><body><p>Minimum margin between the bottom paper border and the page content.</p><p>Most printers have a minimum printing margin of 3 to 5 mm.</p></body></html>"))
        self.margin_bottom.setSuffix(_translate("PageConfigWidget", " mm"))
        self.image_spacing_vertical.setToolTip(_translate("PageConfigWidget", "<html><head/><body><p>Space above and below images. Images are this many millimeters apart.</p><p>If set to zero, you only need one cut to separate two images, otherwise you need two cuts but require less precision hitting the exact middle.</p></body></html>"))
        self.image_spacing_vertical.setSuffix(_translate("PageConfigWidget", " mm"))
        self.page_capacity.setToolTip(_translate("PageConfigWidget", "Number of regular-size cards fitting on each page,\n"
"based on the page size and spacings configured"))
        self.margin_left.setToolTip(_translate("PageConfigWidget", "<html><head/><body><p>Minimum margin between the left paper border and the page content.</p><p>Most printers have a minimum printing margin of 3 to 5 mm.</p></body></html>"))
        self.margin_left.setSuffix(_translate("PageConfigWidget", " mm"))
        self.page_height_label.setText(_translate("PageConfigWidget", "Page height"))
        self.draw_sharp_corners.setText(_translate("PageConfigWidget", "Draw 90° card corners, instead of round ones"))
        self.page_width.setToolTip(_translate("PageConfigWidget", "Default paper width in millimeters"))
        self.page_width.setSuffix(_translate("PageConfigWidget", " mm"))
        self.document_name.setToolTip(_translate("PageConfigWidget", "The document name is printed on each page and can help you keeping track\n"
"of different printed sheets and to which deck they belong.\n"
"\n"
"Leave empty to disable."))
        self.document_name.setPlaceholderText(_translate("PageConfigWidget", "Document/deck name"))
        self.document_name_label.setText(_translate("PageConfigWidget", "Document name"))
