[build-system]
requires = [ "poetry-core",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "typedpath"
version = "0.1.0"
description = "Use typed Python objects to represent files and directories."
authors = [ "Jesper Nielsen <jespernielsen1982+typedpath@gmail.com>",]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/jesnie/typedpath"
repository = "https://github.com/jesnie/typedpath"
classifiers = [ "Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Typing :: Typed",]

[tool.isort]
py_version = 310
profile = "black"

[tool.black]
line-length = 100
target-version = [ "py310",]

[tool.mypy]
python_version = "3.10"
show_error_codes = true
strict = true
disallow_untyped_decorators = false
[[tool.mypy.overrides]]
module = [ "_pytest.*", "pytest.*", "toml.*",]
ignore_missing_imports = true

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.extras]
numpy = [ "numpy",]
pandas = [ "pandas", "pyarrow",]

[tool.pylint.messages_control]
max-line-length = 100
disable = [ "duplicate-code", "fixme", "global-statement", "invalid-name", "missing-class-docstring", "missing-function-docstring", "missing-module-docstring", "no-else-return", "no-member", "too-few-public-methods", "unhashable-member", "unused-argument",]

[tool.taskipy.tasks]
isort = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX isort XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    isort typedpath tests set_version.py\n"
isort_check = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX isort XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    isort --check-only typedpath tests set_version.py\n"
black = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX black XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    black typedpath tests set_version.py\n"
black_check = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX black XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    black --check typedpath tests set_version.py\n"
mypy = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX mypy XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    mypy typedpath tests set_version.py\n"
pylint = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX pylint XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    pylint typedpath tests set_version.py\n"
pytest = "    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX pytest XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    pytest tests\n"
format = "task isort && task black"
format_check = "task isort_check && task black_check"
lint = "task format_check && task mypy && task pylint"
test = "task lint && task pytest"
format_and_test = "task format && task test"

[tool.poetry.dependencies.numpy]
version = "^1.22"
optional = true

[tool.poetry.dependencies.pandas]
version = "^2.0.0"
optional = true

[tool.poetry.dependencies.pyarrow]
version = "^12.0.0"
optional = true

[tool.poetry.group.dev.dependencies]
black = ">= 23.0.0"
isort = ">= 5.12.0"
mypy = ">= 1.0.0"
pandas-stubs = "^2.0.0"
pylint = ">= 2.16.0"
pytest = ">= 7.2.0"
taskipy = ">= 1.10.0"
toml = "^0.10.2"
