cp -rf py3.7/examples .
cp -rf py3.7/doc .
cp -f py3.7/index.html .
cp -rf pypy3.7-v7.3.4-src/pypy/module/_multiprocessing module/_multiprocess
cp -rf pypy3.7-v7.3.4-src/lib-python/3/multiprocessing multiprocess
cp -rf pypy3.7-v7.3.4-src/lib-python/3/test/test_multiprocessing*py multiprocess/tests
cp -rf pypy3.7-v7.3.4-src/lib-python/3/test/_test_multiprocessing.py multiprocess/tests/__init__.py
cp -rf pypy3.7-v7.3.4-src/lib-python/3/test/mp_*py multiprocess/tests
cp -f py3.7/multiprocess/tests/__main__.py multiprocess/tests
cp -rf py3.7/_multiprocess _multiprocess
# ----------------------------------------------------------------------
EDIT multiprocess/__init__: __version__
EDIT multiprocess: multiprocessing --> multiprocess
EDIT multiprocess: pickle --> dill
EDIT multiprocess/dummy: multiprocessing --> multiprocess
EDIT multiprocess/tests: multiprocessing --> multiprocess
ADDED *args, **kwds for ForkingPickler in __init__ and dump
EDIT time.monotonic --> getattr(time,'monotonic',time.time)
# ----------------------------------------------------------------------
diff py3.7/multiprocess/managers.py pypy3.7/multiprocess/managers.py
21d20
< 
22a22
> 
1161c1161
<     '__setitem__', 'clear', 'copy', 'get', 'has_key', 'items',
---
>     '__setitem__', 'clear', 'copy', 'get', 'items',
diff py3.7/multiprocess/synchronize.py pypy3.7/multiprocess/synchronize.py
21d20
< 
33c32
< except ImportError:
---
> except (ImportError):
# ----------------------------------------------------------------------
diff py3.7/multiprocess/tests/__init__.py pypy3.7/multiprocess/tests/__init__.py
521a522,523
>         for i in range(3):
>             gc.collect()
1443a1446
>     @unittest.skipIf(True, 'bad timeout in pypy3')
1833a1837
>     @unittest.skipIf(True, 'bad timeout in pypy3')
1852a1857
>     @unittest.skipIf(True, 'bad timeout in pypy3')
2553a2556,2557
>         for i in range(3):
>             gc.collect()
2688a2696
>     @unittest.skipIf(True, 'bad exitcode in pypy3')
2699a2708
>     @unittest.skipIf(True, 'bad exitcode in pypy3')
2707a2717
>     @unittest.skipIf(True, 'bad exitcode in pypy3')
2801c2805,2806
<         self.assertRaises(Exception, queue.put, time.sleep)
---
>         # Changed on PyPy: passing functions to xmlrpc is broken
>         #self.assertRaises(Exception, queue.put, time.sleep)
3478a3484
>     @test.support.cpython_only
3579a3586,3587
>         for i in range(3):
>             gc.collect()
3590a3599
>         import gc; gc.collect()
3596a3606
>         import gc; gc.collect()
3631a3642
>     @test.support.cpython_only
# ----------------------------------------------------------------------
$ diff pypy3.7-v7.3.5-src/pypy/module/_multiprocessing pypy3.7-v7.3.7-src/pypy/module/_multiprocessing
diff pypy3.7-v7.3.5-src/pypy/module/_multiprocessing/moduledef.py pypy3.7-v7.3.7-src/pypy/module/_multiprocessing/moduledef.py
2d1
< 
# ----------------------------------------------------------------------
NOTE: semaphore_tracker throws KeyError in multiprocess and multiprocessing

Traceback (most recent call last):
  File "multiprocess/semaphore_tracker.py", line 133, in main
    cache.remove(name)
KeyError: b'/mp-oh37i3by'
