[tool.poetry]
name = "compotime"
version = "0.1.0"
description = "A library for forecasting compositional time series"
authors = ["Jaume Mateu"]
readme = "README.md"
documentation = "https://mateuja.github.io/compotime/"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
numpy = "^1.25.1"
pandas = "^2.0.2"
scipy = "^1.10.1"
typing-extensions = "^4.6.3"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^23.7.0"}
ruff = "^0.0.278"
pytest = "^7.4.0"
hypothesis = "^6.82.0"
ipython = "^8.14.0"
jupyterlab = "^4.0.3"
matplotlib = "^3.7.1"
docformatter = "^1.7.5"
isort = "^5.12.0"
pre-commit = "^3.3.2"
coverage = "^7.2.7"
pytest-xdist = "^3.3.1"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0.1"
nbsphinx = "^0.9.2"
pydata-sphinx-theme = "^0.13.3"

[tool.ruff]
line-length = 100
select = [
    "F", "E", "W", "I", "N", "D", "UP", "YTT", "ANN", "S", "BLE", "FBT", "B", "A", "COM", 
    "C4", "DTZ", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE",
    "RET", "SLF", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY",
    "RUF"
]
ignore = ["ANN101", "ANN102", "S101", "D203", "D213"]
cache-dir = ".ruff_cache"
target-version = "py39"

[tool.ruff.pylint]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.pep8-naming]
ignore-names = ["F", "X_last", "X_prev", "X_zero"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["ANN201", "SLF001", "EXE002"]
"compotime/*.py" = ["EXE002"]


[tool.black]
line-length = 100
target-version = ["py39"]

[tool.coverage.run]
branch = true
command_line = "-m pytest tests"
source = ["compotime"]

[tool.coverage.report]
show_missing = true

# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


