[build-system]
build-backend = "flit.buildapi"
requires = [
    "flit",
]

[project]
authors = [
    { name = "Kieran Ryan" },
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "natsort==8.4.0",
    "tomli-w==1.0.0",
    "tomli==2.0.1",
]
description = "Formatter for pyproject.toml files"
dynamic = [
    "version",
]
name = "pyprojectsort"
readme = "README.md"

[project.scripts]
pyprojectsort = "pyprojectsort.main:main"

[project.urls]
Documentation = "https://kieran-ryan.github.io/pyprojectsort/"
Source = "https://github.com/kieran-ryan/pyprojectsort"
Tracker = "https://github.com/kieran-ryan/pyprojectsort/issues"

[tool.bandit]
exclude_dirs = [
    "tests",
    "venv",
]

[tool.coverage.html]
directory = "docs/coverage"

[tool.coverage.report]
fail_under = 75.0
show_missing = true

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
]

[tool.coverage.xml]
output = "docs/coverage/coverage.xml"

[tool.flit.module]
name = "pyprojectsort"

[tool.isort]
profile = "black"
src_paths = "pyprojectsort"

[tool.mypy]
exclude = "__init__.py|docs|tests|venv"
files = "."
mypy_path = "pyprojectsort"

[tool.pylint]
ignore = [
    "docs",
    "tests",
    "venv",
]
recursive = true

[tool.pytest.ini_options]
addopts = "--doctest-modules -rA --verbose"
testpaths = [
    "pyprojectsort",
    "tests",
]

[tool.radon]
exclude = "tests/*,venv/*"
show_complexity = true
show_mi = true
total_average = true

[tool.ruff]
ignore = [
    "ANN",
    "ARG",
    "D203",
    "D213",
    "DTZ005",
    "FIX002",
    "G004",
    "INP001",
    "S101",
    "T201",
    "TD003",
]
select = [
    "ALL",
]

[tool.ruff.isort]
required-imports = [
    "from __future__ import annotations",
]

[tool.ruff.pydocstyle]
convention = "google"
