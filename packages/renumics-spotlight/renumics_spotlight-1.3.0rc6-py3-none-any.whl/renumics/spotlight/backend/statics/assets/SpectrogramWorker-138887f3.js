(function(){"use strict";function x(a,n,T,e){this.bufferSize=a,this.sampleRate=n,this.bandwidth=2/a*(n/2),this.sinTable=new Float32Array(a),this.cosTable=new Float32Array(a),this.windowValues=new Float32Array(a),this.reverseTable=new Uint32Array(a),this.peakBand=0,this.peak=0;let t;switch(T){case"bartlett":for(t=0;t<a;t++)this.windowValues[t]=2/(a-1)*((a-1)/2-Math.abs(t-(a-1)/2));break;case"bartlettHann":for(t=0;t<a;t++)this.windowValues[t]=.62-.48*Math.abs(t/(a-1)-.5)-.38*Math.cos(Math.PI*2*t/(a-1));break;case"blackman":for(e=e||.16,t=0;t<a;t++)this.windowValues[t]=(1-e)/2-.5*Math.cos(Math.PI*2*t/(a-1))+e/2*Math.cos(4*Math.PI*t/(a-1));break;case"cosine":for(t=0;t<a;t++)this.windowValues[t]=Math.cos(Math.PI*t/(a-1)-Math.PI/2);break;case"gauss":for(e=e||.25,t=0;t<a;t++)this.windowValues[t]=Math.pow(Math.E,-.5*Math.pow((t-(a-1)/2)/(e*(a-1)/2),2));break;case"hamming":for(t=0;t<a;t++)this.windowValues[t]=.54-.46*Math.cos(Math.PI*2*t/(a-1));break;case"hann":case void 0:for(t=0;t<a;t++)this.windowValues[t]=.5*(1-Math.cos(Math.PI*2*t/(a-1)));break;case"lanczoz":for(t=0;t<a;t++)this.windowValues[t]=Math.sin(Math.PI*(2*t/(a-1)-1))/(Math.PI*(2*t/(a-1)-1));break;case"rectangular":for(t=0;t<a;t++)this.windowValues[t]=1;break;case"triangular":for(t=0;t<a;t++)this.windowValues[t]=2/a*(a/2-Math.abs(t-(a-1)/2));break;default:throw Error("No such window function '"+T+"'")}let w=1,m=a>>1;for(;w<a;){for(t=0;t<w;t++)this.reverseTable[t+w]=this.reverseTable[t]+m;w=w<<1,m=m>>1}for(t=0;t<a;t++)this.sinTable[t]=Math.sin(-Math.PI/t),this.cosTable[t]=Math.cos(-Math.PI/t);this.calculateSpectrum=function(p){let h=this.bufferSize,P=this.cosTable,u=this.sinTable,g=this.reverseTable,o=new Float32Array(h),l=new Float32Array(h),V=2/this.bufferSize,I=Math.sqrt,i,v,F,R=new Float32Array(h/2),B=Math.floor(Math.log(h)/Math.LN2);if(Math.pow(2,B)!==h)throw new Error("Invalid buffer size, must be a power of 2.");if(h!==p.length)throw new Error("Supplied buffer is not the same size as defined FFT. FFT Size: "+h+" Buffer Size: "+p.length);let c=1,y,A,k,d,M,q,D,E;for(let s=0;s<h;s++)o[s]=p[g[s]]*this.windowValues[g[s]],l[s]=0;for(;c<h;){y=P[c],A=u[c],k=1,d=0;for(let s=0;s<c;s++){let r=s;for(;r<h;)M=r+c,q=k*o[M]-d*l[M],D=k*l[M]+d*o[M],o[M]=o[r]-q,l[M]=l[r]-D,o[r]+=q,l[r]+=D,r+=c<<1;E=k,k=E*y-d*A,d=E*A+d*y}c=c<<1}for(let s=0,r=h/2;s<r;s++)i=o[s],v=l[s],F=V*I(i*i+v*v),F>this.peak&&(this.peakBand=s,this.peak=F),R[s]=F;return R}}onmessage=function(a){const n=a.data,T=n.width,e=n.fftSamples,t=[],w=n.channelData.length/T,m=Math.min(e-1,Math.round(Math.max(0,e-w))),p=new x(n.fftSamples,n.sampleRate,n.windowFunc,n.alpha),h=1;for(let P=0;P<h;P++){const u=n.channelData,g=[];let o=0;for(;o+e<n.channelData.length;){const l=u.slice(o,o+e),V=p.calculateSpectrum(l),I=new Uint8Array(e/2);let i;for(i=0;i<e/2;i++)I[i]=Math.max(-255,Math.log10(V[i])*45);g.push(I),o+=e-m}t.push(g)}postMessage(t[0])}})();
