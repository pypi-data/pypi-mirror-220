# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.corehr.v1.model.create_company_request import CreateCompanyRequest
from lark_oapi.api.corehr.v1.model.create_company_response import CreateCompanyResponse
from lark_oapi.api.corehr.v1.model.delete_company_request import DeleteCompanyRequest
from lark_oapi.api.corehr.v1.model.delete_company_response import DeleteCompanyResponse
from lark_oapi.api.corehr.v1.model.get_company_request import GetCompanyRequest
from lark_oapi.api.corehr.v1.model.get_company_response import GetCompanyResponse
from lark_oapi.api.corehr.v1.model.list_company_request import ListCompanyRequest
from lark_oapi.api.corehr.v1.model.list_company_response import ListCompanyResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Company(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateCompanyRequest, option: RequestOption = RequestOption()) -> CreateCompanyResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateCompanyResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateCompanyResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteCompanyRequest, option: RequestOption = RequestOption()) -> DeleteCompanyResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteCompanyResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteCompanyResponse)
        response.raw = resp

        return response

    def get(self, request: GetCompanyRequest, option: RequestOption = RequestOption()) -> GetCompanyResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetCompanyResponse = JSON.unmarshal(str(resp.content, UTF_8), GetCompanyResponse)
        response.raw = resp

        return response

    def list(self, request: ListCompanyRequest, option: RequestOption = RequestOption()) -> ListCompanyResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListCompanyResponse = JSON.unmarshal(str(resp.content, UTF_8), ListCompanyResponse)
        response.raw = resp

        return response
