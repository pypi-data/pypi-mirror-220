# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.corehr.v1.model.create_job_data_request import CreateJobDataRequest
from lark_oapi.api.corehr.v1.model.create_job_data_response import CreateJobDataResponse
from lark_oapi.api.corehr.v1.model.delete_job_data_request import DeleteJobDataRequest
from lark_oapi.api.corehr.v1.model.delete_job_data_response import DeleteJobDataResponse
from lark_oapi.api.corehr.v1.model.get_job_data_request import GetJobDataRequest
from lark_oapi.api.corehr.v1.model.get_job_data_response import GetJobDataResponse
from lark_oapi.api.corehr.v1.model.list_job_data_request import ListJobDataRequest
from lark_oapi.api.corehr.v1.model.list_job_data_response import ListJobDataResponse
from lark_oapi.api.corehr.v1.model.patch_job_data_request import PatchJobDataRequest
from lark_oapi.api.corehr.v1.model.patch_job_data_response import PatchJobDataResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class JobData(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateJobDataRequest, option: RequestOption = RequestOption()) -> CreateJobDataResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateJobDataResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateJobDataResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteJobDataRequest, option: RequestOption = RequestOption()) -> DeleteJobDataResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteJobDataResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteJobDataResponse)
        response.raw = resp

        return response

    def get(self, request: GetJobDataRequest, option: RequestOption = RequestOption()) -> GetJobDataResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetJobDataResponse = JSON.unmarshal(str(resp.content, UTF_8), GetJobDataResponse)
        response.raw = resp

        return response

    def list(self, request: ListJobDataRequest, option: RequestOption = RequestOption()) -> ListJobDataResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListJobDataResponse = JSON.unmarshal(str(resp.content, UTF_8), ListJobDataResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchJobDataRequest, option: RequestOption = RequestOption()) -> PatchJobDataResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchJobDataResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchJobDataResponse)
        response.raw = resp

        return response
