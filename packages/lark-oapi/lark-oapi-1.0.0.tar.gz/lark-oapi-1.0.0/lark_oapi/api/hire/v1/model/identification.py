# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class Identification(object):
    _types = {
        "identification_number": str,
        "identification_type": int,
    }

    def __init__(self, d):
        self.identification_number: Optional[str] = None
        self.identification_type: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "IdentificationBuilder":
        return IdentificationBuilder()


class IdentificationBuilder(object):
    def __init__(self, identification: Identification = Identification({})) -> None:
        self._identification: Identification = identification

    def identification_number(self, identification_number: str) -> "IdentificationBuilder":
        self._identification.identification_number = identification_number
        return self

    def identification_type(self, identification_type: int) -> "IdentificationBuilder":
        self._identification.identification_type = identification_type
        return self

    def build(self) -> "Identification":
        return self._identification
