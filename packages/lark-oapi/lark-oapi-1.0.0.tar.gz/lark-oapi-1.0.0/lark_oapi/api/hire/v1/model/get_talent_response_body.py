# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .talent import Talent


class GetTalentResponseBody(object):
    _types = {
        "talent": Talent,
    }

    def __init__(self, d):
        self.talent: Optional[Talent] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetTalentResponseBodyBuilder":
        return GetTalentResponseBodyBuilder()


class GetTalentResponseBodyBuilder(object):
    def __init__(self, get_talent_response_body: GetTalentResponseBody = GetTalentResponseBody({})) -> None:
        self._get_talent_response_body: GetTalentResponseBody = get_talent_response_body

    def talent(self, talent: Talent) -> "GetTalentResponseBodyBuilder":
        self._get_talent_response_body.talent = talent
        return self

    def build(self) -> "GetTalentResponseBody":
        return self._get_talent_response_body
