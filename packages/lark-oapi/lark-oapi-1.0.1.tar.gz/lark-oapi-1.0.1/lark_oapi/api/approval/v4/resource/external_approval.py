# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.approval.v4.model.create_external_approval_request import CreateExternalApprovalRequest
from lark_oapi.api.approval.v4.model.create_external_approval_response import CreateExternalApprovalResponse
from lark_oapi.api.approval.v4.model.get_external_approval_request import GetExternalApprovalRequest
from lark_oapi.api.approval.v4.model.get_external_approval_response import GetExternalApprovalResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class ExternalApproval(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateExternalApprovalRequest,
               option: RequestOption = RequestOption()) -> CreateExternalApprovalResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateExternalApprovalResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                  CreateExternalApprovalResponse)
        response.raw = resp

        return response

    def get(self, request: GetExternalApprovalRequest,
            option: RequestOption = RequestOption()) -> GetExternalApprovalResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetExternalApprovalResponse = JSON.unmarshal(str(resp.content, UTF_8), GetExternalApprovalResponse)
        response.raw = resp

        return response
