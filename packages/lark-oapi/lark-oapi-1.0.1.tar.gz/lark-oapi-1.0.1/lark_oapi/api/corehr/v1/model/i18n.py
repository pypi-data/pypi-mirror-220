# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class I18n(object):
    _types = {
        "lang": str,
        "value": str,
    }

    def __init__(self, d):
        self.lang: Optional[str] = None
        self.value: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "I18nBuilder":
        return I18nBuilder()


class I18nBuilder(object):
    def __init__(self, i18n: I18n = I18n({})) -> None:
        self._i18n: I18n = i18n

    def lang(self, lang: str) -> "I18nBuilder":
        self._i18n.lang = lang
        return self

    def value(self, value: str) -> "I18nBuilder":
        self._i18n.value = value
        return self

    def build(self) -> "I18n":
        return self._i18n
