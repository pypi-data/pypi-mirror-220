# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.corehr.v1.model.create_contract_request import CreateContractRequest
from lark_oapi.api.corehr.v1.model.create_contract_response import CreateContractResponse
from lark_oapi.api.corehr.v1.model.delete_contract_request import DeleteContractRequest
from lark_oapi.api.corehr.v1.model.delete_contract_response import DeleteContractResponse
from lark_oapi.api.corehr.v1.model.get_contract_request import GetContractRequest
from lark_oapi.api.corehr.v1.model.get_contract_response import GetContractResponse
from lark_oapi.api.corehr.v1.model.list_contract_request import ListContractRequest
from lark_oapi.api.corehr.v1.model.list_contract_response import ListContractResponse
from lark_oapi.api.corehr.v1.model.patch_contract_request import PatchContractRequest
from lark_oapi.api.corehr.v1.model.patch_contract_response import PatchContractResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Contract(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateContractRequest, option: RequestOption = RequestOption()) -> CreateContractResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateContractResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateContractResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteContractRequest, option: RequestOption = RequestOption()) -> DeleteContractResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteContractResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteContractResponse)
        response.raw = resp

        return response

    def get(self, request: GetContractRequest, option: RequestOption = RequestOption()) -> GetContractResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetContractResponse = JSON.unmarshal(str(resp.content, UTF_8), GetContractResponse)
        response.raw = resp

        return response

    def list(self, request: ListContractRequest, option: RequestOption = RequestOption()) -> ListContractResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListContractResponse = JSON.unmarshal(str(resp.content, UTF_8), ListContractResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchContractRequest, option: RequestOption = RequestOption()) -> PatchContractResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchContractResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchContractResponse)
        response.raw = resp

        return response
