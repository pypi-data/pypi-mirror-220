# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.mail.v1.model.create_public_mailbox_request import CreatePublicMailboxRequest
from lark_oapi.api.mail.v1.model.create_public_mailbox_response import CreatePublicMailboxResponse
from lark_oapi.api.mail.v1.model.delete_public_mailbox_request import DeletePublicMailboxRequest
from lark_oapi.api.mail.v1.model.delete_public_mailbox_response import DeletePublicMailboxResponse
from lark_oapi.api.mail.v1.model.get_public_mailbox_request import GetPublicMailboxRequest
from lark_oapi.api.mail.v1.model.get_public_mailbox_response import GetPublicMailboxResponse
from lark_oapi.api.mail.v1.model.list_public_mailbox_request import ListPublicMailboxRequest
from lark_oapi.api.mail.v1.model.list_public_mailbox_response import ListPublicMailboxResponse
from lark_oapi.api.mail.v1.model.patch_public_mailbox_request import PatchPublicMailboxRequest
from lark_oapi.api.mail.v1.model.patch_public_mailbox_response import PatchPublicMailboxResponse
from lark_oapi.api.mail.v1.model.update_public_mailbox_request import UpdatePublicMailboxRequest
from lark_oapi.api.mail.v1.model.update_public_mailbox_response import UpdatePublicMailboxResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class PublicMailbox(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreatePublicMailboxRequest,
               option: RequestOption = RequestOption()) -> CreatePublicMailboxResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreatePublicMailboxResponse = JSON.unmarshal(str(resp.content, UTF_8), CreatePublicMailboxResponse)
        response.raw = resp

        return response

    def delete(self, request: DeletePublicMailboxRequest,
               option: RequestOption = RequestOption()) -> DeletePublicMailboxResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeletePublicMailboxResponse = JSON.unmarshal(str(resp.content, UTF_8), DeletePublicMailboxResponse)
        response.raw = resp

        return response

    def get(self, request: GetPublicMailboxRequest,
            option: RequestOption = RequestOption()) -> GetPublicMailboxResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetPublicMailboxResponse = JSON.unmarshal(str(resp.content, UTF_8), GetPublicMailboxResponse)
        response.raw = resp

        return response

    def list(self, request: ListPublicMailboxRequest,
             option: RequestOption = RequestOption()) -> ListPublicMailboxResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListPublicMailboxResponse = JSON.unmarshal(str(resp.content, UTF_8), ListPublicMailboxResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchPublicMailboxRequest,
              option: RequestOption = RequestOption()) -> PatchPublicMailboxResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchPublicMailboxResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchPublicMailboxResponse)
        response.raw = resp

        return response

    def update(self, request: UpdatePublicMailboxRequest,
               option: RequestOption = RequestOption()) -> UpdatePublicMailboxResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UpdatePublicMailboxResponse = JSON.unmarshal(str(resp.content, UTF_8), UpdatePublicMailboxResponse)
        response.raw = resp

        return response
