# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .calendar_event import CalendarEvent


class CreateCalendarEventResponseBody(object):
    _types = {
        "event": CalendarEvent,
    }

    def __init__(self, d):
        self.event: Optional[CalendarEvent] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateCalendarEventResponseBodyBuilder":
        return CreateCalendarEventResponseBodyBuilder()


class CreateCalendarEventResponseBodyBuilder(object):
    def __init__(self,
                 create_calendar_event_response_body: CreateCalendarEventResponseBody = CreateCalendarEventResponseBody(
                     {})) -> None:
        self._create_calendar_event_response_body: CreateCalendarEventResponseBody = create_calendar_event_response_body

    def event(self, event: CalendarEvent) -> "CreateCalendarEventResponseBodyBuilder":
        self._create_calendar_event_response_body.event = event
        return self

    def build(self) -> "CreateCalendarEventResponseBody":
        return self._create_calendar_event_response_body
