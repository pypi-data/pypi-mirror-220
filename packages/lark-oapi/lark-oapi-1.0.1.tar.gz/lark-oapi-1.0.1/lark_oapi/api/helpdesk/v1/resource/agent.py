# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.helpdesk.v1.model.agent_email_agent_request import AgentEmailAgentRequest
from lark_oapi.api.helpdesk.v1.model.agent_email_agent_response import AgentEmailAgentResponse
from lark_oapi.api.helpdesk.v1.model.patch_agent_request import PatchAgentRequest
from lark_oapi.api.helpdesk.v1.model.patch_agent_response import PatchAgentResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Agent(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def agent_email(self, request: AgentEmailAgentRequest,
                    option: RequestOption = RequestOption()) -> AgentEmailAgentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: AgentEmailAgentResponse = JSON.unmarshal(str(resp.content, UTF_8), AgentEmailAgentResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchAgentRequest, option: RequestOption = RequestOption()) -> PatchAgentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchAgentResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchAgentResponse)
        response.raw = resp

        return response
