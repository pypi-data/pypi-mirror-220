# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.acs.v1.model.get_user_request import GetUserRequest
from lark_oapi.api.acs.v1.model.get_user_response import GetUserResponse
from lark_oapi.api.acs.v1.model.list_user_request import ListUserRequest
from lark_oapi.api.acs.v1.model.list_user_response import ListUserResponse
from lark_oapi.api.acs.v1.model.patch_user_request import PatchUserRequest
from lark_oapi.api.acs.v1.model.patch_user_response import PatchUserResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class User(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def get(self, request: GetUserRequest, option: RequestOption = RequestOption()) -> GetUserResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetUserResponse = JSON.unmarshal(str(resp.content, UTF_8), GetUserResponse)
        response.raw = resp

        return response

    def list(self, request: ListUserRequest, option: RequestOption = RequestOption()) -> ListUserResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListUserResponse = JSON.unmarshal(str(resp.content, UTF_8), ListUserResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchUserRequest, option: RequestOption = RequestOption()) -> PatchUserResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchUserResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchUserResponse)
        response.raw = resp

        return response
