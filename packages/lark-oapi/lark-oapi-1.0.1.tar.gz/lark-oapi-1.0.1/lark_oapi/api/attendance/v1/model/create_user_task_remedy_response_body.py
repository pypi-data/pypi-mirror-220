# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .user_task_remedy import UserTaskRemedy


class CreateUserTaskRemedyResponseBody(object):
    _types = {
        "user_remedy": UserTaskRemedy,
    }

    def __init__(self, d):
        self.user_remedy: Optional[UserTaskRemedy] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateUserTaskRemedyResponseBodyBuilder":
        return CreateUserTaskRemedyResponseBodyBuilder()


class CreateUserTaskRemedyResponseBodyBuilder(object):
    def __init__(self,
                 create_user_task_remedy_response_body: CreateUserTaskRemedyResponseBody = CreateUserTaskRemedyResponseBody(
                     {})) -> None:
        self._create_user_task_remedy_response_body: CreateUserTaskRemedyResponseBody = create_user_task_remedy_response_body

    def user_remedy(self, user_remedy: UserTaskRemedy) -> "CreateUserTaskRemedyResponseBodyBuilder":
        self._create_user_task_remedy_response_body.user_remedy = user_remedy
        return self

    def build(self) -> "CreateUserTaskRemedyResponseBody":
        return self._create_user_task_remedy_response_body
