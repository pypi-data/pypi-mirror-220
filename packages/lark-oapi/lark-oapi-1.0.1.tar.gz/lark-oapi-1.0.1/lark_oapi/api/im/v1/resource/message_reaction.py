# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.im.v1.model.create_message_reaction_request import CreateMessageReactionRequest
from lark_oapi.api.im.v1.model.create_message_reaction_response import CreateMessageReactionResponse
from lark_oapi.api.im.v1.model.delete_message_reaction_request import DeleteMessageReactionRequest
from lark_oapi.api.im.v1.model.delete_message_reaction_response import DeleteMessageReactionResponse
from lark_oapi.api.im.v1.model.list_message_reaction_request import ListMessageReactionRequest
from lark_oapi.api.im.v1.model.list_message_reaction_response import ListMessageReactionResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class MessageReaction(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateMessageReactionRequest,
               option: RequestOption = RequestOption()) -> CreateMessageReactionResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateMessageReactionResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                 CreateMessageReactionResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteMessageReactionRequest,
               option: RequestOption = RequestOption()) -> DeleteMessageReactionResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteMessageReactionResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                 DeleteMessageReactionResponse)
        response.raw = resp

        return response

    def list(self, request: ListMessageReactionRequest,
             option: RequestOption = RequestOption()) -> ListMessageReactionResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListMessageReactionResponse = JSON.unmarshal(str(resp.content, UTF_8), ListMessageReactionResponse)
        response.raw = resp

        return response
