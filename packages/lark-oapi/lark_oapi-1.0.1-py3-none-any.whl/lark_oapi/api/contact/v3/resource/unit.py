# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.contact.v3.model.bind_department_unit_request import BindDepartmentUnitRequest
from lark_oapi.api.contact.v3.model.bind_department_unit_response import BindDepartmentUnitResponse
from lark_oapi.api.contact.v3.model.create_unit_request import CreateUnitRequest
from lark_oapi.api.contact.v3.model.create_unit_response import CreateUnitResponse
from lark_oapi.api.contact.v3.model.delete_unit_request import DeleteUnitRequest
from lark_oapi.api.contact.v3.model.delete_unit_response import DeleteUnitResponse
from lark_oapi.api.contact.v3.model.get_unit_request import GetUnitRequest
from lark_oapi.api.contact.v3.model.get_unit_response import GetUnitResponse
from lark_oapi.api.contact.v3.model.list_department_unit_request import ListDepartmentUnitRequest
from lark_oapi.api.contact.v3.model.list_department_unit_response import ListDepartmentUnitResponse
from lark_oapi.api.contact.v3.model.list_unit_request import ListUnitRequest
from lark_oapi.api.contact.v3.model.list_unit_response import ListUnitResponse
from lark_oapi.api.contact.v3.model.patch_unit_request import PatchUnitRequest
from lark_oapi.api.contact.v3.model.patch_unit_response import PatchUnitResponse
from lark_oapi.api.contact.v3.model.unbind_department_unit_request import UnbindDepartmentUnitRequest
from lark_oapi.api.contact.v3.model.unbind_department_unit_response import UnbindDepartmentUnitResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Unit(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def bind_department(self, request: BindDepartmentUnitRequest,
                        option: RequestOption = RequestOption()) -> BindDepartmentUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: BindDepartmentUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), BindDepartmentUnitResponse)
        response.raw = resp

        return response

    def create(self, request: CreateUnitRequest, option: RequestOption = RequestOption()) -> CreateUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateUnitResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteUnitRequest, option: RequestOption = RequestOption()) -> DeleteUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteUnitResponse)
        response.raw = resp

        return response

    def get(self, request: GetUnitRequest, option: RequestOption = RequestOption()) -> GetUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), GetUnitResponse)
        response.raw = resp

        return response

    def list(self, request: ListUnitRequest, option: RequestOption = RequestOption()) -> ListUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), ListUnitResponse)
        response.raw = resp

        return response

    def list_department(self, request: ListDepartmentUnitRequest,
                        option: RequestOption = RequestOption()) -> ListDepartmentUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListDepartmentUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), ListDepartmentUnitResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchUnitRequest, option: RequestOption = RequestOption()) -> PatchUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchUnitResponse)
        response.raw = resp

        return response

    def unbind_department(self, request: UnbindDepartmentUnitRequest,
                          option: RequestOption = RequestOption()) -> UnbindDepartmentUnitResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UnbindDepartmentUnitResponse = JSON.unmarshal(str(resp.content, UTF_8), UnbindDepartmentUnitResponse)
        response.raw = resp

        return response
