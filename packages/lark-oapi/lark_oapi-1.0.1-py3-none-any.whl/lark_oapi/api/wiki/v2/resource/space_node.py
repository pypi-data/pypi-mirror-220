# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.wiki.v2.model.copy_space_node_request import CopySpaceNodeRequest
from lark_oapi.api.wiki.v2.model.copy_space_node_response import CopySpaceNodeResponse
from lark_oapi.api.wiki.v2.model.create_space_node_request import CreateSpaceNodeRequest
from lark_oapi.api.wiki.v2.model.create_space_node_response import CreateSpaceNodeResponse
from lark_oapi.api.wiki.v2.model.list_space_node_request import ListSpaceNodeRequest
from lark_oapi.api.wiki.v2.model.list_space_node_response import ListSpaceNodeResponse
from lark_oapi.api.wiki.v2.model.move_docs_to_wiki_space_node_request import MoveDocsToWikiSpaceNodeRequest
from lark_oapi.api.wiki.v2.model.move_docs_to_wiki_space_node_response import MoveDocsToWikiSpaceNodeResponse
from lark_oapi.api.wiki.v2.model.move_space_node_request import MoveSpaceNodeRequest
from lark_oapi.api.wiki.v2.model.move_space_node_response import MoveSpaceNodeResponse
from lark_oapi.api.wiki.v2.model.update_title_space_node_request import UpdateTitleSpaceNodeRequest
from lark_oapi.api.wiki.v2.model.update_title_space_node_response import UpdateTitleSpaceNodeResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class SpaceNode(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def copy(self, request: CopySpaceNodeRequest, option: RequestOption = RequestOption()) -> CopySpaceNodeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CopySpaceNodeResponse = JSON.unmarshal(str(resp.content, UTF_8), CopySpaceNodeResponse)
        response.raw = resp

        return response

    def create(self, request: CreateSpaceNodeRequest,
               option: RequestOption = RequestOption()) -> CreateSpaceNodeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateSpaceNodeResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateSpaceNodeResponse)
        response.raw = resp

        return response

    def list(self, request: ListSpaceNodeRequest, option: RequestOption = RequestOption()) -> ListSpaceNodeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListSpaceNodeResponse = JSON.unmarshal(str(resp.content, UTF_8), ListSpaceNodeResponse)
        response.raw = resp

        return response

    def move(self, request: MoveSpaceNodeRequest, option: RequestOption = RequestOption()) -> MoveSpaceNodeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: MoveSpaceNodeResponse = JSON.unmarshal(str(resp.content, UTF_8), MoveSpaceNodeResponse)
        response.raw = resp

        return response

    def move_docs_to_wiki(self, request: MoveDocsToWikiSpaceNodeRequest,
                          option: RequestOption = RequestOption()) -> MoveDocsToWikiSpaceNodeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: MoveDocsToWikiSpaceNodeResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                   MoveDocsToWikiSpaceNodeResponse)
        response.raw = resp

        return response

    def update_title(self, request: UpdateTitleSpaceNodeRequest,
                     option: RequestOption = RequestOption()) -> UpdateTitleSpaceNodeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UpdateTitleSpaceNodeResponse = JSON.unmarshal(str(resp.content, UTF_8), UpdateTitleSpaceNodeResponse)
        response.raw = resp

        return response
