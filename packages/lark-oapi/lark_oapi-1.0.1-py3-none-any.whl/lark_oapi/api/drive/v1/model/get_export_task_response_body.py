# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .export_task import ExportTask


class GetExportTaskResponseBody(object):
    _types = {
        "result": ExportTask,
    }

    def __init__(self, d):
        self.result: Optional[ExportTask] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetExportTaskResponseBodyBuilder":
        return GetExportTaskResponseBodyBuilder()


class GetExportTaskResponseBodyBuilder(object):
    def __init__(self,
                 get_export_task_response_body: GetExportTaskResponseBody = GetExportTaskResponseBody({})) -> None:
        self._get_export_task_response_body: GetExportTaskResponseBody = get_export_task_response_body

    def result(self, result: ExportTask) -> "GetExportTaskResponseBodyBuilder":
        self._get_export_task_response_body.result = result
        return self

    def build(self) -> "GetExportTaskResponseBody":
        return self._get_export_task_response_body
