# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .entity import Entity


class CreateEntityResponseBody(object):
    _types = {
        "entity": Entity,
    }

    def __init__(self, d):
        self.entity: Optional[Entity] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateEntityResponseBodyBuilder":
        return CreateEntityResponseBodyBuilder()


class CreateEntityResponseBodyBuilder(object):
    def __init__(self, create_entity_response_body: CreateEntityResponseBody = CreateEntityResponseBody({})) -> None:
        self._create_entity_response_body: CreateEntityResponseBody = create_entity_response_body

    def entity(self, entity: Entity) -> "CreateEntityResponseBodyBuilder":
        self._create_entity_response_body.entity = entity
        return self

    def build(self) -> "CreateEntityResponseBody":
        return self._create_entity_response_body
