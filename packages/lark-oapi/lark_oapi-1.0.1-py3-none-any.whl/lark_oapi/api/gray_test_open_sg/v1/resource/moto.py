# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.gray_test_open_sg.v1.model.create_moto_request import CreateMotoRequest
from lark_oapi.api.gray_test_open_sg.v1.model.create_moto_response import CreateMotoResponse
from lark_oapi.api.gray_test_open_sg.v1.model.get_moto_request import GetMotoRequest
from lark_oapi.api.gray_test_open_sg.v1.model.get_moto_response import GetMotoResponse
from lark_oapi.api.gray_test_open_sg.v1.model.list_moto_request import ListMotoRequest
from lark_oapi.api.gray_test_open_sg.v1.model.list_moto_response import ListMotoResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Moto(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateMotoRequest, option: RequestOption = RequestOption()) -> CreateMotoResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateMotoResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateMotoResponse)
        response.raw = resp

        return response

    def get(self, request: GetMotoRequest, option: RequestOption = RequestOption()) -> GetMotoResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetMotoResponse = JSON.unmarshal(str(resp.content, UTF_8), GetMotoResponse)
        response.raw = resp

        return response

    def list(self, request: ListMotoRequest, option: RequestOption = RequestOption()) -> ListMotoResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListMotoResponse = JSON.unmarshal(str(resp.content, UTF_8), ListMotoResponse)
        response.raw = resp

        return response
