# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.approval.v4.model.check_external_instance_request import CheckExternalInstanceRequest
from lark_oapi.api.approval.v4.model.check_external_instance_response import CheckExternalInstanceResponse
from lark_oapi.api.approval.v4.model.create_external_instance_request import CreateExternalInstanceRequest
from lark_oapi.api.approval.v4.model.create_external_instance_response import CreateExternalInstanceResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class ExternalInstance(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def check(self, request: CheckExternalInstanceRequest,
              option: RequestOption = RequestOption()) -> CheckExternalInstanceResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CheckExternalInstanceResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                 CheckExternalInstanceResponse)
        response.raw = resp

        return response

    def create(self, request: CreateExternalInstanceRequest,
               option: RequestOption = RequestOption()) -> CreateExternalInstanceResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateExternalInstanceResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                  CreateExternalInstanceResponse)
        response.raw = resp

        return response
