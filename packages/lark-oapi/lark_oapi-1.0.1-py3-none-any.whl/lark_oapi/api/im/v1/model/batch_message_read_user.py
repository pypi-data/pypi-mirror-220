# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class BatchMessageReadUser(object):
    _types = {
        "read_count": str,
        "total_count": str,
    }

    def __init__(self, d):
        self.read_count: Optional[str] = None
        self.total_count: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BatchMessageReadUserBuilder":
        return BatchMessageReadUserBuilder()


class BatchMessageReadUserBuilder(object):
    def __init__(self, batch_message_read_user: BatchMessageReadUser = BatchMessageReadUser({})) -> None:
        self._batch_message_read_user: BatchMessageReadUser = batch_message_read_user

    def read_count(self, read_count: str) -> "BatchMessageReadUserBuilder":
        self._batch_message_read_user.read_count = read_count
        return self

    def total_count(self, total_count: str) -> "BatchMessageReadUserBuilder":
        self._batch_message_read_user.total_count = total_count
        return self

    def build(self) -> "BatchMessageReadUser":
        return self._batch_message_read_user
