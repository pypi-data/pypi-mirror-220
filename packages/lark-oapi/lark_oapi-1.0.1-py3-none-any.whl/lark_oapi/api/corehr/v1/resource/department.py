# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.corehr.v1.model.create_department_request import CreateDepartmentRequest
from lark_oapi.api.corehr.v1.model.create_department_response import CreateDepartmentResponse
from lark_oapi.api.corehr.v1.model.delete_department_request import DeleteDepartmentRequest
from lark_oapi.api.corehr.v1.model.delete_department_response import DeleteDepartmentResponse
from lark_oapi.api.corehr.v1.model.get_department_request import GetDepartmentRequest
from lark_oapi.api.corehr.v1.model.get_department_response import GetDepartmentResponse
from lark_oapi.api.corehr.v1.model.list_department_request import ListDepartmentRequest
from lark_oapi.api.corehr.v1.model.list_department_response import ListDepartmentResponse
from lark_oapi.api.corehr.v1.model.patch_department_request import PatchDepartmentRequest
from lark_oapi.api.corehr.v1.model.patch_department_response import PatchDepartmentResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Department(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateDepartmentRequest,
               option: RequestOption = RequestOption()) -> CreateDepartmentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateDepartmentResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateDepartmentResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteDepartmentRequest,
               option: RequestOption = RequestOption()) -> DeleteDepartmentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteDepartmentResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteDepartmentResponse)
        response.raw = resp

        return response

    def get(self, request: GetDepartmentRequest, option: RequestOption = RequestOption()) -> GetDepartmentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetDepartmentResponse = JSON.unmarshal(str(resp.content, UTF_8), GetDepartmentResponse)
        response.raw = resp

        return response

    def list(self, request: ListDepartmentRequest, option: RequestOption = RequestOption()) -> ListDepartmentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListDepartmentResponse = JSON.unmarshal(str(resp.content, UTF_8), ListDepartmentResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchDepartmentRequest,
              option: RequestOption = RequestOption()) -> PatchDepartmentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchDepartmentResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchDepartmentResponse)
        response.raw = resp

        return response
