# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.mail.v1.model.batch_create_mailgroup_manager_request import BatchCreateMailgroupManagerRequest
from lark_oapi.api.mail.v1.model.batch_create_mailgroup_manager_response import BatchCreateMailgroupManagerResponse
from lark_oapi.api.mail.v1.model.batch_delete_mailgroup_manager_request import BatchDeleteMailgroupManagerRequest
from lark_oapi.api.mail.v1.model.batch_delete_mailgroup_manager_response import BatchDeleteMailgroupManagerResponse
from lark_oapi.api.mail.v1.model.list_mailgroup_manager_request import ListMailgroupManagerRequest
from lark_oapi.api.mail.v1.model.list_mailgroup_manager_response import ListMailgroupManagerResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class MailgroupManager(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def batch_create(self, request: BatchCreateMailgroupManagerRequest,
                     option: RequestOption = RequestOption()) -> BatchCreateMailgroupManagerResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: BatchCreateMailgroupManagerResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                       BatchCreateMailgroupManagerResponse)
        response.raw = resp

        return response

    def batch_delete(self, request: BatchDeleteMailgroupManagerRequest,
                     option: RequestOption = RequestOption()) -> BatchDeleteMailgroupManagerResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: BatchDeleteMailgroupManagerResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                       BatchDeleteMailgroupManagerResponse)
        response.raw = resp

        return response

    def list(self, request: ListMailgroupManagerRequest,
             option: RequestOption = RequestOption()) -> ListMailgroupManagerResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListMailgroupManagerResponse = JSON.unmarshal(str(resp.content, UTF_8), ListMailgroupManagerResponse)
        response.raw = resp

        return response
