# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .comment import Comment


class UpdateTaskCommentResponseBody(object):
    _types = {
        "comment": Comment,
    }

    def __init__(self, d):
        self.comment: Optional[Comment] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "UpdateTaskCommentResponseBodyBuilder":
        return UpdateTaskCommentResponseBodyBuilder()


class UpdateTaskCommentResponseBodyBuilder(object):
    def __init__(self, update_task_comment_response_body: UpdateTaskCommentResponseBody = UpdateTaskCommentResponseBody(
        {})) -> None:
        self._update_task_comment_response_body: UpdateTaskCommentResponseBody = update_task_comment_response_body

    def comment(self, comment: Comment) -> "UpdateTaskCommentResponseBodyBuilder":
        self._update_task_comment_response_body.comment = comment
        return self

    def build(self) -> "UpdateTaskCommentResponseBody":
        return self._update_task_comment_response_body
