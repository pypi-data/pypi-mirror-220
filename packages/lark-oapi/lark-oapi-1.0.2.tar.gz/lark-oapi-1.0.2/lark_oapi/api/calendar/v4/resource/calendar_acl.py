# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.calendar.v4.model.create_calendar_acl_request import CreateCalendarAclRequest
from lark_oapi.api.calendar.v4.model.create_calendar_acl_response import CreateCalendarAclResponse
from lark_oapi.api.calendar.v4.model.delete_calendar_acl_request import DeleteCalendarAclRequest
from lark_oapi.api.calendar.v4.model.delete_calendar_acl_response import DeleteCalendarAclResponse
from lark_oapi.api.calendar.v4.model.list_calendar_acl_request import ListCalendarAclRequest
from lark_oapi.api.calendar.v4.model.list_calendar_acl_response import ListCalendarAclResponse
from lark_oapi.api.calendar.v4.model.subscription_calendar_acl_request import SubscriptionCalendarAclRequest
from lark_oapi.api.calendar.v4.model.subscription_calendar_acl_response import SubscriptionCalendarAclResponse
from lark_oapi.api.calendar.v4.model.unsubscription_calendar_acl_request import UnsubscriptionCalendarAclRequest
from lark_oapi.api.calendar.v4.model.unsubscription_calendar_acl_response import UnsubscriptionCalendarAclResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class CalendarAcl(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateCalendarAclRequest,
               option: RequestOption = RequestOption()) -> CreateCalendarAclResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateCalendarAclResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateCalendarAclResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteCalendarAclRequest,
               option: RequestOption = RequestOption()) -> DeleteCalendarAclResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteCalendarAclResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteCalendarAclResponse)
        response.raw = resp

        return response

    def list(self, request: ListCalendarAclRequest, option: RequestOption = RequestOption()) -> ListCalendarAclResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListCalendarAclResponse = JSON.unmarshal(str(resp.content, UTF_8), ListCalendarAclResponse)
        response.raw = resp

        return response

    def subscription(self, request: SubscriptionCalendarAclRequest,
                     option: RequestOption = RequestOption()) -> SubscriptionCalendarAclResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SubscriptionCalendarAclResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                   SubscriptionCalendarAclResponse)
        response.raw = resp

        return response

    def unsubscription(self, request: UnsubscriptionCalendarAclRequest,
                       option: RequestOption = RequestOption()) -> UnsubscriptionCalendarAclResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UnsubscriptionCalendarAclResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                     UnsubscriptionCalendarAclResponse)
        response.raw = resp

        return response
