# Code generated by Lark OpenAPI.

from typing import *

from requests_toolbelt import MultipartEncoder

from lark_oapi.api.admin.v1.model.create_badge_image_request import CreateBadgeImageRequest
from lark_oapi.api.admin.v1.model.create_badge_image_response import CreateBadgeImageResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8, CONTENT_TYPE
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify
from lark_oapi.core.utils import Files


class BadgeImage(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateBadgeImageRequest,
               option: RequestOption = RequestOption()) -> CreateBadgeImageResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 处理 form-data
        if request.body is not None:
            form_data = MultipartEncoder(Files.parse_form_data(request.body))
            option.headers[CONTENT_TYPE] = form_data.content_type
            request.body = form_data

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateBadgeImageResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateBadgeImageResponse)
        response.raw = resp

        return response
