# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .job import Job


class CreateJobResponseBody(object):
    _types = {
        "job": Job,
    }

    def __init__(self, d):
        self.job: Optional[Job] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateJobResponseBodyBuilder":
        return CreateJobResponseBodyBuilder()


class CreateJobResponseBodyBuilder(object):
    def __init__(self, create_job_response_body: CreateJobResponseBody = CreateJobResponseBody({})) -> None:
        self._create_job_response_body: CreateJobResponseBody = create_job_response_body

    def job(self, job: Job) -> "CreateJobResponseBodyBuilder":
        self._create_job_response_body.job = job
        return self

    def build(self) -> "CreateJobResponseBody":
        return self._create_job_response_body
