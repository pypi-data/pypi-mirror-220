# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.mail.v1.model.create_mailgroup_request import CreateMailgroupRequest
from lark_oapi.api.mail.v1.model.create_mailgroup_response import CreateMailgroupResponse
from lark_oapi.api.mail.v1.model.delete_mailgroup_request import DeleteMailgroupRequest
from lark_oapi.api.mail.v1.model.delete_mailgroup_response import DeleteMailgroupResponse
from lark_oapi.api.mail.v1.model.get_mailgroup_request import GetMailgroupRequest
from lark_oapi.api.mail.v1.model.get_mailgroup_response import GetMailgroupResponse
from lark_oapi.api.mail.v1.model.list_mailgroup_request import ListMailgroupRequest
from lark_oapi.api.mail.v1.model.list_mailgroup_response import ListMailgroupResponse
from lark_oapi.api.mail.v1.model.patch_mailgroup_request import PatchMailgroupRequest
from lark_oapi.api.mail.v1.model.patch_mailgroup_response import PatchMailgroupResponse
from lark_oapi.api.mail.v1.model.update_mailgroup_request import UpdateMailgroupRequest
from lark_oapi.api.mail.v1.model.update_mailgroup_response import UpdateMailgroupResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Mailgroup(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateMailgroupRequest,
               option: RequestOption = RequestOption()) -> CreateMailgroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateMailgroupResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateMailgroupResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteMailgroupRequest,
               option: RequestOption = RequestOption()) -> DeleteMailgroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteMailgroupResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteMailgroupResponse)
        response.raw = resp

        return response

    def get(self, request: GetMailgroupRequest, option: RequestOption = RequestOption()) -> GetMailgroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetMailgroupResponse = JSON.unmarshal(str(resp.content, UTF_8), GetMailgroupResponse)
        response.raw = resp

        return response

    def list(self, request: ListMailgroupRequest, option: RequestOption = RequestOption()) -> ListMailgroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListMailgroupResponse = JSON.unmarshal(str(resp.content, UTF_8), ListMailgroupResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchMailgroupRequest, option: RequestOption = RequestOption()) -> PatchMailgroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchMailgroupResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchMailgroupResponse)
        response.raw = resp

        return response

    def update(self, request: UpdateMailgroupRequest,
               option: RequestOption = RequestOption()) -> UpdateMailgroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UpdateMailgroupResponse = JSON.unmarshal(str(resp.content, UTF_8), UpdateMailgroupResponse)
        response.raw = resp

        return response
