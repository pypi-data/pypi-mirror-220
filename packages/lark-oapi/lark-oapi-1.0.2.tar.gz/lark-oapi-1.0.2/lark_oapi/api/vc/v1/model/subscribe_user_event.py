# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .user_id import UserId


class SubscribeUserEvent(object):
    _types = {
        "user_id": UserId,
    }

    def __init__(self, d):
        self.user_id: Optional[UserId] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "SubscribeUserEventBuilder":
        return SubscribeUserEventBuilder()


class SubscribeUserEventBuilder(object):
    def __init__(self, subscribe_user_event: SubscribeUserEvent = SubscribeUserEvent({})) -> None:
        self._subscribe_user_event: SubscribeUserEvent = subscribe_user_event

    def user_id(self, user_id: UserId) -> "SubscribeUserEventBuilder":
        self._subscribe_user_event.user_id = user_id
        return self

    def build(self) -> "SubscribeUserEvent":
        return self._subscribe_user_event
