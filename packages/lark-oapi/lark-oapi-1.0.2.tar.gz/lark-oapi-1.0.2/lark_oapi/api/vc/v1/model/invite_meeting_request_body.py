# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .meeting_user import MeetingUser


class InviteMeetingRequestBody(object):
    _types = {
        "invitees": List[MeetingUser],
    }

    def __init__(self, d):
        self.invitees: Optional[List[MeetingUser]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "InviteMeetingRequestBodyBuilder":
        return InviteMeetingRequestBodyBuilder()


class InviteMeetingRequestBodyBuilder(object):
    def __init__(self, invite_meeting_request_body: InviteMeetingRequestBody = InviteMeetingRequestBody({})) -> None:
        self._invite_meeting_request_body: InviteMeetingRequestBody = invite_meeting_request_body

    def invitees(self, invitees: List[MeetingUser]) -> "InviteMeetingRequestBodyBuilder":
        self._invite_meeting_request_body.invitees = invitees
        return self

    def build(self) -> "InviteMeetingRequestBody":
        return self._invite_meeting_request_body
