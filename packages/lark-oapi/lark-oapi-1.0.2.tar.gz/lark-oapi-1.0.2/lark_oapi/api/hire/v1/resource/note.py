# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.hire.v1.model.create_note_request import CreateNoteRequest
from lark_oapi.api.hire.v1.model.create_note_response import CreateNoteResponse
from lark_oapi.api.hire.v1.model.get_note_request import GetNoteRequest
from lark_oapi.api.hire.v1.model.get_note_response import GetNoteResponse
from lark_oapi.api.hire.v1.model.list_note_request import ListNoteRequest
from lark_oapi.api.hire.v1.model.list_note_response import ListNoteResponse
from lark_oapi.api.hire.v1.model.patch_note_request import PatchNoteRequest
from lark_oapi.api.hire.v1.model.patch_note_response import PatchNoteResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Note(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateNoteRequest, option: RequestOption = RequestOption()) -> CreateNoteResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateNoteResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateNoteResponse)
        response.raw = resp

        return response

    def get(self, request: GetNoteRequest, option: RequestOption = RequestOption()) -> GetNoteResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetNoteResponse = JSON.unmarshal(str(resp.content, UTF_8), GetNoteResponse)
        response.raw = resp

        return response

    def list(self, request: ListNoteRequest, option: RequestOption = RequestOption()) -> ListNoteResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListNoteResponse = JSON.unmarshal(str(resp.content, UTF_8), ListNoteResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchNoteRequest, option: RequestOption = RequestOption()) -> PatchNoteResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchNoteResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchNoteResponse)
        response.raw = resp

        return response
