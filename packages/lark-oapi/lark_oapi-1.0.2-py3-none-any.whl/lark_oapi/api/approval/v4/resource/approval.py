# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.approval.v4.model.create_approval_request import CreateApprovalRequest
from lark_oapi.api.approval.v4.model.create_approval_response import CreateApprovalResponse
from lark_oapi.api.approval.v4.model.get_approval_request import GetApprovalRequest
from lark_oapi.api.approval.v4.model.get_approval_response import GetApprovalResponse
from lark_oapi.api.approval.v4.model.subscribe_approval_request import SubscribeApprovalRequest
from lark_oapi.api.approval.v4.model.subscribe_approval_response import SubscribeApprovalResponse
from lark_oapi.api.approval.v4.model.unsubscribe_approval_request import UnsubscribeApprovalRequest
from lark_oapi.api.approval.v4.model.unsubscribe_approval_response import UnsubscribeApprovalResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Approval(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateApprovalRequest, option: RequestOption = RequestOption()) -> CreateApprovalResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateApprovalResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateApprovalResponse)
        response.raw = resp

        return response

    def get(self, request: GetApprovalRequest, option: RequestOption = RequestOption()) -> GetApprovalResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetApprovalResponse = JSON.unmarshal(str(resp.content, UTF_8), GetApprovalResponse)
        response.raw = resp

        return response

    def subscribe(self, request: SubscribeApprovalRequest,
                  option: RequestOption = RequestOption()) -> SubscribeApprovalResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SubscribeApprovalResponse = JSON.unmarshal(str(resp.content, UTF_8), SubscribeApprovalResponse)
        response.raw = resp

        return response

    def unsubscribe(self, request: UnsubscribeApprovalRequest,
                    option: RequestOption = RequestOption()) -> UnsubscribeApprovalResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UnsubscribeApprovalResponse = JSON.unmarshal(str(resp.content, UTF_8), UnsubscribeApprovalResponse)
        response.raw = resp

        return response
