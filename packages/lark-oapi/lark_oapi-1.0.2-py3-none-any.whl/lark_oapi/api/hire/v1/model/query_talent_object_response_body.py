# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .common_schema import CommonSchema


class QueryTalentObjectResponseBody(object):
    _types = {
        "items": List[CommonSchema],
    }

    def __init__(self, d):
        self.items: Optional[List[CommonSchema]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "QueryTalentObjectResponseBodyBuilder":
        return QueryTalentObjectResponseBodyBuilder()


class QueryTalentObjectResponseBodyBuilder(object):
    def __init__(self, query_talent_object_response_body: QueryTalentObjectResponseBody = QueryTalentObjectResponseBody(
        {})) -> None:
        self._query_talent_object_response_body: QueryTalentObjectResponseBody = query_talent_object_response_body

    def items(self, items: List[CommonSchema]) -> "QueryTalentObjectResponseBodyBuilder":
        self._query_talent_object_response_body.items = items
        return self

    def build(self) -> "QueryTalentObjectResponseBody":
        return self._query_talent_object_response_body
