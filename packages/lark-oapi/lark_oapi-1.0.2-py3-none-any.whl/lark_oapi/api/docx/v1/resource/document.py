# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.docx.v1.model.create_document_request import CreateDocumentRequest
from lark_oapi.api.docx.v1.model.create_document_response import CreateDocumentResponse
from lark_oapi.api.docx.v1.model.get_document_request import GetDocumentRequest
from lark_oapi.api.docx.v1.model.get_document_response import GetDocumentResponse
from lark_oapi.api.docx.v1.model.raw_content_document_request import RawContentDocumentRequest
from lark_oapi.api.docx.v1.model.raw_content_document_response import RawContentDocumentResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Document(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateDocumentRequest, option: RequestOption = RequestOption()) -> CreateDocumentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateDocumentResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateDocumentResponse)
        response.raw = resp

        return response

    def get(self, request: GetDocumentRequest, option: RequestOption = RequestOption()) -> GetDocumentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetDocumentResponse = JSON.unmarshal(str(resp.content, UTF_8), GetDocumentResponse)
        response.raw = resp

        return response

    def raw_content(self, request: RawContentDocumentRequest,
                    option: RequestOption = RequestOption()) -> RawContentDocumentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: RawContentDocumentResponse = JSON.unmarshal(str(resp.content, UTF_8), RawContentDocumentResponse)
        response.raw = resp

        return response
