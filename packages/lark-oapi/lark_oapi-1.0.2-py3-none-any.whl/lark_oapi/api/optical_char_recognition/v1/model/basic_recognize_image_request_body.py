# Code generated by Lark OpenAPI.

from typing import *
from typing import IO
from lark_oapi.core.construct import init


class BasicRecognizeImageRequestBody(object):
    _types = {
        "image": str,
    }

    def __init__(self, d):
        self.image: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BasicRecognizeImageRequestBodyBuilder":
        return BasicRecognizeImageRequestBodyBuilder()


class BasicRecognizeImageRequestBodyBuilder(object):
    def __init__(self, basic_recognize_image_request_body: BasicRecognizeImageRequestBody = BasicRecognizeImageRequestBody({})) -> None:
        self._basic_recognize_image_request_body: BasicRecognizeImageRequestBody = basic_recognize_image_request_body
    
    def image(self, image: str) -> "BasicRecognizeImageRequestBodyBuilder":
        self._basic_recognize_image_request_body.image = image
        return self
    
    def build(self) -> "BasicRecognizeImageRequestBody":
        return self._basic_recognize_image_request_body