# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.corehr.v1.model.leave_balances_leave_request import LeaveBalancesLeaveRequest
from lark_oapi.api.corehr.v1.model.leave_balances_leave_response import LeaveBalancesLeaveResponse
from lark_oapi.api.corehr.v1.model.leave_request_history_leave_request import LeaveRequestHistoryLeaveRequest
from lark_oapi.api.corehr.v1.model.leave_request_history_leave_response import LeaveRequestHistoryLeaveResponse
from lark_oapi.api.corehr.v1.model.leave_types_leave_request import LeaveTypesLeaveRequest
from lark_oapi.api.corehr.v1.model.leave_types_leave_response import LeaveTypesLeaveResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Leave(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def leave_balances(self, request: LeaveBalancesLeaveRequest,
                       option: RequestOption = RequestOption()) -> LeaveBalancesLeaveResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: LeaveBalancesLeaveResponse = JSON.unmarshal(str(resp.content, UTF_8), LeaveBalancesLeaveResponse)
        response.raw = resp

        return response

    def leave_request_history(self, request: LeaveRequestHistoryLeaveRequest,
                              option: RequestOption = RequestOption()) -> LeaveRequestHistoryLeaveResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: LeaveRequestHistoryLeaveResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                    LeaveRequestHistoryLeaveResponse)
        response.raw = resp

        return response

    def leave_types(self, request: LeaveTypesLeaveRequest,
                    option: RequestOption = RequestOption()) -> LeaveTypesLeaveResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: LeaveTypesLeaveResponse = JSON.unmarshal(str(resp.content, UTF_8), LeaveTypesLeaveResponse)
        response.raw = resp

        return response
