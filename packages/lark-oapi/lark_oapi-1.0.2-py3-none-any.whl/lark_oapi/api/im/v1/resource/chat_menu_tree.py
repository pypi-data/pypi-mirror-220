# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.im.v1.model.create_chat_menu_tree_request import CreateChatMenuTreeRequest
from lark_oapi.api.im.v1.model.create_chat_menu_tree_response import CreateChatMenuTreeResponse
from lark_oapi.api.im.v1.model.delete_chat_menu_tree_request import DeleteChatMenuTreeRequest
from lark_oapi.api.im.v1.model.delete_chat_menu_tree_response import DeleteChatMenuTreeResponse
from lark_oapi.api.im.v1.model.get_chat_menu_tree_request import GetChatMenuTreeRequest
from lark_oapi.api.im.v1.model.get_chat_menu_tree_response import GetChatMenuTreeResponse
from lark_oapi.api.im.v1.model.sort_chat_menu_tree_request import SortChatMenuTreeRequest
from lark_oapi.api.im.v1.model.sort_chat_menu_tree_response import SortChatMenuTreeResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class ChatMenuTree(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateChatMenuTreeRequest,
               option: RequestOption = RequestOption()) -> CreateChatMenuTreeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateChatMenuTreeResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateChatMenuTreeResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteChatMenuTreeRequest,
               option: RequestOption = RequestOption()) -> DeleteChatMenuTreeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteChatMenuTreeResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteChatMenuTreeResponse)
        response.raw = resp

        return response

    def get(self, request: GetChatMenuTreeRequest, option: RequestOption = RequestOption()) -> GetChatMenuTreeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetChatMenuTreeResponse = JSON.unmarshal(str(resp.content, UTF_8), GetChatMenuTreeResponse)
        response.raw = resp

        return response

    def sort(self, request: SortChatMenuTreeRequest,
             option: RequestOption = RequestOption()) -> SortChatMenuTreeResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SortChatMenuTreeResponse = JSON.unmarshal(str(resp.content, UTF_8), SortChatMenuTreeResponse)
        response.raw = resp

        return response
