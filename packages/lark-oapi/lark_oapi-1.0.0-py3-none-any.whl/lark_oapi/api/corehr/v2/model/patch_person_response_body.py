# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .person_info import PersonInfo


class PatchPersonResponseBody(object):
    _types = {
        "person": PersonInfo,
    }

    def __init__(self, d):
        self.person: Optional[PersonInfo] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchPersonResponseBodyBuilder":
        return PatchPersonResponseBodyBuilder()


class PatchPersonResponseBodyBuilder(object):
    def __init__(self, patch_person_response_body: PatchPersonResponseBody = PatchPersonResponseBody({})) -> None:
        self._patch_person_response_body: PatchPersonResponseBody = patch_person_response_body

    def person(self, person: PersonInfo) -> "PatchPersonResponseBodyBuilder":
        self._patch_person_response_body.person = person
        return self

    def build(self) -> "PatchPersonResponseBody":
        return self._patch_person_response_body
