# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class CpstBandWidth(object):
    _types = {
        "upper_limit": str,
        "lower_limit": str,
    }

    def __init__(self, d):
        self.upper_limit: Optional[str] = None
        self.lower_limit: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CpstBandWidthBuilder":
        return CpstBandWidthBuilder()


class CpstBandWidthBuilder(object):
    def __init__(self, cpst_band_width: CpstBandWidth = CpstBandWidth({})) -> None:
        self._cpst_band_width: CpstBandWidth = cpst_band_width

    def upper_limit(self, upper_limit: str) -> "CpstBandWidthBuilder":
        self._cpst_band_width.upper_limit = upper_limit
        return self

    def lower_limit(self, lower_limit: str) -> "CpstBandWidthBuilder":
        self._cpst_band_width.lower_limit = lower_limit
        return self

    def build(self) -> "CpstBandWidth":
        return self._cpst_band_width
