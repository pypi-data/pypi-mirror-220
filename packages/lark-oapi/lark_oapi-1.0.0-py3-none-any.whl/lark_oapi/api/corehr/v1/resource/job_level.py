# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.corehr.v1.model.create_job_level_request import CreateJobLevelRequest
from lark_oapi.api.corehr.v1.model.create_job_level_response import CreateJobLevelResponse
from lark_oapi.api.corehr.v1.model.delete_job_level_request import DeleteJobLevelRequest
from lark_oapi.api.corehr.v1.model.delete_job_level_response import DeleteJobLevelResponse
from lark_oapi.api.corehr.v1.model.get_job_level_request import GetJobLevelRequest
from lark_oapi.api.corehr.v1.model.get_job_level_response import GetJobLevelResponse
from lark_oapi.api.corehr.v1.model.list_job_level_request import ListJobLevelRequest
from lark_oapi.api.corehr.v1.model.list_job_level_response import ListJobLevelResponse
from lark_oapi.api.corehr.v1.model.patch_job_level_request import PatchJobLevelRequest
from lark_oapi.api.corehr.v1.model.patch_job_level_response import PatchJobLevelResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class JobLevel(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateJobLevelRequest, option: RequestOption = RequestOption()) -> CreateJobLevelResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateJobLevelResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateJobLevelResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteJobLevelRequest, option: RequestOption = RequestOption()) -> DeleteJobLevelResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteJobLevelResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteJobLevelResponse)
        response.raw = resp

        return response

    def get(self, request: GetJobLevelRequest, option: RequestOption = RequestOption()) -> GetJobLevelResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetJobLevelResponse = JSON.unmarshal(str(resp.content, UTF_8), GetJobLevelResponse)
        response.raw = resp

        return response

    def list(self, request: ListJobLevelRequest, option: RequestOption = RequestOption()) -> ListJobLevelResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListJobLevelResponse = JSON.unmarshal(str(resp.content, UTF_8), ListJobLevelResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchJobLevelRequest, option: RequestOption = RequestOption()) -> PatchJobLevelResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchJobLevelResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchJobLevelResponse)
        response.raw = resp

        return response
