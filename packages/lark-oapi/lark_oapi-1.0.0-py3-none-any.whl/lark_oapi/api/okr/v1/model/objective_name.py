# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class ObjectiveName(object):
    _types = {
        "zh": str,
        "en": str,
    }

    def __init__(self, d):
        self.zh: Optional[str] = None
        self.en: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ObjectiveNameBuilder":
        return ObjectiveNameBuilder()


class ObjectiveNameBuilder(object):
    def __init__(self, objective_name: ObjectiveName = ObjectiveName({})) -> None:
        self._objective_name: ObjectiveName = objective_name

    def zh(self, zh: str) -> "ObjectiveNameBuilder":
        self._objective_name.zh = zh
        return self

    def en(self, en: str) -> "ObjectiveNameBuilder":
        self._objective_name.en = en
        return self

    def build(self) -> "ObjectiveName":
        return self._objective_name
