# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .manageable_instance_node import ManageableInstanceNode


class ManageableInstanceItem(object):
    _types = {
        "instance": ManageableInstanceNode,
    }

    def __init__(self, d):
        self.instance: Optional[ManageableInstanceNode] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ManageableInstanceItemBuilder":
        return ManageableInstanceItemBuilder()


class ManageableInstanceItemBuilder(object):
    def __init__(self, manageable_instance_item: ManageableInstanceItem = ManageableInstanceItem({})) -> None:
        self._manageable_instance_item: ManageableInstanceItem = manageable_instance_item

    def instance(self, instance: ManageableInstanceNode) -> "ManageableInstanceItemBuilder":
        self._manageable_instance_item.instance = instance
        return self

    def build(self) -> "ManageableInstanceItem":
        return self._manageable_instance_item
