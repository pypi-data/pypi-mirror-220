# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init
from .task import Task


class GetTaskResponseBody(object):
    _types = {
        "task": Task,
    }

    def __init__(self, d):
        self.task: Optional[Task] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "GetTaskResponseBodyBuilder":
        return GetTaskResponseBodyBuilder()


class GetTaskResponseBodyBuilder(object):
    def __init__(self, get_task_response_body: GetTaskResponseBody = GetTaskResponseBody({})) -> None:
        self._get_task_response_body: GetTaskResponseBody = get_task_response_body

    def task(self, task: Task) -> "GetTaskResponseBodyBuilder":
        self._get_task_response_body.task = task
        return self

    def build(self) -> "GetTaskResponseBody":
        return self._get_task_response_body
