# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class ReplaceImageRequest(object):
    _types = {
        "token": str,
    }

    def __init__(self, d):
        self.token: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "ReplaceImageRequestBuilder":
        return ReplaceImageRequestBuilder()


class ReplaceImageRequestBuilder(object):
    def __init__(self, replace_image_request: ReplaceImageRequest = ReplaceImageRequest({})) -> None:
        self._replace_image_request: ReplaceImageRequest = replace_image_request

    def token(self, token: str) -> "ReplaceImageRequestBuilder":
        self._replace_image_request.token = token
        return self

    def build(self) -> "ReplaceImageRequest":
        return self._replace_image_request
