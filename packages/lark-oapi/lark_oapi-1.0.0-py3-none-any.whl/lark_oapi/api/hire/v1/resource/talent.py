# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.hire.v1.model.add_to_folder_talent_request import AddToFolderTalentRequest
from lark_oapi.api.hire.v1.model.add_to_folder_talent_response import AddToFolderTalentResponse
from lark_oapi.api.hire.v1.model.batch_get_id_talent_request import BatchGetIdTalentRequest
from lark_oapi.api.hire.v1.model.batch_get_id_talent_response import BatchGetIdTalentResponse
from lark_oapi.api.hire.v1.model.get_talent_request import GetTalentRequest
from lark_oapi.api.hire.v1.model.get_talent_response import GetTalentResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Talent(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def add_to_folder(self, request: AddToFolderTalentRequest,
                      option: RequestOption = RequestOption()) -> AddToFolderTalentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: AddToFolderTalentResponse = JSON.unmarshal(str(resp.content, UTF_8), AddToFolderTalentResponse)
        response.raw = resp

        return response

    def batch_get_id(self, request: BatchGetIdTalentRequest,
                     option: RequestOption = RequestOption()) -> BatchGetIdTalentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: BatchGetIdTalentResponse = JSON.unmarshal(str(resp.content, UTF_8), BatchGetIdTalentResponse)
        response.raw = resp

        return response

    def get(self, request: GetTalentRequest, option: RequestOption = RequestOption()) -> GetTalentResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetTalentResponse = JSON.unmarshal(str(resp.content, UTF_8), GetTalentResponse)
        response.raw = resp

        return response
