# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.drive.v1.model.create_permission_public_password_request import CreatePermissionPublicPasswordRequest
from lark_oapi.api.drive.v1.model.create_permission_public_password_response import \
    CreatePermissionPublicPasswordResponse
from lark_oapi.api.drive.v1.model.delete_permission_public_password_request import DeletePermissionPublicPasswordRequest
from lark_oapi.api.drive.v1.model.delete_permission_public_password_response import \
    DeletePermissionPublicPasswordResponse
from lark_oapi.api.drive.v1.model.update_permission_public_password_request import UpdatePermissionPublicPasswordRequest
from lark_oapi.api.drive.v1.model.update_permission_public_password_response import \
    UpdatePermissionPublicPasswordResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class PermissionPublicPassword(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreatePermissionPublicPasswordRequest,
               option: RequestOption = RequestOption()) -> CreatePermissionPublicPasswordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreatePermissionPublicPasswordResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                          CreatePermissionPublicPasswordResponse)
        response.raw = resp

        return response

    def delete(self, request: DeletePermissionPublicPasswordRequest,
               option: RequestOption = RequestOption()) -> DeletePermissionPublicPasswordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeletePermissionPublicPasswordResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                          DeletePermissionPublicPasswordResponse)
        response.raw = resp

        return response

    def update(self, request: UpdatePermissionPublicPasswordRequest,
               option: RequestOption = RequestOption()) -> UpdatePermissionPublicPasswordResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UpdatePermissionPublicPasswordResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                          UpdatePermissionPublicPasswordResponse)
        response.raw = resp

        return response
