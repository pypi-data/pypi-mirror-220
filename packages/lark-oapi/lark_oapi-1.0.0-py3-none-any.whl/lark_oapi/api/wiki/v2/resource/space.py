# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.wiki.v2.model.create_space_request import CreateSpaceRequest
from lark_oapi.api.wiki.v2.model.create_space_response import CreateSpaceResponse
from lark_oapi.api.wiki.v2.model.get_node_space_request import GetNodeSpaceRequest
from lark_oapi.api.wiki.v2.model.get_node_space_response import GetNodeSpaceResponse
from lark_oapi.api.wiki.v2.model.get_space_request import GetSpaceRequest
from lark_oapi.api.wiki.v2.model.get_space_response import GetSpaceResponse
from lark_oapi.api.wiki.v2.model.list_space_request import ListSpaceRequest
from lark_oapi.api.wiki.v2.model.list_space_response import ListSpaceResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Space(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateSpaceRequest, option: RequestOption = RequestOption()) -> CreateSpaceResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateSpaceResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateSpaceResponse)
        response.raw = resp

        return response

    def get(self, request: GetSpaceRequest, option: RequestOption = RequestOption()) -> GetSpaceResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetSpaceResponse = JSON.unmarshal(str(resp.content, UTF_8), GetSpaceResponse)
        response.raw = resp

        return response

    def get_node(self, request: GetNodeSpaceRequest, option: RequestOption = RequestOption()) -> GetNodeSpaceResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetNodeSpaceResponse = JSON.unmarshal(str(resp.content, UTF_8), GetNodeSpaceResponse)
        response.raw = resp

        return response

    def list(self, request: ListSpaceRequest, option: RequestOption = RequestOption()) -> ListSpaceResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListSpaceResponse = JSON.unmarshal(str(resp.content, UTF_8), ListSpaceResponse)
        response.raw = resp

        return response
