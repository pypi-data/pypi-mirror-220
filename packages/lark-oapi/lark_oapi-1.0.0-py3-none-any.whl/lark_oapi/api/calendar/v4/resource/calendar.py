# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.calendar.v4.model.create_calendar_request import CreateCalendarRequest
from lark_oapi.api.calendar.v4.model.create_calendar_response import CreateCalendarResponse
from lark_oapi.api.calendar.v4.model.delete_calendar_request import DeleteCalendarRequest
from lark_oapi.api.calendar.v4.model.delete_calendar_response import DeleteCalendarResponse
from lark_oapi.api.calendar.v4.model.get_calendar_request import GetCalendarRequest
from lark_oapi.api.calendar.v4.model.get_calendar_response import GetCalendarResponse
from lark_oapi.api.calendar.v4.model.list_calendar_request import ListCalendarRequest
from lark_oapi.api.calendar.v4.model.list_calendar_response import ListCalendarResponse
from lark_oapi.api.calendar.v4.model.patch_calendar_request import PatchCalendarRequest
from lark_oapi.api.calendar.v4.model.patch_calendar_response import PatchCalendarResponse
from lark_oapi.api.calendar.v4.model.primary_calendar_request import PrimaryCalendarRequest
from lark_oapi.api.calendar.v4.model.primary_calendar_response import PrimaryCalendarResponse
from lark_oapi.api.calendar.v4.model.search_calendar_request import SearchCalendarRequest
from lark_oapi.api.calendar.v4.model.search_calendar_response import SearchCalendarResponse
from lark_oapi.api.calendar.v4.model.subscribe_calendar_request import SubscribeCalendarRequest
from lark_oapi.api.calendar.v4.model.subscribe_calendar_response import SubscribeCalendarResponse
from lark_oapi.api.calendar.v4.model.subscription_calendar_request import SubscriptionCalendarRequest
from lark_oapi.api.calendar.v4.model.subscription_calendar_response import SubscriptionCalendarResponse
from lark_oapi.api.calendar.v4.model.unsubscribe_calendar_request import UnsubscribeCalendarRequest
from lark_oapi.api.calendar.v4.model.unsubscribe_calendar_response import UnsubscribeCalendarResponse
from lark_oapi.api.calendar.v4.model.unsubscription_calendar_request import UnsubscriptionCalendarRequest
from lark_oapi.api.calendar.v4.model.unsubscription_calendar_response import UnsubscriptionCalendarResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Calendar(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateCalendarRequest, option: RequestOption = RequestOption()) -> CreateCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateCalendarResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteCalendarRequest, option: RequestOption = RequestOption()) -> DeleteCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteCalendarResponse)
        response.raw = resp

        return response

    def get(self, request: GetCalendarRequest, option: RequestOption = RequestOption()) -> GetCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), GetCalendarResponse)
        response.raw = resp

        return response

    def list(self, request: ListCalendarRequest, option: RequestOption = RequestOption()) -> ListCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: ListCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), ListCalendarResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchCalendarRequest, option: RequestOption = RequestOption()) -> PatchCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchCalendarResponse)
        response.raw = resp

        return response

    def primary(self, request: PrimaryCalendarRequest,
                option: RequestOption = RequestOption()) -> PrimaryCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PrimaryCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), PrimaryCalendarResponse)
        response.raw = resp

        return response

    def search(self, request: SearchCalendarRequest, option: RequestOption = RequestOption()) -> SearchCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SearchCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), SearchCalendarResponse)
        response.raw = resp

        return response

    def subscribe(self, request: SubscribeCalendarRequest,
                  option: RequestOption = RequestOption()) -> SubscribeCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SubscribeCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), SubscribeCalendarResponse)
        response.raw = resp

        return response

    def subscription(self, request: SubscriptionCalendarRequest,
                     option: RequestOption = RequestOption()) -> SubscriptionCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SubscriptionCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), SubscriptionCalendarResponse)
        response.raw = resp

        return response

    def unsubscribe(self, request: UnsubscribeCalendarRequest,
                    option: RequestOption = RequestOption()) -> UnsubscribeCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UnsubscribeCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8), UnsubscribeCalendarResponse)
        response.raw = resp

        return response

    def unsubscription(self, request: UnsubscriptionCalendarRequest,
                       option: RequestOption = RequestOption()) -> UnsubscriptionCalendarResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: UnsubscriptionCalendarResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                  UnsubscriptionCalendarResponse)
        response.raw = resp

        return response
