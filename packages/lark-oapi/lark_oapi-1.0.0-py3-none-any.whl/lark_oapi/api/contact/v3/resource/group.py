# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.contact.v3.model.create_group_request import CreateGroupRequest
from lark_oapi.api.contact.v3.model.create_group_response import CreateGroupResponse
from lark_oapi.api.contact.v3.model.delete_group_request import DeleteGroupRequest
from lark_oapi.api.contact.v3.model.delete_group_response import DeleteGroupResponse
from lark_oapi.api.contact.v3.model.get_group_request import GetGroupRequest
from lark_oapi.api.contact.v3.model.get_group_response import GetGroupResponse
from lark_oapi.api.contact.v3.model.member_belong_group_request import MemberBelongGroupRequest
from lark_oapi.api.contact.v3.model.member_belong_group_response import MemberBelongGroupResponse
from lark_oapi.api.contact.v3.model.patch_group_request import PatchGroupRequest
from lark_oapi.api.contact.v3.model.patch_group_response import PatchGroupResponse
from lark_oapi.api.contact.v3.model.simplelist_group_request import SimplelistGroupRequest
from lark_oapi.api.contact.v3.model.simplelist_group_response import SimplelistGroupResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class Group(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def create(self, request: CreateGroupRequest, option: RequestOption = RequestOption()) -> CreateGroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: CreateGroupResponse = JSON.unmarshal(str(resp.content, UTF_8), CreateGroupResponse)
        response.raw = resp

        return response

    def delete(self, request: DeleteGroupRequest, option: RequestOption = RequestOption()) -> DeleteGroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: DeleteGroupResponse = JSON.unmarshal(str(resp.content, UTF_8), DeleteGroupResponse)
        response.raw = resp

        return response

    def get(self, request: GetGroupRequest, option: RequestOption = RequestOption()) -> GetGroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: GetGroupResponse = JSON.unmarshal(str(resp.content, UTF_8), GetGroupResponse)
        response.raw = resp

        return response

    def member_belong(self, request: MemberBelongGroupRequest,
                      option: RequestOption = RequestOption()) -> MemberBelongGroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: MemberBelongGroupResponse = JSON.unmarshal(str(resp.content, UTF_8), MemberBelongGroupResponse)
        response.raw = resp

        return response

    def patch(self, request: PatchGroupRequest, option: RequestOption = RequestOption()) -> PatchGroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: PatchGroupResponse = JSON.unmarshal(str(resp.content, UTF_8), PatchGroupResponse)
        response.raw = resp

        return response

    def simplelist(self, request: SimplelistGroupRequest,
                   option: RequestOption = RequestOption()) -> SimplelistGroupResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SimplelistGroupResponse = JSON.unmarshal(str(resp.content, UTF_8), SimplelistGroupResponse)
        response.raw = resp

        return response
