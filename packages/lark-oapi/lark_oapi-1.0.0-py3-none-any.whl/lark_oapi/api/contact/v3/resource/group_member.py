# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.api.contact.v3.model.add_group_member_request import AddGroupMemberRequest
from lark_oapi.api.contact.v3.model.add_group_member_response import AddGroupMemberResponse
from lark_oapi.api.contact.v3.model.batch_add_group_member_request import BatchAddGroupMemberRequest
from lark_oapi.api.contact.v3.model.batch_add_group_member_response import BatchAddGroupMemberResponse
from lark_oapi.api.contact.v3.model.batch_remove_group_member_request import BatchRemoveGroupMemberRequest
from lark_oapi.api.contact.v3.model.batch_remove_group_member_response import BatchRemoveGroupMemberResponse
from lark_oapi.api.contact.v3.model.remove_group_member_request import RemoveGroupMemberRequest
from lark_oapi.api.contact.v3.model.remove_group_member_response import RemoveGroupMemberResponse
from lark_oapi.api.contact.v3.model.simplelist_group_member_request import SimplelistGroupMemberRequest
from lark_oapi.api.contact.v3.model.simplelist_group_member_response import SimplelistGroupMemberResponse
from lark_oapi.core import JSON
from lark_oapi.core.const import UTF_8
from lark_oapi.core.http import Transport
from lark_oapi.core.model import Config, RequestOption, RawResponse
from lark_oapi.core.token import verify


class GroupMember(object):
    def __init__(self, config: Config) -> None:
        self.config: Optional[Config] = config

    def add(self, request: AddGroupMemberRequest, option: RequestOption = RequestOption()) -> AddGroupMemberResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: AddGroupMemberResponse = JSON.unmarshal(str(resp.content, UTF_8), AddGroupMemberResponse)
        response.raw = resp

        return response

    def batch_add(self, request: BatchAddGroupMemberRequest,
                  option: RequestOption = RequestOption()) -> BatchAddGroupMemberResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: BatchAddGroupMemberResponse = JSON.unmarshal(str(resp.content, UTF_8), BatchAddGroupMemberResponse)
        response.raw = resp

        return response

    def batch_remove(self, request: BatchRemoveGroupMemberRequest,
                     option: RequestOption = RequestOption()) -> BatchRemoveGroupMemberResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: BatchRemoveGroupMemberResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                  BatchRemoveGroupMemberResponse)
        response.raw = resp

        return response

    def remove(self, request: RemoveGroupMemberRequest,
               option: RequestOption = RequestOption()) -> RemoveGroupMemberResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: RemoveGroupMemberResponse = JSON.unmarshal(str(resp.content, UTF_8), RemoveGroupMemberResponse)
        response.raw = resp

        return response

    def simplelist(self, request: SimplelistGroupMemberRequest,
                   option: RequestOption = RequestOption()) -> SimplelistGroupMemberResponse:
        # 鉴权、获取token
        verify(self.config, request, option)

        # 发起请求
        resp: RawResponse = Transport.execute(self.config, request, option)

        # 反序列化
        response: SimplelistGroupMemberResponse = JSON.unmarshal(str(resp.content, UTF_8),
                                                                 SimplelistGroupMemberResponse)
        response.raw = resp

        return response
