# Code generated by Lark OpenAPI.

from typing import *

from lark_oapi.core.construct import init


class DimensionProperties(object):
    _types = {
        "hidden": bool,
        "pixel_size": int,
    }

    def __init__(self, d):
        self.hidden: Optional[bool] = None
        self.pixel_size: Optional[int] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "DimensionPropertiesBuilder":
        return DimensionPropertiesBuilder()


class DimensionPropertiesBuilder(object):
    def __init__(self, dimension_properties: DimensionProperties = DimensionProperties({})) -> None:
        self._dimension_properties: DimensionProperties = dimension_properties

    def hidden(self, hidden: bool) -> "DimensionPropertiesBuilder":
        self._dimension_properties.hidden = hidden
        return self

    def pixel_size(self, pixel_size: int) -> "DimensionPropertiesBuilder":
        self._dimension_properties.pixel_size = pixel_size
        return self

    def build(self) -> "DimensionProperties":
        return self._dimension_properties
