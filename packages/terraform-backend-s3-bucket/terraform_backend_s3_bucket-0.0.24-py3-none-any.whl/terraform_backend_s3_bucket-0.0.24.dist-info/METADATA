Metadata-Version: 2.1
Name: terraform-backend-s3-bucket
Version: 0.0.24
Summary: Creates an S3 bucket and a DynamoDB table for Terraform state and lock management.
Home-page: https://github.com/stefanfreitag/terraform-backend-s3-bucket.git
Author: Stefan Freitag<stefan.freitag@udo.edu>
License: Apache-2.0
Project-URL: Source, https://github.com/stefanfreitag/terraform-backend-s3-bucket.git
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: JavaScript
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Typing :: Typed
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved
Requires-Python: ~=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aws-cdk-lib (<3.0.0,>=2.87.0)
Requires-Dist: constructs (<11.0.0,>=10.0.5)
Requires-Dist: jsii (<2.0.0,>=1.85.0)
Requires-Dist: publication (>=0.0.3)
Requires-Dist: typeguard (~=2.13.3)

# Terraform Backend S3 Bucket

Provides a CDK construct for Terraform state management. The construct consists
of

* S3 bucket
* DynamoDB table.

## Features

* Versioning is enabled
  [[S3.14] S3 buckets should use versioning](https://docs.aws.amazon.com/securityhub/latest/userguide/s3-controls.html#s3-14)
* All public access is blocked
  [[S3.1] S3 Block Public Access setting should be enabled](https://docs.aws.amazon.com/securityhub/latest/userguide/s3-controls.html#s3-1)
* Enforce SSL for requests
  [[S3.5] S3 buckets should require requests to use Secure Socket Layer](https://docs.aws.amazon.com/securityhub/latest/userguide/s3-controls.html#s3-1)
* A lifecycle policy for non-current versions of objects
  [[S3.10] S3 buckets with versioning enabled should have lifecycle policies configured
  ](https://docs.aws.amazon.com/securityhub/latest/userguide/s3-controls.html#s3-10)
* Enforcing that the bucket owner owns every object in the bucket.

## Links

* [Amazon Simple Storage Service controls](https://docs.aws.amazon.com/securityhub/latest/userguide/s3-controls.html)
* [Controlling ownership of objects and disabling ACLs for your bucket](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html)
