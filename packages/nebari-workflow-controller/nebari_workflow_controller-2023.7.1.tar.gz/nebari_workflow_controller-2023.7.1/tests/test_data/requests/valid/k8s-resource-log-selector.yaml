apiVersion: admission.k8s.io/v1
kind: AdmissionReview
request:
  dryRun: false
  kind:
    group: argoproj.io
    kind: Workflow
    version: v1alpha1
  name: hello-world
  namespace: dev
  object:
    apiVersion: argoproj.io/v1alpha1
    kind: Workflow
    metadata:
      name: k8s-jobs-log-selector-
    spec:
      entrypoint: tf-jobtmpl
      templates:
      - name: tf-jobtmpl
        resource:
          action: create
          failureCondition: status.replicaStatuses.Worker.failed > 0
          manifest: "apiVersion: kubeflow.org/v1\nkind: TFJob\nmetadata:\n  name:\
            \ tfjob-examples\nspec:\n  tfReplicaSpecs:\n     Worker:\n       replicas:\
            \ 2\n       restartPolicy: Never\n       template:\n         metadata:\n\
            \           # We add this label to the pods created by TFJob custom resource\
            \ to inform Argo Workflows\n           # that we want to include the logs\
            \ from the created pods. Once the pods are created with this\n       \
            \    # label, you can then use `argo logs -c tensorflow` to the logs from\
            \ this particular container.\n           # Note that `workflow.name` is\
            \ a supported global variable provided by Argo Workflows.\n          \
            \ #\n           # The Kubeflow training controller will take this CRD\
            \ and automatically created worker pods with\n           # labels, such\
            \ as `job-role` and `replica-index`. If you'd like to query logs for pods\
            \ with\n           # specific labels, you can specify the label selector\
            \ explicitly via `argo logs -l <logs-label-selector>`.\n           # For\
            \ example, you can use `argo logs -c tensorflow -l replica-index=0` to\
            \ see the first worker pod's logs.\n           labels:\n             workflows.argoproj.io/workflow:\
            \ {{workflow.name}}\n         spec:\n           containers:\n        \
            \     - name: tensorflow\n               image: \"Placeholder for TensorFlow\
            \ distributed training image\"\n"
          successCondition: status.replicaStatuses.Worker.succeeded = 2
  operation: CREATE
  options:
    apiVersion: meta.k8s.io/v1
    kind: CreateOptions
  requestKind:
    group: argoproj.io
    kind: Workflow
    version: v1alpha1
  requestResource:
    group: argoproj.io
    resource: workflows
    version: v1alpha1
  resource:
    group: argoproj.io
    resource: workflows
    version: v1alpha1
  uid: c1bba5c6-2189-41ff-9487-be504c04487b
  userInfo:
    groups:
    - system:serviceaccounts
    - system:serviceaccounts:dev
    - system:authenticated
    uid: eac0d7ab-af84-4c3f-a5fd-71845ff9e8c9
    username: system:serviceaccount:dev:argo-admin
