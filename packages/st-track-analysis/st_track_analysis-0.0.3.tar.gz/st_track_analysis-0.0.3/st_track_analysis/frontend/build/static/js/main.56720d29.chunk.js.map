{"version":3,"sources":["helpers/consts.ts","helpers/Paths.ts","components/plotter/Lines.tsx","components/plotter/SourcePlotter.tsx","components/plotter/header/Header.tsx","components/plotter/TrackAnalysis.tsx","index.tsx"],"names":["colors","Map","names","pathStrings","entries","showType","filters","filterLength","minLength","maxLength","_step","trackMap","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","value","id","x","y","type","estimated","onlyConfirmed","indexOf","has","_ref","get","_ref2","xCoordinates","yCoordinates","estimates","push","set","err","e","f","forEach","track","key","length","delete","Array","from","values","markMeasured","markEstimates","_track","xs","ys","startPos","endPos","pathData","map","i","pathSegment","concat","size","_ref3","x1","y1","_ref4","x2","y2","Math","sqrt","pow","perpendicularDir","angle","offsetX","offsetY","join","createPath","markMeasurements","markEstimated","Lines","WIDTH","HEIGHT","scale","showId","selectedIndices","vertices","_jsxs","width","height","style","transform","transformOrigin","children","path","index","color","_jsx","_Fragment","d","stroke","fill","cx","cy","r","strokeWidth","fontFamily","fontSize","SourcePlotter","label","rows","image","tracks","to","_useState","useState","_useState2","setScale","_useState3","trackId","showLines","_useState4","setFilters","_useState5","_useState6","setSelectedIndices","paths","useMemo","slice","SVGLines","className","Slider","valueLabelDisplay","onChange","event","newValue","min","max","step","margin","overflow","display","flexDirection","Draggable","backgroundImage","marginTop","List","sx","maxWidth","bgcolor","position","maxHeight","padding","borderRadius","subheader","ListSubheader","component","Divider","ListItemButton","selected","onClick","indices","handleListItemClick","ListItemText","primary","FormControl","marginLeft","variant","FormGroup","FormControlLabel","control","Checkbox","checked","prevFilters","_objectSpread","target","Header","date","setDate","fromTime","setFromTime","setToTime","interval","setDir","setInterval","handleChange","setFilterLength","setMinLength","setMaxLength","handleBackwardClick","handleForwardClick","MenuProps","PaperProps","ITEM_HEIGHT","console","log","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","format","backgroundColor","marginRight","TimePicker","add","ampm","TextField","newVal","val","Number","isNaN","m","InputLabel","Select","labelId","multiple","input","OutlinedInput","renderValue","name","MenuItem","Button","TrackAnalysis","renderData","useRenderData","setFrom","setTo","dir","_useState7","dayjs","args","_useState8","_useState9","_useState10","_useState11","_useState12","toTime","_useState13","_useState14","_React$useState","React","_React$useState2","setShowType","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","ground","useEffect","isValid","Streamlit","setComponentValue","fromIndex","toIndex","binarySearch","isBefore","setIndices","time","low","high","mid","floor","midTime","isAfter","cameraPlots","split","subtract","flexWrap","plot","warn","theme","createTheme","palette","main","common","black","secondary","text","action","active","background","default","paper","ReactDOM","render","StrictMode","StreamlitProvider","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.56720d29.chunk.js","sourcesContent":["export const colors: Map<number, string> = new Map([\n  [0, \"green\"],\n  [1, \"purple\"],\n  [4, \"red\"],\n  [18, \"cyan\"],\n  [34, \"pink\"],\n])\nexport const names = [\n  \"Pedestrian\",\n  \"Bicycle\",\n  \"Light vehicle\",\n  \"Heavy vehicle\",\n  \"Unknown\",\n]\n","import { Pos } from \"./Matrix\"\nimport { names } from \"./consts\"\nimport { Show } from \"./types\"\n\nexport type Track = [number, number, number, number, number, string]\nexport type Path = [string, number, number, Pos, Pos]\ntype InternalTrack = [number[], number[], number, number, number[]]\n\nexport function pathStrings(\n  entries: Track[],\n  showType: string[],\n  filters: Show,\n  filterLength: boolean,\n  minLength: number,\n  maxLength: number\n): Path[] {\n  const trackMap = new Map<number, InternalTrack>()\n  for (const [id, x, y, type, estimated] of entries) {\n    if (\n      (filters.onlyConfirmed && estimated === 1) ||\n      showType.indexOf(names[type]) === -1\n    ) {\n    } else {\n      if (trackMap.has(id)) {\n        const [\n          xCoordinates,\n          yCoordinates,\n          existingType,\n          existingId,\n          estimates,\n        ] = trackMap.get(id)!\n        xCoordinates.push(x * 20 + 280)\n        yCoordinates.push(y * 20 + 300)\n        estimates.push(estimated)\n      } else {\n        trackMap.set(id, [\n          [x * 20 + 280],\n          [y * 20 + 300],\n          type,\n          id,\n          [estimated],\n        ])\n      }\n    }\n  }\n\n  trackMap.forEach((track, key) => {\n    if (\n      filterLength &&\n      (track[0].length < minLength || track[0].length > maxLength)\n    ) {\n      trackMap.delete(key)\n    }\n  })\n\n  return Array.from(trackMap.values(), (track) =>\n    createPath(track, filters.markMeasurements, filters.markEstimated)\n  )\n}\n\nfunction createPath(\n  track: InternalTrack,\n  markMeasured: boolean,\n  markEstimates: boolean\n): Path {\n  {\n    const [xs, ys, type, id, estimates] = track\n    const startPos: Pos = [xs[0], ys[0], 0]\n    const endPos: Pos = [xs[xs.length - 1], ys[ys.length - 1], 0]\n    const pathData = xs\n      .map((x, i) => {\n        const estimated = estimates[i]\n        let pathSegment = `L ${x} ${ys[i]}`\n        if (\n          ((markMeasured && estimated === 0) ||\n            (markEstimates && estimated === 1 && i !== 0)) &&\n          i !== 0\n        ) {\n          const size = estimated === 0 ? 6 : 3\n          const [x1, y1] = [xs[i - 1], ys[i - 1]]\n          const [x2, y2] = [x, ys[i]]\n          const length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n          const perpendicularDir = [(y1 - y2) / length, (x2 - x1) / length]\n          const angle = 0.707\n          const offsetX =\n            perpendicularDir[0] * angle - perpendicularDir[1] * angle\n          const offsetY =\n            perpendicularDir[0] * angle + perpendicularDir[1] * angle\n          pathSegment += `L ${x + offsetX * size} ${\n            ys[i] + offsetY * size\n          } L ${x} ${ys[i]} L ${x - offsetY * size} ${\n            ys[i] + offsetX * size\n          } L ${x} ${ys[i]}`\n        }\n        return pathSegment\n      })\n      .join(\" \")\n    const pathString = `M ${xs[0]} ${ys[0]} ${pathData}`\n    return [pathString, type, id, startPos, endPos]\n  }\n}\n","import React from \"react\"\nimport { colors } from \"../../helpers/consts\"\nimport { Path } from \"../../helpers/Paths\"\n\ntype LinesProps = {\n  WIDTH: number\n  HEIGHT: number\n  scale: number\n  pathStrings: Path[]\n  showId: boolean\n  selectedIndices: Map<number, boolean>\n  vertices: JSX.Element[]\n}\n\nexport const Lines: React.FC<LinesProps> = ({\n  WIDTH,\n  HEIGHT,\n  scale,\n  pathStrings,\n  showId,\n  selectedIndices,\n  vertices,\n}) => {\n  return (\n    <svg\n      width={WIDTH * scale}\n      height={HEIGHT * scale}\n      style={{\n        transform: `scale(${scale})`,\n        transformOrigin: \"top left\", // Set the transformation origin\n      }}\n    >\n      {pathStrings.map((path, index) => {\n        /**\n         * The strings are of the format \"...L {x-ending point} {y-ending point},\n         * we want to get these coordinates to display the starting ids above\n         * the ending point\"\n         */\n        const color = colors.get(path[1])\n        return !selectedIndices.has(index) ? (\n          <g key={path[0]}>\n            <path d={path[0]} stroke={color ? color : \"black\"} fill=\"none\" />\n            <circle\n              cx={path[3][0]}\n              cy={path[3][1]}\n              r={4}\n              fill=\"green\"\n              strokeWidth=\"4\"\n            />\n            <circle\n              cx={path[4][0]}\n              cy={path[4][1]}\n              r={4}\n              fill=\"red\"\n              strokeWidth=\"4\"\n            />\n            {showId && (\n              <text\n                x={path[4][0]}\n                y={path[4][1]}\n                fill=\"white\"\n                fontFamily=\"sans-serif\"\n                fontSize={10}\n              >\n                {path[2]}\n              </text>\n            )}\n          </g>\n        ) : (\n          <></>\n        )\n      })}\n      {vertices}\n    </svg>\n  )\n}\n","import React, { useState, useMemo } from \"react\"\nimport \"../../styles/styles.css\"\nimport { Path, Track, pathStrings } from \"../../helpers/Paths\"\nimport { Lines } from \"./Lines\"\nimport Draggable from \"react-draggable\"\nimport {\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  List,\n  ListItemButton,\n  ListItemText,\n  ListSubheader,\n  Slider,\n} from \"@mui/material\"\nimport { Show } from \"../../helpers/types\"\n\ninterface SourcePlotterProps {\n  label: string\n  image: string\n  WIDTH: number\n  HEIGHT: number\n  filterLength: boolean\n  minLength: number\n  maxLength: number\n  tracks: Track[]\n  from: number\n  to: number\n  showType: string[]\n}\n\nconst SourcePlotter: React.FC<SourcePlotterProps> = ({\n  label,\n  image,\n  WIDTH,\n  HEIGHT,\n  tracks,\n  from,\n  to,\n  showType,\n  filterLength,\n  minLength,\n  maxLength,\n}) => {\n  const [scale, setScale] = useState<number>(1)\n  const [filters, setFilters] = useState<Show>({\n    markMeasurements: false,\n    markEstimated: false,\n    onlyConfirmed: false,\n    trackId: false,\n    showLines: false,\n  })\n  const [selectedIndices, setSelectedIndices] = useState<Map<number, boolean>>(\n    new Map()\n  )\n  /**\n   * Memoize the lines so we don't recalculate pathStrings everytime\n   * we rerender this component\n   */\n  const paths = useMemo(() => {\n    return pathStrings(\n      tracks.slice(from, to),\n      showType,\n      filters,\n      filterLength,\n      minLength,\n      maxLength\n    )\n  }, [from, to, showType, filters, filterLength, minLength, maxLength])\n\n  const handleSliderChange = (event: Event, newValue: number | number[]) => {\n    if (typeof newValue === \"number\") {\n      setScale(newValue)\n    }\n  }\n\n  const SVGLines = (\n    <Lines\n      WIDTH={WIDTH}\n      HEIGHT={HEIGHT}\n      scale={scale}\n      pathStrings={paths}\n      showId={filters.trackId}\n      selectedIndices={selectedIndices}\n      vertices={[]}\n    />\n  )\n\n  const handleListItemClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    index: number\n  ) => {\n    setSelectedIndices((indices) => new Map(indices.set(index, true)))\n  }\n\n  const renderRows = (rows: Path[]) => {\n    return rows.map((path, index) => {\n      return (\n        <ListItemButton\n          key={index}\n          selected={selectedIndices.has(index)}\n          onClick={(event) => {\n            if (!selectedIndices.has(index)) handleListItemClick(event, index)\n            else\n              setSelectedIndices((indices) => {\n                indices.delete(index)\n                return new Map(indices)\n              })\n          }}\n        >\n          <ListItemText primary={path[2]} />\n          <ListItemText primary={path[1]} />\n        </ListItemButton>\n      )\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"control-container\">\n        <Slider\n          value={scale}\n          aria-label=\"Default\"\n          valueLabelDisplay=\"auto\"\n          onChange={handleSliderChange}\n          min={0}\n          max={10}\n          step={0.01}\n          color=\"primary\"\n          className=\"slider\"\n          style={{ width: 300, margin: 0 }}\n        />\n      </div>\n      <div style={{ overflow: \"hidden\", display: \"flex\" }}>\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Draggable>\n            <div\n              className=\"image-container\"\n              style={{\n                width: WIDTH * scale,\n                height: HEIGHT * scale,\n                backgroundImage: `url(${image})`,\n              }}\n            >\n              {SVGLines}\n            </div>\n          </Draggable>\n          <div style={{ marginTop: 10 }}>\n            <List\n              sx={{\n                width: \"100%\",\n                maxWidth: 360,\n                bgcolor: \"background.paper\",\n                position: \"relative\",\n                overflow: \"auto\",\n                maxHeight: 400,\n                \"& ul\": { padding: 0 },\n                borderRadius: 1,\n              }}\n              subheader={<ListSubheader>Tracks</ListSubheader>}\n              component=\"nav\"\n              aria-label=\"main mailbox folders\"\n            >\n              <Divider />\n              {renderRows(paths)}\n            </List>\n          </div>\n        </div>\n        <FormControl\n          sx={{ margin: 0, marginLeft: 2 }}\n          component=\"fieldset\"\n          variant=\"standard\"\n        >\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={filters.markMeasurements}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setFilters((prevFilters) => ({\n                      ...prevFilters,\n                      markMeasurements: event.target.checked,\n                    }))\n                  }}\n                />\n              }\n              label=\"Mark measurments\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={filters.markEstimated}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setFilters((prevFilters) => ({\n                      ...prevFilters,\n                      markEstimated: event.target.checked,\n                    }))\n                  }}\n                />\n              }\n              label=\"Mark estimated\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={filters.onlyConfirmed}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setFilters((prevFilters) => ({\n                      ...prevFilters,\n                      onlyConfirmed: event.target.checked,\n                    }))\n                  }}\n                />\n              }\n              label=\"Show only confirmed\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={filters.trackId}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setFilters((prevFilters) => ({\n                      ...prevFilters,\n                      trackId: event.target.checked,\n                    }))\n                  }}\n                />\n              }\n              label=\"Show track id\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={filters.showLines}\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                    setFilters((prevFilters) => ({\n                      ...prevFilters,\n                      showLines: event.target.checked,\n                    }))\n                  }}\n                />\n              }\n              label=\"Show lines\"\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n    </div>\n  )\n}\n\nexport default SourcePlotter\n","import {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  ListItemText,\n  FormControlLabel,\n  Button,\n  SelectChangeEvent,\n} from \"@mui/material\"\nimport {\n  LocalizationProvider,\n  DatePicker,\n  TimePicker,\n} from \"@mui/x-date-pickers\"\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\"\nimport { names } from \"../../../helpers/consts\"\nimport dayjs, { Dayjs } from \"dayjs\"\n\ninterface HeaderProps {\n  date: Dayjs\n  setDate: (value: React.SetStateAction<dayjs.Dayjs>) => void\n  fromTime: Dayjs\n  setFromTime: (value: React.SetStateAction<dayjs.Dayjs>) => void\n  setToTime: (value: React.SetStateAction<dayjs.Dayjs>) => void\n  interval: number\n  setDir: (value: React.SetStateAction<0 | 1 | -1>) => void\n  setInterval: (value: React.SetStateAction<number>) => void\n  showType: string[]\n  handleChange: (event: SelectChangeEvent<string[]>) => void\n  filterLength: boolean\n  setFilterLength: (value: React.SetStateAction<boolean>) => void\n  minLength: number\n  setMinLength: (value: React.SetStateAction<number>) => void\n  maxLength: number\n  setMaxLength: (value: React.SetStateAction<number>) => void\n  handleBackwardClick: () => void\n  handleForwardClick: () => void\n}\n\nexport const Header: React.FC<HeaderProps> = ({\n  date,\n  setDate,\n  fromTime,\n  setFromTime,\n  setToTime,\n  interval,\n  setDir,\n  setInterval,\n  showType,\n  handleChange,\n  filterLength,\n  setFilterLength,\n  minLength,\n  setMinLength,\n  maxLength,\n  setMaxLength,\n  handleBackwardClick,\n  handleForwardClick,\n}) => {\n  const ITEM_HEIGHT = 48\n  const ITEM_PADDING_TOP = 8\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  }\n  console.log(showType)\n  return (\n    <div>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          label=\"Date\"\n          format=\"YYYY-MM-DD\"\n          value={date}\n          onChange={(newValue) => {\n            if (newValue) setDate(newValue)\n          }}\n          sx={{\n            backgroundColor: \"background.default\",\n            borderRadius: 1,\n            marginRight: 2,\n          }}\n        />\n        <TimePicker\n          label=\"From time\"\n          value={fromTime}\n          onChange={(newValue) => {\n            if (newValue) {\n              setFromTime(newValue)\n              setToTime(newValue.add(interval, \"minutes\"))\n              setDir(0)\n            }\n          }}\n          ampm={false}\n          sx={{\n            backgroundColor: \"background.default\",\n            borderRadius: 1,\n            marginRight: 2,\n          }}\n        />\n      </LocalizationProvider>\n      <TextField\n        label=\"Interval in minutes\"\n        id=\"outlined-start-adornment\"\n        sx={{\n          width: \"25ch\",\n          backgroundColor: \"background.default\",\n          borderRadius: 1,\n          margin: 0,\n          marginRight: 2,\n        }}\n        value={interval}\n        onChange={(newVal) => {\n          const val = Number(newVal.target.value)\n          if (!isNaN(val)) {\n            setInterval(val)\n            setToTime(fromTime.add(val, \"minutes\"))\n          }\n        }}\n      />\n      <FormControl sx={{ m: 1, width: 300, margin: 0 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Show types</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={showType}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Show types\" />}\n          renderValue={(selected) => selected.join(\", \")}\n          MenuProps={MenuProps}\n          sx={{ backgroundColor: \"background.default\" }}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={showType.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <div>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={filterLength}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setFilterLength(event.target.checked)\n              }}\n            />\n          }\n          label=\"Filter length\"\n          style={{ margin: 0, marginTop: 10 }}\n        />\n      </div>\n      {filterLength && (\n        <div style={{ marginTop: 10 }}>\n          <TextField\n            label=\"Minimum length\"\n            id=\"outlined-start-adornment\"\n            sx={{\n              m: 1,\n              width: \"25ch\",\n              backgroundColor: \"background.default\",\n              borderRadius: 1,\n              margin: 0,\n              marginRight: 2,\n            }}\n            value={minLength}\n            onChange={(newVal) => {\n              const val = Number(newVal.target.value)\n              if (!isNaN(val)) {\n                setMinLength(val)\n              }\n            }}\n          />\n          <TextField\n            label=\"Maximum length\"\n            id=\"outlined-start-adornment\"\n            sx={{\n              m: 1,\n              width: \"25ch\",\n              backgroundColor: \"background.default\",\n              borderRadius: 1,\n              margin: 0,\n              marginRight: 2,\n            }}\n            value={maxLength}\n            onChange={(newVal) => {\n              const val = Number(newVal.target.value)\n              if (!isNaN(val)) {\n                setMaxLength(val)\n              }\n            }}\n          />\n        </div>\n      )}\n      <div style={{ margin: 0, marginTop: 10 }}>\n        <Button\n          sx={{ marginRight: 2, backgroundColor: \"background.default\" }}\n          onClick={() => handleBackwardClick()}\n        >\n          {\"<\"}\n        </Button>\n        <Button\n          sx={{ marginRight: 2, backgroundColor: \"background.default\" }}\n          onClick={() => handleForwardClick()}\n        >\n          {\">\"}\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport SourcePlotter from \"./SourcePlotter\"\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport { Track } from \"../../helpers/Paths\"\nimport dayjs, { Dayjs } from \"dayjs\"\nimport { SelectChangeEvent } from \"@mui/material\"\nimport { names } from \"../../helpers/consts\"\nimport { Streamlit } from \"streamlit-component-lib\"\nimport { Header } from \"./header/Header\"\n\nconst TrackAnalysis: React.FC = () => {\n  const renderData = useRenderData()\n  const [from, setFrom] = useState(0)\n  const [to, setTo] = useState(0)\n  const [dir, setDir] = useState<0 | 1 | -1>(0)\n  const [date, setDate] = useState<Dayjs>(dayjs(renderData.args[\"date\"]))\n  const [fromTime, setFromTime] = useState<Dayjs>(\n    dayjs(renderData.args[\"date\"])\n  )\n  const [toTime, setToTime] = useState<Dayjs>(dayjs(renderData.args[\"date\"]))\n  const [interval, setInterval] = useState(1)\n  const [showType, setShowType] = React.useState<string[]>(names)\n  const [filterLength, setFilterLength] = useState(false)\n  const [minLength, setMinLength] = useState(0)\n  const [maxLength, setMaxLength] = useState(0)\n  const [tracks, setTracks] = useState<Track[]>(renderData.args[\"tracks\"])\n  const ground = renderData.args[\"image\"]\n  const height = renderData.args[\"height\"]\n  const width = renderData.args[\"width\"]\n\n  useEffect(() => {\n    if (date.isValid()) {\n      Streamlit.setComponentValue(date.format(\"YYYY-MM-DD\"))\n    }\n  }, [date])\n\n  useEffect(() => {\n    const setIndices = () => {\n      let fromIndex: number\n      let toIndex: number\n      if (dir === 0) {\n        fromIndex = binarySearch(fromTime, 0, tracks.length - 1)\n        toIndex = binarySearch(toTime, 0, tracks.length - 1)\n      } else if (dir === 1) {\n        fromIndex = to + 1\n        let i = fromIndex\n        console.log(\"INDEX:\", i, tracks.length - 1, i < tracks.length - 1)\n        while (i < tracks.length && dayjs(tracks[i][5]).isBefore(toTime)) {\n          i++\n        }\n        toIndex = i\n      } else {\n        toIndex = from\n        let i = toIndex\n        console.log(\"INDEX:\", i, tracks.length)\n        while (\n          i > 0 &&\n          i < tracks.length &&\n          fromTime.isBefore(dayjs(tracks[i][5]))\n        ) {\n          i--\n        }\n\n        fromIndex = i + 1\n      }\n      setFrom(fromIndex)\n      setTo(toIndex)\n      console.log(\"First track:\", tracks[fromIndex])\n      console.log(\"Last track\", tracks[toIndex - 1])\n      console.log(`From ${fromIndex} to ${toIndex}`)\n    }\n    setIndices()\n  }, [fromTime, toTime])\n\n  const handleBackwardClick = () => {\n    setFromTime((fromTime) => fromTime.subtract(interval, \"minutes\"))\n    setToTime((toTime) => toTime.subtract(interval, \"minutes\"))\n    setDir(-1)\n  }\n\n  const handleForwardClick = () => {\n    setFromTime((fromTime) => fromTime.add(interval, \"minutes\"))\n    setToTime((toTime) => toTime.add(interval, \"minutes\"))\n    setDir(1)\n  }\n\n  function binarySearch(time: Dayjs, low: number, high: number): number {\n    while (low < high) {\n      const mid = Math.floor((low + high) >>> 1)\n      if (mid === 0) return 0\n      const midTime = dayjs(tracks[mid][5])\n      if (midTime.isAfter(time) && dayjs(tracks[mid - 1][5]).isBefore(time)) {\n        return mid\n      } else if (midTime.isAfter(time)) {\n        high = mid\n      } else {\n        low = mid + 1\n      }\n    }\n    return low\n  }\n\n  const cameraPlots: JSX.Element[] = [\n    <SourcePlotter\n      image={ground}\n      WIDTH={width}\n      HEIGHT={height}\n      tracks={tracks}\n      from={from}\n      to={to}\n      label={\"Version 1\"}\n      showType={showType}\n      filterLength={filterLength}\n      minLength={minLength}\n      maxLength={maxLength}\n    />,\n  ]\n\n  const handleChange = (event: SelectChangeEvent<typeof showType>) => {\n    const {\n      target: { value },\n    } = event\n    setShowType(typeof value === \"string\" ? value.split(\",\") : value)\n  }\n\n  return (\n    <div style={{ flexDirection: \"column\", marginTop: 30 }}>\n      <Header\n        date={date}\n        setDate={setDate}\n        fromTime={fromTime}\n        setFromTime={setFromTime}\n        setToTime={setToTime}\n        interval={interval}\n        setDir={setDir}\n        setInterval={setInterval}\n        showType={showType}\n        handleChange={handleChange}\n        filterLength={filterLength}\n        setFilterLength={setFilterLength}\n        minLength={minLength}\n        setMinLength={setMinLength}\n        maxLength={maxLength}\n        setMaxLength={setMaxLength}\n        handleBackwardClick={handleBackwardClick}\n        handleForwardClick={handleForwardClick}\n      />\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <div\n          style={{\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n          }}\n        >\n          {cameraPlots.map((plot) => plot)}\n          <div style={{ height: 10000 }} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TrackAnalysis\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport TrackAnalysis from \"./components/plotter/TrackAnalysis\"\nimport { ThemeProvider, createTheme } from \"@mui/material\"\n\n//Dirty dirty\nconsole.warn = () => {}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#F63366\",\n    },\n    common: {\n      black: \"#F63366\",\n    },\n    secondary: {\n      main: \"#F0F2F6\",\n    },\n    text: {\n      primary: \"#fff\",\n      secondary: \"#fff\",\n    },\n    action: {\n      active: \"#fff\",\n    },\n    background: {\n      default: \"#262730\",\n      paper: \"#262730\",\n    },\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <ThemeProvider theme={theme}>\n        <TrackAnalysis />\n      </ThemeProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}