from . import access_logger as access_logger
from .protocol import Protocol as Protocol
from _typeshed import Incomplete
from aioworkers.core.config import ValueExtractor as ValueExtractor
from aioworkers.net.server import SocketServer as SocketServer
from aioworkers.net.uri import URL as URL
from aioworkers.worker.base import Worker as Worker
from typing import Awaitable, Callable, Mapping

class WebServer(SocketServer, Worker):
    headers: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    def set_config(self, config: ValueExtractor): ...
    parser_factory: Incomplete
    parser_url: Incomplete
    url: Incomplete
    async def init(self) -> None: ...
    async def start(self) -> None: ...
    async def stop(self, force: bool = ...) -> None: ...
    async def handler(self, scope: Mapping, receive: Callable[[], Awaitable], send: Callable[[Mapping], Awaitable]): ...
    async def run(self, value: Incomplete | None = ...) -> None: ...
