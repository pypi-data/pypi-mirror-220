{"version":3,"file":"static/js/346.647c3d99.js","mappings":"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","sources":["webpack://platypush/./src/components/widgets/DateTime/Index.vue","webpack://platypush/./src/components/widgets/DateTime/Index.vue?dfd6","webpack://platypush/./src/components/widgets/DateTimeWeather/Index.vue","webpack://platypush/./src/components/Sensor.vue","webpack://platypush/./src/components/Sensor.vue?9950","webpack://platypush/./src/components/widgets/DateTimeWeather/Index.vue?aa2d"],"sourcesContent":["<template>\n  <div class=\"date-time\">\n    <div class=\"date\" v-text=\"formatDate(now)\" v-if=\"_showDate\" />\n    <div class=\"time\" v-text=\"formatTime(now, _showSeconds)\" v-if=\"_showTime\" />\n  </div>\n</template>\n\n<script>\nimport Utils from \"@/Utils\";\n\n// Widget to show date and time\nexport default {\n  name: 'DateTime',\n  mixins: [Utils],\n  props: {\n    // If false then don't display the date.\n    showDate: {\n      required: false,\n      default: true,\n    },\n\n    // If false then don't display the time.\n    showTime: {\n      required: false,\n      default: true,\n    },\n\n    // If false then don't display the seconds.\n    showSeconds: {\n      required: false,\n      default: true,\n    },\n  },\n\n  computed: {\n    _showTime() {\n      return this.parseBoolean(this.showTime)\n    },\n\n    _showDate() {\n      return this.parseBoolean(this.showDate)\n    },\n\n    _showSeconds() {\n      return this.parseBoolean(this.showSeconds)\n    },\n  },\n\n  data: function() {\n    return {\n      now: new Date(),\n    };\n  },\n\n  methods: {\n    refreshTime() {\n      this.now = new Date()\n    },\n  },\n\n  mounted: function() {\n    this.refreshTime()\n    setInterval(this.refreshTime, 1000)\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.date-time {\n  .date {\n    font-size: 1.3em;\n  }\n\n  .time {\n    font-size: 2em;\n  }\n}\n</style>\n","import { render } from \"./Index.vue?vue&type=template&id=ca42eb9c&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=ca42eb9c&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ca42eb9c\"]])\n\nexport default __exports__","<template>\n  <div class=\"date-time-weather\">\n    <div class=\"row date-time-container\">\n      <DateTime :show-date=\"_showDate\" :show-time=\"_showTime\" :show-seconds=\"_showSeconds\" :animate=\"animate\"\n                v-if=\"_showDate || _showTime\" />\n    </div>\n\n    <div class=\"row weather-container\">\n      <Weather :show-summary=\"_showSummary\" :animate=\"_animate\" :icon-size=\"iconSize\"\n               :refresh-seconds=\"weatherRefreshSeconds\" v-if=\"showWeather\"/>\n    </div>\n\n    <div class=\"row sensors-container\">\n      <div class=\"row\" v-if=\"_showSensors && Object.keys(sensors).length\">\n        <div class=\"col-3\">\n          <Sensor icon-class=\"fas fa-thermometer-half\" :value=\"sensors[sensorTemperatureAttr]\" unit=\"Â°\"\n                  v-if=\"sensors[sensorTemperatureAttr] != null\" />\n        </div>\n\n        <div class=\"col-6\">&nbsp;</div>\n\n        <div class=\"col-3\">\n          <Sensor icon-class=\"fas fa-tint\" :value=\"sensors[sensorHumidityAttr]\" unit=\"%\"\n                  v-if=\"sensors[sensorHumidityAttr] != null\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Utils from \"@/Utils\";\nimport DateTime from \"@/components/widgets/DateTime/Index\";\nimport Weather from \"@/components/widgets/Weather/Index\";\nimport Sensor from \"@/components/Sensor\";\n\n// Widget to show date, time, weather and temperature information\nexport default {\n  name: 'DateTimeWeather',\n  mixins: [Utils],\n  components: {Sensor, DateTime, Weather},\n  props: {\n    // If false then the weather icon will be animated.\n    // Otherwise, it will be a static image.\n    animate: {\n      required: false,\n      default: true,\n    },\n\n    // Size of the weather icon in pixels.\n    iconSize: {\n      type: Number,\n      required: false,\n      default: 50,\n    },\n\n    // If false then don't display the date.\n    showDate: {\n      required: false,\n      default: true,\n    },\n\n    // If false then don't display the time.\n    showTime: {\n      required: false,\n      default: true,\n    },\n\n    // If false then don't display the weather.\n    showWeather: {\n      required: false,\n      default: true,\n    },\n\n    // If false then the weather summary won't be displayed.\n    showSummary: {\n      required: false,\n      default: true,\n    },\n\n    // If false then temperature/humidity sensor data won't be shown.\n    showSensors: {\n      required: false,\n      default: true,\n    },\n\n    // If false then don't display the seconds.\n    showSeconds: {\n      required: false,\n      default: true,\n    },\n\n    // Name of the attribute on a received SensorDataChangeEvent that\n    // represents the temperature value to be rendered.\n    sensorTemperatureAttr: {\n      type: String,\n      required: false,\n      default: 'temperature',\n    },\n\n    // Name of the attribute on a received SensorDataChangeEvent that\n    // represents the humidity value to be rendered.\n    sensorHumidityAttr: {\n      type: String,\n      required: false,\n      default: 'humidity',\n    },\n\n    // Weather refresh interval in seconds.\n    weatherRefreshSeconds: {\n      type: Number,\n      required: false,\n      default: 900,\n    },\n  },\n\n  computed: {\n    _showDate() {\n      return this.parseBoolean(this.showDate)\n    },\n\n    _showTime() {\n      return this.parseBoolean(this.showTime)\n    },\n\n    _showSeconds() {\n      return this.parseBoolean(this.showSeconds)\n    },\n\n    _showWeather() {\n      return this.parseBoolean(this.showWeather)\n    },\n\n    _showSummary() {\n      return this.parseBoolean(this.showSummary)\n    },\n\n    _showSensors() {\n      return this.parseBoolean(this.showSensors)\n    },\n\n    _animate() {\n      return this.parseBoolean(this.animate)\n    },\n  },\n\n  data: function() {\n    return {\n      sensors: {},\n    };\n  },\n\n  methods: {\n    onSensorData(event) {\n      if (\n        this.sensorTemperatureAttr in event.data &&\n        typeof event.data[this.sensorTemperatureAttr] === 'number'\n      )\n        this.sensors.temperature = event.data[this.sensorTemperatureAttr]\n\n      if (\n        this.sensorHumidityAttr in event.data &&\n        typeof event.data[this.sensorHumidityAttr] === 'number'\n      )\n        this.sensors.humidity = event.data[this.sensorHumidityAttr]\n    },\n  },\n\n  mounted() {\n    this.subscribe(this.onSensorData, null, 'platypush.message.event.sensor.SensorDataChangeEvent');\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.date-time-weather {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 0.5em;\n\n  .row {\n    text-align: center;\n  }\n\n  .date-time-container {\n    height: 35%;\n  }\n\n  .weather-container {\n    height: 45%;\n  }\n\n  .sensors-container {\n    width: 100%;\n    height: 20%;\n    position: relative;\n\n    .row {\n      width: 100%;\n      position: absolute;\n      bottom: 0;\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"sensor\">\n    <div class=\"label-container col-4\" v-if=\"iconClass || name\">\n      <i :class=\"iconClass\" v-if=\"iconClass\" />\n      <span v-text=\"name\" v-else-if=\"name\" />\n    </div>\n\n    <div class=\"value-container col-8\">\n      <span class=\"value\" v-text=\"_value\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Sensor\",\n  props: {\n    // The FontAwesome icon class to be used.\n    iconClass: {\n      type: String,\n      required: false,\n    },\n\n    // The name of the sensor metric.\n    name: {\n      type: String,\n      required: false,\n    },\n\n    // Sensor value.\n    value: {\n      required: false,\n    },\n\n    // Sensor unit.\n    unit: {\n      type: String,\n      required: false,\n    },\n\n    // Number of decimal units.\n    decimals: {\n      type: Number,\n      required: false,\n      default: 1,\n    },\n\n    // Set to true if the sensor holds a binary value.\n    isBoolean: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n  },\n\n  computed: {\n    _value() {\n      if (this.value == null)\n        return 'N/A'\n\n      if (this.isBoolean)\n        return this.parseBoolean(this.value)\n      if (Array.isArray(this.value) || typeof(this.value) === 'object')\n        return JSON.stringify(this.value)\n\n      let value = parseFloat(this.value)\n      if (this.decimals != null)\n        value = value.toFixed(this.decimals)\n      if (this.unit)\n        value = `${value}${this.unit}`\n\n      return value\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.label-container {\n  text-align: left;\n}\n\n.value-container {\n  text-align: right;\n}\n</style>\n","import { render } from \"./Sensor.vue?vue&type=template&id=5031881e&scoped=true\"\nimport script from \"./Sensor.vue?vue&type=script&lang=js\"\nexport * from \"./Sensor.vue?vue&type=script&lang=js\"\n\nimport \"./Sensor.vue?vue&type=style&index=0&id=5031881e&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5031881e\"]])\n\nexport default __exports__","import { render } from \"./Index.vue?vue&type=template&id=69d38a93&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=69d38a93&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-69d38a93\"]])\n\nexport default __exports__"],"names":["class","_showDate","now","_showTime","_showSeconds","name","mixins","Utils","props","showDate","required","default","showTime","showSeconds","computed","this","parseBoolean","data","Date","methods","refreshTime","mounted","setInterval","__exports__","render","animate","showWeather","_showSummary","_animate","iconSize","weatherRefreshSeconds","_showSensors","Object","keys","sensors","length","sensorTemperatureAttr","value","unit","sensorHumidityAttr","iconClass","type","String","decimals","Number","isBoolean","Boolean","_value","Array","isArray","JSON","stringify","parseFloat","toFixed","components","Sensor","DateTime","Weather","showSummary","showSensors","_showWeather","onSensorData","event","temperature","humidity","subscribe"],"sourceRoot":""}