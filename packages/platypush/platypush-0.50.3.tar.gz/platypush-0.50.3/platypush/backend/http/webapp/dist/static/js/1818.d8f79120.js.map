{"version":3,"file":"static/js/1818.d8f79120.js","mappings":"sLACOA,MAAM,U,sEAAX,QAGM,MAHN,EAGM,CAFW,EAAAC,UAAA,WAAf,QAA0B,YAC6B,EAAAC,YAAA,WAAvD,SAAoE,QAApD,EAAAA,WAAS,C,MAAGC,OAAQ,EAAAA,QAApC,qC,mCASJ,GACEC,KAAM,SACNC,WAAY,CAACC,QAAO,KACpBC,OAAQ,CAACC,EAAA,GACTC,MAAO,CAELC,WAAY,CACVC,KAAMC,OACNC,UAAU,IAIdC,OACE,MAAO,CACLb,SAAS,EACTC,UAAW,KACXC,OAAQ,CAAC,EAEZ,EAEDY,SAAU,CACRC,gBACE,OAAOC,KAAKP,WAAWQ,MAAM,KAAKC,KAAKC,GAAMA,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,KAAIC,KAAK,GACpF,GAGHC,QAAS,CACPC,QAASC,iBACPT,KAAKhB,SAAU,EAEf,IACEgB,KAAKf,WAAY,SAAW,SAAqB,IAAM,QAAQ,KAAsBe,KAAKD,0BAC1FC,KAAKU,SAAStB,WAAWY,KAAKD,eAAiBC,KAAKf,UACpDe,KAAKd,cAAgBc,KAAKW,QAAQ,yBAAyBX,KAAKP,aAAe,CAAC,CAGlF,CANA,QAKEO,KAAKhB,SAAU,CACjB,CACD,GAGH4B,QAAS,WACPZ,KAAKQ,SACN,G,UC/CH,MAAMK,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://platypush/./src/components/widgets/Plugin/Index.vue","webpack://platypush/./src/components/widgets/Plugin/Index.vue?cc4c"],"sourcesContent":["<template>\n  <div class=\"plugin\">\n    <Loading v-if=\"loading\" />\n    <component :is=\"component\" :config=\"config\" v-else-if=\"component\" />\n  </div>\n</template>\n\n<script>\nimport Utils from \"@/Utils\";\nimport Loading from \"@/components/Loading\";\nimport { defineAsyncComponent, shallowRef } from \"vue\";\n\nexport default {\n  name: \"Plugin\",\n  components: {Loading},\n  mixins: [Utils],\n  props: {\n    // Name of the plugin view to be loaded\n    pluginName: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      loading: false,\n      component: null,\n      config: {},\n    }\n  },\n\n  computed: {\n    componentName() {\n      return this.pluginName.split('.').map((t) => t[0].toUpperCase() + t.slice(1)).join('')\n    },\n  },\n\n  methods: {\n    refresh: async function() {\n      this.loading = true\n\n      try {\n        this.component = shallowRef(defineAsyncComponent(() => import(`@/components/panels/${this.componentName}/Index`)))\n        this.$options.components[this.componentName] = this.component\n        this.config = (await this.request('config.get_plugins'))?.[this.pluginName] || {}\n      } finally {\n        this.loading = false\n      }\n    },\n  },\n\n  mounted: function() {\n    this.refresh()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.plugin {\n  margin: -1em 0 0 -1em !important;\n  padding: 0;\n  width: calc(100% + 2em);\n  height: calc(100% + 2em);\n}\n</style>\n","import { render } from \"./Index.vue?vue&type=template&id=69b17daa&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=69b17daa&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/blacklight/git_tree/platypush/platypush/backend/http/webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-69b17daa\"]])\n\nexport default __exports__"],"names":["class","loading","component","config","name","components","Loading","mixins","Utils","props","pluginName","type","String","required","data","computed","componentName","this","split","map","t","toUpperCase","slice","join","methods","refresh","async","$options","request","mounted","__exports__","render"],"sourceRoot":""}