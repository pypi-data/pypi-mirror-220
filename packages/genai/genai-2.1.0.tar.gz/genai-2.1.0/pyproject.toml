# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.poetry]
name = "genai"
version = "2.1.0"
description = "Generative AI for IPython (enhance your code cells)"
authors = ["Kyle Kelley <rgbkrk@gmail.com>"]
maintainers = ["Kyle Kelley <rgbkrk@gmail.com>"]
license = "BSD-3-Clause"
readme = "README.md"
# old setup.cfg had a bdist_wheel option.
# To build a wheel, use poetry build -f wheel
keywords = ["notebook", "api", "noteable", "chatgpt", "gpt3", "openai", "ipython", "traceback", "assist", "llm"]
classifiers = [
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]

# Manifest.in is subsumed by poetry here
# https://python-poetry.org/docs/pyproject/#include-and-exclude
include = []

[[tool.poetry.source]]
name = "genai"
url = "https://pypi.org"

[tool.poetry.dependencies]
python = "^3.8"
openai = "^0.27.0"
ipython = "^8.10.0"
tabulate = "^0.9.0"
tiktoken = "^0.3.2"

[tool.poetry.dev-dependencies]
flake8-docstrings = "^1.6.0"
pytest = "^7.2.2"
black = "^23.1.0"
isort = "^5.10.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.19.0"
nox = "^2022.1.7"
nox-poetry = "^1.0.1"
pytest-mock = "^3.8.2"
bump2version = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pandas = "^1.5.3"
mypy = "^1.1.1"

[build-system]
requires = ["poetry-core>=1.0.1"]
build-backend = "poetry.core.masonry.api"

[tool.distutils.bdist_wheel]
universal = 0

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | src/nbformat

  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''
skip-string-normalization = true

[tool.isort]
line_length = 100
multi_line_output = 3
include_trailing_comma = true
known_third_party = []

[tool.coverage.run]
branch = false
omit = ["genai/_version.py", "*/tests/*"]

[tool.coverage.report]
exclude_lines = ["if self.debug:",
                 "pragma: no cover",
                 "raise AssertionError",
                 "raise NotImplementedError",
                 "if __name__ == '__main__':"]
ignore_errors = true
omit = [
  "*/tests/*",
  "genai/_version.py"
]

[tool.mypy]
ignore_missing_imports = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = "always"
