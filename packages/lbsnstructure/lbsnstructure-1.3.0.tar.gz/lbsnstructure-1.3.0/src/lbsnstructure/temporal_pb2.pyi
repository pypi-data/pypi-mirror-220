"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
global package namespace"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.message
import google.protobuf.timestamp_pb2
import lbsnstructure.social_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Event(google.protobuf.message.Message):
    """
    An event with a representation on LBSN.

    Events are temporal reference points with a start and end date.
    Start and end date may coincide.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PKEY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    EVENT_DATE_FIELD_NUMBER: builtins.int
    EVENT_DATE_START_FIELD_NUMBER: builtins.int
    EVENT_DATE_END_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    EVENT_LATLNG_FIELD_NUMBER: builtins.int
    EVENT_AREA_FIELD_NUMBER: builtins.int
    PLACE_PKEY_FIELD_NUMBER: builtins.int
    CITY_PKEY_FIELD_NUMBER: builtins.int
    COUNTRY_PKEY_FIELD_NUMBER: builtins.int
    USER_PKEY_FIELD_NUMBER: builtins.int
    EVENT_DESCRIPTION_FIELD_NUMBER: builtins.int
    EVENT_WEBSITE_FIELD_NUMBER: builtins.int
    EVENT_TYPE_FIELD_NUMBER: builtins.int
    EVENT_SHARE_COUNT_FIELD_NUMBER: builtins.int
    EVENT_LIKE_COUNT_FIELD_NUMBER: builtins.int
    EVENT_COMMENT_COUNT_FIELD_NUMBER: builtins.int
    EVENT_VIEWS_COUNT_FIELD_NUMBER: builtins.int
    EVENT_ENGAGE_COUNT_FIELD_NUMBER: builtins.int
    @property
    def pkey(self) -> lbsnstructure.social_pb2.CompositeKey:
        """
        Primary Key. A unique identifier of the object.
        """
    name: builtins.str
    """
    Name of the event
    """
    @property
    def event_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """
        Date and time of the event
        """
    @property
    def event_date_start(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """
        Start date of the event
        """
    @property
    def event_date_end(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """
        End date of the event
        """
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """
        Duration of the event in seconds
        """
    event_latlng: builtins.str
    """
    Location of the event (WKT Point)
    """
    event_area: builtins.str
    """
    Location of the event (WKT Polygon)
    """
    @property
    def place_pkey(self) -> lbsnstructure.social_pb2.CompositeKey:
        """
        Place reference
        """
    @property
    def city_pkey(self) -> lbsnstructure.social_pb2.CompositeKey:
        """
        City reference
        """
    @property
    def country_pkey(self) -> lbsnstructure.social_pb2.CompositeKey:
        """
        Country reference
        """
    @property
    def user_pkey(self) -> lbsnstructure.social_pb2.CompositeKey:
        """
        User reference (e.g. the owner of the event)
        """
    event_description: builtins.str
    """
    A description of the event.
    """
    event_website: builtins.str
    """
    Url to the public website of the event.
    """
    event_type: builtins.str
    """
    Any string to describe the type of event
    """
    event_share_count: builtins.int
    """
    Number of times this Event has been shared by other users.
    """
    event_like_count: builtins.int
    """
    Number of times this Event has been
    liked/highlighted by other users.
    """
    event_comment_count: builtins.int
    """
    Number of times this Event has been
    commented on.
    """
    event_views_count: builtins.int
    """
    Number of times this Event has been
    viewed.
    """
    event_engage_count: builtins.int
    """
    Number of users who participate in this Event.
    """
    def __init__(
        self,
        *,
        pkey: lbsnstructure.social_pb2.CompositeKey | None = ...,
        name: builtins.str = ...,
        event_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        event_date_start: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        event_date_end: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        duration: google.protobuf.duration_pb2.Duration | None = ...,
        event_latlng: builtins.str = ...,
        event_area: builtins.str = ...,
        place_pkey: lbsnstructure.social_pb2.CompositeKey | None = ...,
        city_pkey: lbsnstructure.social_pb2.CompositeKey | None = ...,
        country_pkey: lbsnstructure.social_pb2.CompositeKey | None = ...,
        user_pkey: lbsnstructure.social_pb2.CompositeKey | None = ...,
        event_description: builtins.str = ...,
        event_website: builtins.str = ...,
        event_type: builtins.str = ...,
        event_share_count: builtins.int = ...,
        event_like_count: builtins.int = ...,
        event_comment_count: builtins.int = ...,
        event_views_count: builtins.int = ...,
        event_engage_count: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["city_pkey", b"city_pkey", "country_pkey", b"country_pkey", "duration", b"duration", "event_date", b"event_date", "event_date_end", b"event_date_end", "event_date_start", b"event_date_start", "pkey", b"pkey", "place_pkey", b"place_pkey", "user_pkey", b"user_pkey"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["city_pkey", b"city_pkey", "country_pkey", b"country_pkey", "duration", b"duration", "event_area", b"event_area", "event_comment_count", b"event_comment_count", "event_date", b"event_date", "event_date_end", b"event_date_end", "event_date_start", b"event_date_start", "event_description", b"event_description", "event_engage_count", b"event_engage_count", "event_latlng", b"event_latlng", "event_like_count", b"event_like_count", "event_share_count", b"event_share_count", "event_type", b"event_type", "event_views_count", b"event_views_count", "event_website", b"event_website", "name", b"name", "pkey", b"pkey", "place_pkey", b"place_pkey", "user_pkey", b"user_pkey"]) -> None: ...

global___Event = Event
