"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import th2_grpc_common.common_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CheckpointRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PARENT_EVENT_ID_FIELD_NUMBER: builtins.int
    description: typing.Text
    @property
    def parent_event_id(self) -> th2_grpc_common.common_pb2.EventID: ...
    def __init__(self,
        *,
        description: typing.Text = ...,
        parent_event_id: typing.Optional[th2_grpc_common.common_pb2.EventID] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["parent_event_id",b"parent_event_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","parent_event_id",b"parent_event_id"]) -> None: ...
global___CheckpointRequest = CheckpointRequest

class CheckpointResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CHECKPOINT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def checkpoint(self) -> th2_grpc_common.common_pb2.Checkpoint: ...
    @property
    def status(self) -> th2_grpc_common.common_pb2.RequestStatus: ...
    def __init__(self,
        *,
        checkpoint: typing.Optional[th2_grpc_common.common_pb2.Checkpoint] = ...,
        status: typing.Optional[th2_grpc_common.common_pb2.RequestStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["checkpoint",b"checkpoint","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["checkpoint",b"checkpoint","status",b"status"]) -> None: ...
global___CheckpointResponse = CheckpointResponse

class ChainID(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text
    def __init__(self,
        *,
        id: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___ChainID = ChainID

class CheckRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONNECTIVITY_ID_FIELD_NUMBER: builtins.int
    ROOT_FILTER_FIELD_NUMBER: builtins.int
    CHECKPOINT_FIELD_NUMBER: builtins.int
    MESSAGE_TIMEOUT_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    PARENT_EVENT_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    BOOK_NAME_FIELD_NUMBER: builtins.int
    @property
    def connectivity_id(self) -> th2_grpc_common.common_pb2.ConnectionID: ...
    @property
    def root_filter(self) -> th2_grpc_common.common_pb2.RootMessageFilter: ...
    @property
    def checkpoint(self) -> th2_grpc_common.common_pb2.Checkpoint:
        """Registered Checkpoint. If the chain_id is also set in the request the checkpoint will be ignored"""
        pass
    message_timeout: builtins.int
    """Timeout to wait for messages after checkpoint. The message's timestamp will be used to compute the timeout"""

    timeout: builtins.int
    """Timeout for rule execution. Uses the real time to limit the execution of the rule"""

    @property
    def parent_event_id(self) -> th2_grpc_common.common_pb2.EventID: ...
    description: typing.Text
    direction: th2_grpc_common.common_pb2.Direction.ValueType
    @property
    def chain_id(self) -> global___ChainID:
        """The chain id to continue checking."""
        pass
    book_name: typing.Text
    """If it's not set the check will be started from the specified checkpoint otherwise checkpoint will be ignored"""

    def __init__(self,
        *,
        connectivity_id: typing.Optional[th2_grpc_common.common_pb2.ConnectionID] = ...,
        root_filter: typing.Optional[th2_grpc_common.common_pb2.RootMessageFilter] = ...,
        checkpoint: typing.Optional[th2_grpc_common.common_pb2.Checkpoint] = ...,
        message_timeout: builtins.int = ...,
        timeout: builtins.int = ...,
        parent_event_id: typing.Optional[th2_grpc_common.common_pb2.EventID] = ...,
        description: typing.Text = ...,
        direction: th2_grpc_common.common_pb2.Direction.ValueType = ...,
        chain_id: typing.Optional[global___ChainID] = ...,
        book_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","checkpoint",b"checkpoint","connectivity_id",b"connectivity_id","parent_event_id",b"parent_event_id","root_filter",b"root_filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["book_name",b"book_name","chain_id",b"chain_id","checkpoint",b"checkpoint","connectivity_id",b"connectivity_id","description",b"description","direction",b"direction","message_timeout",b"message_timeout","parent_event_id",b"parent_event_id","root_filter",b"root_filter","timeout",b"timeout"]) -> None: ...
global___CheckRuleRequest = CheckRuleRequest

class CheckRuleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STATUS_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> th2_grpc_common.common_pb2.RequestStatus: ...
    @property
    def chain_id(self) -> global___ChainID:
        """You can use it to unite the next rule to the chain with currently submitted one"""
        pass
    def __init__(self,
        *,
        status: typing.Optional[th2_grpc_common.common_pb2.RequestStatus] = ...,
        chain_id: typing.Optional[global___ChainID] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","status",b"status"]) -> None: ...
global___CheckRuleResponse = CheckRuleResponse

class CheckSequenceRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PRE_FILTER_FIELD_NUMBER: builtins.int
    ROOT_MESSAGE_FILTERS_FIELD_NUMBER: builtins.int
    CHECKPOINT_FIELD_NUMBER: builtins.int
    MESSAGE_TIMEOUT_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    CONNECTIVITY_ID_FIELD_NUMBER: builtins.int
    PARENT_EVENT_ID_FIELD_NUMBER: builtins.int
    CHECK_ORDER_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    SILENCE_CHECK_FIELD_NUMBER: builtins.int
    BOOK_NAME_FIELD_NUMBER: builtins.int
    @property
    def pre_filter(self) -> global___PreFilter: ...
    @property
    def root_message_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[th2_grpc_common.common_pb2.RootMessageFilter]:
        """
        Either this field or message_filters must be set. If both are set the error response will be received from check1
        """
        pass
    @property
    def checkpoint(self) -> th2_grpc_common.common_pb2.Checkpoint:
        """Registered Checkpoint. If the chain_id is also set in the request the checkpoint will be ignored"""
        pass
    message_timeout: builtins.int
    """Timeout to wait for messages after checkpoint. The message's timestamp will be used to compute the timeout"""

    timeout: builtins.int
    """Timeout for rule execution. Uses the real time to limit the execution of the rule"""

    @property
    def connectivity_id(self) -> th2_grpc_common.common_pb2.ConnectionID: ...
    @property
    def parent_event_id(self) -> th2_grpc_common.common_pb2.EventID: ...
    check_order: builtins.bool
    description: typing.Text
    direction: th2_grpc_common.common_pb2.Direction.ValueType
    @property
    def chain_id(self) -> global___ChainID:
        """The chain id to continue checking."""
        pass
    @property
    def silence_check(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """If it's not set the check will be started from the specified checkpoint otherwise checkpoint will be ignored"""
        pass
    book_name: typing.Text
    def __init__(self,
        *,
        pre_filter: typing.Optional[global___PreFilter] = ...,
        root_message_filters: typing.Optional[typing.Iterable[th2_grpc_common.common_pb2.RootMessageFilter]] = ...,
        checkpoint: typing.Optional[th2_grpc_common.common_pb2.Checkpoint] = ...,
        message_timeout: builtins.int = ...,
        timeout: builtins.int = ...,
        connectivity_id: typing.Optional[th2_grpc_common.common_pb2.ConnectionID] = ...,
        parent_event_id: typing.Optional[th2_grpc_common.common_pb2.EventID] = ...,
        check_order: builtins.bool = ...,
        description: typing.Text = ...,
        direction: th2_grpc_common.common_pb2.Direction.ValueType = ...,
        chain_id: typing.Optional[global___ChainID] = ...,
        silence_check: typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        book_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","checkpoint",b"checkpoint","connectivity_id",b"connectivity_id","parent_event_id",b"parent_event_id","pre_filter",b"pre_filter","silence_check",b"silence_check"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["book_name",b"book_name","chain_id",b"chain_id","check_order",b"check_order","checkpoint",b"checkpoint","connectivity_id",b"connectivity_id","description",b"description","direction",b"direction","message_timeout",b"message_timeout","parent_event_id",b"parent_event_id","pre_filter",b"pre_filter","root_message_filters",b"root_message_filters","silence_check",b"silence_check","timeout",b"timeout"]) -> None: ...
global___CheckSequenceRuleRequest = CheckSequenceRuleRequest

class CheckSequenceRuleResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STATUS_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> th2_grpc_common.common_pb2.RequestStatus: ...
    @property
    def chain_id(self) -> global___ChainID:
        """You can use it to unite the next rule to the chain with currently submitted one"""
        pass
    def __init__(self,
        *,
        status: typing.Optional[th2_grpc_common.common_pb2.RequestStatus] = ...,
        chain_id: typing.Optional[global___ChainID] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","status",b"status"]) -> None: ...
global___CheckSequenceRuleResponse = CheckSequenceRuleResponse

class PreFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> th2_grpc_common.common_pb2.ValueFilter: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[th2_grpc_common.common_pb2.ValueFilter] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FIELDS_FIELD_NUMBER: builtins.int
    METADATA_FILTER_FIELD_NUMBER: builtins.int
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, th2_grpc_common.common_pb2.ValueFilter]: ...
    @property
    def metadata_filter(self) -> th2_grpc_common.common_pb2.MetadataFilter: ...
    def __init__(self,
        *,
        fields: typing.Optional[typing.Mapping[typing.Text, th2_grpc_common.common_pb2.ValueFilter]] = ...,
        metadata_filter: typing.Optional[th2_grpc_common.common_pb2.MetadataFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata_filter",b"metadata_filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fields",b"fields","metadata_filter",b"metadata_filter"]) -> None: ...
global___PreFilter = PreFilter

class NoMessageCheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PRE_FILTER_FIELD_NUMBER: builtins.int
    MESSAGE_TIMEOUT_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    CHECKPOINT_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    CONNECTIVITY_ID_FIELD_NUMBER: builtins.int
    PARENT_EVENT_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    BOOK_NAME_FIELD_NUMBER: builtins.int
    @property
    def pre_filter(self) -> global___PreFilter: ...
    message_timeout: builtins.int
    """Timeout to wait for messages after checkpoint. The message's timestamp will be used to compute the timeout"""

    timeout: builtins.int
    """Timeout for rule execution. Uses the real time to limit the execution of the rule"""

    @property
    def checkpoint(self) -> th2_grpc_common.common_pb2.Checkpoint:
        """Registered Checkpoint. If the chain_id is also set in the request the checkpoint will be ignored"""
        pass
    @property
    def chain_id(self) -> global___ChainID:
        """You can use it to unite the next rule to the chain with currently submitted one"""
        pass
    @property
    def connectivity_id(self) -> th2_grpc_common.common_pb2.ConnectionID: ...
    @property
    def parent_event_id(self) -> th2_grpc_common.common_pb2.EventID: ...
    description: typing.Text
    direction: th2_grpc_common.common_pb2.Direction.ValueType
    book_name: typing.Text
    def __init__(self,
        *,
        pre_filter: typing.Optional[global___PreFilter] = ...,
        message_timeout: builtins.int = ...,
        timeout: builtins.int = ...,
        checkpoint: typing.Optional[th2_grpc_common.common_pb2.Checkpoint] = ...,
        chain_id: typing.Optional[global___ChainID] = ...,
        connectivity_id: typing.Optional[th2_grpc_common.common_pb2.ConnectionID] = ...,
        parent_event_id: typing.Optional[th2_grpc_common.common_pb2.EventID] = ...,
        description: typing.Text = ...,
        direction: th2_grpc_common.common_pb2.Direction.ValueType = ...,
        book_name: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","checkpoint",b"checkpoint","connectivity_id",b"connectivity_id","parent_event_id",b"parent_event_id","pre_filter",b"pre_filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["book_name",b"book_name","chain_id",b"chain_id","checkpoint",b"checkpoint","connectivity_id",b"connectivity_id","description",b"description","direction",b"direction","message_timeout",b"message_timeout","parent_event_id",b"parent_event_id","pre_filter",b"pre_filter","timeout",b"timeout"]) -> None: ...
global___NoMessageCheckRequest = NoMessageCheckRequest

class NoMessageCheckResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STATUS_FIELD_NUMBER: builtins.int
    CHAIN_ID_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> th2_grpc_common.common_pb2.RequestStatus: ...
    @property
    def chain_id(self) -> global___ChainID:
        """You can use it to unite the next rule to the chain with currently submitted one"""
        pass
    def __init__(self,
        *,
        status: typing.Optional[th2_grpc_common.common_pb2.RequestStatus] = ...,
        chain_id: typing.Optional[global___ChainID] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chain_id",b"chain_id","status",b"status"]) -> None: ...
global___NoMessageCheckResponse = NoMessageCheckResponse
