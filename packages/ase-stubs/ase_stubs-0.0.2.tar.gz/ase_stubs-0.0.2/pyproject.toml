[tool.poetry]
name = "ase-stubs"
version = "0.0.2"
description = "Stub files for the Atomic Simulation Environment package."
authors = [
    "Ugochukwu Nwosu <ugognw@gmail.com>"
    ]
license = "LGPL-2.1-or-later"
readme = "README.rst"
repository = "https://gitlab.com/ugognw/python-comp-chem-utils"
packages = [
    { include = "ase-stubs", from = "src" }
]
include = [
    "AUTHORS.rst",
    "CHANGELOG.rst",
    "CONTRIBUTING.rst",
    "LICENSE",
    "README.rst",
    ".bumpversion.cfg",
    ".editorconfig",
    ".gitlab-ci.yml",
    ".gitlab",
    ".pre-commit-config.yaml",
]
exclude = ["tests"]
classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
        "Topic :: Software Development",
        "Typing :: Stubs Only"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
ase = "^3.22.1"

[tool.poetry.group.type_check.dependencies]
mypy = "*"

[tool.poetry.group.lint.dependencies]
ruff = "0.0.278"

[tool.poetry.group.format.dependencies]
black = "*"

[tool.poetry.group.vcs.dependencies]
pre-commit = "^2.20.0"
bump2version = "^1.0.1"
gitchangelog = "^3.0.4"

[tool.black]
line-length = 79
target-version = ['py311']
skip-string-normalization = true

[tool.mypy]
explicit_package_bases = true

[tool.ruff]
ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101", # flake8-bandit assert
    "S308", # flake8-bandit suspicious-mark-safe-usage
    "E501", # pycodestyle line-too-long
]
line-length = 79
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "EXE", # flake8-executable
    "F", # pyflakes
    "I", # isort
    "INT", # flake8-gettext
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]
src = ["src", "tests"]
target-version = "py311"

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
forced-separate = ["conftest"]
force-single-line = true
force-sort-within-sections = true
split-on-trailing-comma = false

[tool.ruff.per-file-ignores]
"noxfile.py" = ["EXE002"]
