# coding: utf-8

"""
    SportMonks

    Surpass the competition with superior sports data

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from sportmonks import schemas  # noqa: F401


class SportPredictionsByFixtureIdResponseDataItemPredictionsScores(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            _0_0 = schemas.NumberSchema
            _0_1 = schemas.NumberSchema
            _0_2 = schemas.NumberSchema
            _0_3 = schemas.NumberSchema
            _0_4 = schemas.NumberSchema
            _0_5 = schemas.NumberSchema
            _0_6 = schemas.NumberSchema
            _0_7 = schemas.NumberSchema
            _1_0 = schemas.NumberSchema
            _1_1 = schemas.NumberSchema
            _1_2 = schemas.NumberSchema
            _1_3 = schemas.NumberSchema
            _1_4 = schemas.NumberSchema
            _1_5 = schemas.NumberSchema
            _1_6 = schemas.NumberSchema
            _1_7 = schemas.NumberSchema
            _1_8 = schemas.NumberSchema
            _2_0 = schemas.NumberSchema
            _2_1 = schemas.NumberSchema
            _2_2 = schemas.NumberSchema
            _2_3 = schemas.NumberSchema
            _2_4 = schemas.NumberSchema
            _2_5 = schemas.NumberSchema
            _2_6 = schemas.NumberSchema
            _2_7 = schemas.NumberSchema
            _3_0 = schemas.NumberSchema
            _3_1 = schemas.NumberSchema
            _3_2 = schemas.NumberSchema
            _3_3 = schemas.NumberSchema
            _3_4 = schemas.NumberSchema
            _3_5 = schemas.NumberSchema
            _3_6 = schemas.NumberSchema
            _3_7 = schemas.NumberSchema
            _4_0 = schemas.NumberSchema
            _4_1 = schemas.NumberSchema
            _4_2 = schemas.NumberSchema
            _4_3 = schemas.NumberSchema
            _4_4 = schemas.NumberSchema
            _4_5 = schemas.NumberSchema
            _4_6 = schemas.NumberSchema
            _4_7 = schemas.NumberSchema
            _5_0 = schemas.NumberSchema
            _5_1 = schemas.NumberSchema
            _5_2 = schemas.NumberSchema
            _5_3 = schemas.NumberSchema
            _5_4 = schemas.NumberSchema
            _5_5 = schemas.NumberSchema
            _5_6 = schemas.NumberSchema
            _6_0 = schemas.NumberSchema
            _6_1 = schemas.NumberSchema
            _6_2 = schemas.NumberSchema
            _6_3 = schemas.NumberSchema
            _6_4 = schemas.NumberSchema
            _6_5 = schemas.NumberSchema
            _6_6 = schemas.NumberSchema
            _7_0 = schemas.NumberSchema
            _7_1 = schemas.NumberSchema
            _7_2 = schemas.NumberSchema
            _7_3 = schemas.NumberSchema
            _7_4 = schemas.NumberSchema
            _7_5 = schemas.NumberSchema
            _8_0 = schemas.NumberSchema
            _8_1 = schemas.NumberSchema
            _8_2 = schemas.NumberSchema
            _8_3 = schemas.NumberSchema
            _8_4 = schemas.NumberSchema
            _9_0 = schemas.NumberSchema
            _9_1 = schemas.NumberSchema
            _9_2 = schemas.NumberSchema
            _9_3 = schemas.NumberSchema
            __annotations__ = {
                "0-0": _0_0,
                "0-1": _0_1,
                "0-2": _0_2,
                "0-3": _0_3,
                "0-4": _0_4,
                "0-5": _0_5,
                "0-6": _0_6,
                "0-7": _0_7,
                "1-0": _1_0,
                "1-1": _1_1,
                "1-2": _1_2,
                "1-3": _1_3,
                "1-4": _1_4,
                "1-5": _1_5,
                "1-6": _1_6,
                "1-7": _1_7,
                "1-8": _1_8,
                "2-0": _2_0,
                "2-1": _2_1,
                "2-2": _2_2,
                "2-3": _2_3,
                "2-4": _2_4,
                "2-5": _2_5,
                "2-6": _2_6,
                "2-7": _2_7,
                "3-0": _3_0,
                "3-1": _3_1,
                "3-2": _3_2,
                "3-3": _3_3,
                "3-4": _3_4,
                "3-5": _3_5,
                "3-6": _3_6,
                "3-7": _3_7,
                "4-0": _4_0,
                "4-1": _4_1,
                "4-2": _4_2,
                "4-3": _4_3,
                "4-4": _4_4,
                "4-5": _4_5,
                "4-6": _4_6,
                "4-7": _4_7,
                "5-0": _5_0,
                "5-1": _5_1,
                "5-2": _5_2,
                "5-3": _5_3,
                "5-4": _5_4,
                "5-5": _5_5,
                "5-6": _5_6,
                "6-0": _6_0,
                "6-1": _6_1,
                "6-2": _6_2,
                "6-3": _6_3,
                "6-4": _6_4,
                "6-5": _6_5,
                "6-6": _6_6,
                "7-0": _7_0,
                "7-1": _7_1,
                "7-2": _7_2,
                "7-3": _7_3,
                "7-4": _7_4,
                "7-5": _7_5,
                "8-0": _8_0,
                "8-1": _8_1,
                "8-2": _8_2,
                "8-3": _8_3,
                "8-4": _8_4,
                "9-0": _9_0,
                "9-1": _9_1,
                "9-2": _9_2,
                "9-3": _9_3,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-0"]) -> MetaOapg.properties._0_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-1"]) -> MetaOapg.properties._0_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-2"]) -> MetaOapg.properties._0_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-3"]) -> MetaOapg.properties._0_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-4"]) -> MetaOapg.properties._0_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-5"]) -> MetaOapg.properties._0_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-6"]) -> MetaOapg.properties._0_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["0-7"]) -> MetaOapg.properties._0_7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-0"]) -> MetaOapg.properties._1_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-1"]) -> MetaOapg.properties._1_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-2"]) -> MetaOapg.properties._1_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-3"]) -> MetaOapg.properties._1_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-4"]) -> MetaOapg.properties._1_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-5"]) -> MetaOapg.properties._1_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-6"]) -> MetaOapg.properties._1_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-7"]) -> MetaOapg.properties._1_7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["1-8"]) -> MetaOapg.properties._1_8: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-0"]) -> MetaOapg.properties._2_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-1"]) -> MetaOapg.properties._2_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-2"]) -> MetaOapg.properties._2_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-3"]) -> MetaOapg.properties._2_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-4"]) -> MetaOapg.properties._2_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-5"]) -> MetaOapg.properties._2_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-6"]) -> MetaOapg.properties._2_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["2-7"]) -> MetaOapg.properties._2_7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-0"]) -> MetaOapg.properties._3_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-1"]) -> MetaOapg.properties._3_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-2"]) -> MetaOapg.properties._3_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-3"]) -> MetaOapg.properties._3_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-4"]) -> MetaOapg.properties._3_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-5"]) -> MetaOapg.properties._3_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-6"]) -> MetaOapg.properties._3_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["3-7"]) -> MetaOapg.properties._3_7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-0"]) -> MetaOapg.properties._4_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-1"]) -> MetaOapg.properties._4_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-2"]) -> MetaOapg.properties._4_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-3"]) -> MetaOapg.properties._4_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-4"]) -> MetaOapg.properties._4_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-5"]) -> MetaOapg.properties._4_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-6"]) -> MetaOapg.properties._4_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["4-7"]) -> MetaOapg.properties._4_7: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-0"]) -> MetaOapg.properties._5_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-1"]) -> MetaOapg.properties._5_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-2"]) -> MetaOapg.properties._5_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-3"]) -> MetaOapg.properties._5_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-4"]) -> MetaOapg.properties._5_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-5"]) -> MetaOapg.properties._5_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["5-6"]) -> MetaOapg.properties._5_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-0"]) -> MetaOapg.properties._6_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-1"]) -> MetaOapg.properties._6_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-2"]) -> MetaOapg.properties._6_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-3"]) -> MetaOapg.properties._6_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-4"]) -> MetaOapg.properties._6_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-5"]) -> MetaOapg.properties._6_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["6-6"]) -> MetaOapg.properties._6_6: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["7-0"]) -> MetaOapg.properties._7_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["7-1"]) -> MetaOapg.properties._7_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["7-2"]) -> MetaOapg.properties._7_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["7-3"]) -> MetaOapg.properties._7_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["7-4"]) -> MetaOapg.properties._7_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["7-5"]) -> MetaOapg.properties._7_5: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["8-0"]) -> MetaOapg.properties._8_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["8-1"]) -> MetaOapg.properties._8_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["8-2"]) -> MetaOapg.properties._8_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["8-3"]) -> MetaOapg.properties._8_3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["8-4"]) -> MetaOapg.properties._8_4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["9-0"]) -> MetaOapg.properties._9_0: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["9-1"]) -> MetaOapg.properties._9_1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["9-2"]) -> MetaOapg.properties._9_2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["9-3"]) -> MetaOapg.properties._9_3: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["0-0", "0-1", "0-2", "0-3", "0-4", "0-5", "0-6", "0-7", "1-0", "1-1", "1-2", "1-3", "1-4", "1-5", "1-6", "1-7", "1-8", "2-0", "2-1", "2-2", "2-3", "2-4", "2-5", "2-6", "2-7", "3-0", "3-1", "3-2", "3-3", "3-4", "3-5", "3-6", "3-7", "4-0", "4-1", "4-2", "4-3", "4-4", "4-5", "4-6", "4-7", "5-0", "5-1", "5-2", "5-3", "5-4", "5-5", "5-6", "6-0", "6-1", "6-2", "6-3", "6-4", "6-5", "6-6", "7-0", "7-1", "7-2", "7-3", "7-4", "7-5", "8-0", "8-1", "8-2", "8-3", "8-4", "9-0", "9-1", "9-2", "9-3", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-0"]) -> typing.Union[MetaOapg.properties._0_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-1"]) -> typing.Union[MetaOapg.properties._0_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-2"]) -> typing.Union[MetaOapg.properties._0_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-3"]) -> typing.Union[MetaOapg.properties._0_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-4"]) -> typing.Union[MetaOapg.properties._0_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-5"]) -> typing.Union[MetaOapg.properties._0_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-6"]) -> typing.Union[MetaOapg.properties._0_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["0-7"]) -> typing.Union[MetaOapg.properties._0_7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-0"]) -> typing.Union[MetaOapg.properties._1_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-1"]) -> typing.Union[MetaOapg.properties._1_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-2"]) -> typing.Union[MetaOapg.properties._1_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-3"]) -> typing.Union[MetaOapg.properties._1_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-4"]) -> typing.Union[MetaOapg.properties._1_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-5"]) -> typing.Union[MetaOapg.properties._1_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-6"]) -> typing.Union[MetaOapg.properties._1_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-7"]) -> typing.Union[MetaOapg.properties._1_7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["1-8"]) -> typing.Union[MetaOapg.properties._1_8, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-0"]) -> typing.Union[MetaOapg.properties._2_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-1"]) -> typing.Union[MetaOapg.properties._2_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-2"]) -> typing.Union[MetaOapg.properties._2_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-3"]) -> typing.Union[MetaOapg.properties._2_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-4"]) -> typing.Union[MetaOapg.properties._2_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-5"]) -> typing.Union[MetaOapg.properties._2_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-6"]) -> typing.Union[MetaOapg.properties._2_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["2-7"]) -> typing.Union[MetaOapg.properties._2_7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-0"]) -> typing.Union[MetaOapg.properties._3_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-1"]) -> typing.Union[MetaOapg.properties._3_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-2"]) -> typing.Union[MetaOapg.properties._3_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-3"]) -> typing.Union[MetaOapg.properties._3_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-4"]) -> typing.Union[MetaOapg.properties._3_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-5"]) -> typing.Union[MetaOapg.properties._3_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-6"]) -> typing.Union[MetaOapg.properties._3_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["3-7"]) -> typing.Union[MetaOapg.properties._3_7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-0"]) -> typing.Union[MetaOapg.properties._4_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-1"]) -> typing.Union[MetaOapg.properties._4_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-2"]) -> typing.Union[MetaOapg.properties._4_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-3"]) -> typing.Union[MetaOapg.properties._4_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-4"]) -> typing.Union[MetaOapg.properties._4_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-5"]) -> typing.Union[MetaOapg.properties._4_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-6"]) -> typing.Union[MetaOapg.properties._4_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["4-7"]) -> typing.Union[MetaOapg.properties._4_7, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-0"]) -> typing.Union[MetaOapg.properties._5_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-1"]) -> typing.Union[MetaOapg.properties._5_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-2"]) -> typing.Union[MetaOapg.properties._5_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-3"]) -> typing.Union[MetaOapg.properties._5_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-4"]) -> typing.Union[MetaOapg.properties._5_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-5"]) -> typing.Union[MetaOapg.properties._5_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["5-6"]) -> typing.Union[MetaOapg.properties._5_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-0"]) -> typing.Union[MetaOapg.properties._6_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-1"]) -> typing.Union[MetaOapg.properties._6_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-2"]) -> typing.Union[MetaOapg.properties._6_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-3"]) -> typing.Union[MetaOapg.properties._6_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-4"]) -> typing.Union[MetaOapg.properties._6_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-5"]) -> typing.Union[MetaOapg.properties._6_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["6-6"]) -> typing.Union[MetaOapg.properties._6_6, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["7-0"]) -> typing.Union[MetaOapg.properties._7_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["7-1"]) -> typing.Union[MetaOapg.properties._7_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["7-2"]) -> typing.Union[MetaOapg.properties._7_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["7-3"]) -> typing.Union[MetaOapg.properties._7_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["7-4"]) -> typing.Union[MetaOapg.properties._7_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["7-5"]) -> typing.Union[MetaOapg.properties._7_5, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["8-0"]) -> typing.Union[MetaOapg.properties._8_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["8-1"]) -> typing.Union[MetaOapg.properties._8_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["8-2"]) -> typing.Union[MetaOapg.properties._8_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["8-3"]) -> typing.Union[MetaOapg.properties._8_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["8-4"]) -> typing.Union[MetaOapg.properties._8_4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["9-0"]) -> typing.Union[MetaOapg.properties._9_0, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["9-1"]) -> typing.Union[MetaOapg.properties._9_1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["9-2"]) -> typing.Union[MetaOapg.properties._9_2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["9-3"]) -> typing.Union[MetaOapg.properties._9_3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["0-0", "0-1", "0-2", "0-3", "0-4", "0-5", "0-6", "0-7", "1-0", "1-1", "1-2", "1-3", "1-4", "1-5", "1-6", "1-7", "1-8", "2-0", "2-1", "2-2", "2-3", "2-4", "2-5", "2-6", "2-7", "3-0", "3-1", "3-2", "3-3", "3-4", "3-5", "3-6", "3-7", "4-0", "4-1", "4-2", "4-3", "4-4", "4-5", "4-6", "4-7", "5-0", "5-1", "5-2", "5-3", "5-4", "5-5", "5-6", "6-0", "6-1", "6-2", "6-3", "6-4", "6-5", "6-6", "7-0", "7-1", "7-2", "7-3", "7-4", "7-5", "8-0", "8-1", "8-2", "8-3", "8-4", "9-0", "9-1", "9-2", "9-3", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SportPredictionsByFixtureIdResponseDataItemPredictionsScores':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )
