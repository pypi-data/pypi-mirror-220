[tool.poetry]
name = "weba"
version = "0.0.0"
description = "Web application framework in Python using Dominate, htmx, Alpine.js, and FastAPI/Starlette"
authors = ["CJ Lazell <cjlazell@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
nicegui = ">=1.2.9"
pydantic = "^1.10.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
taskipy = "^1.10.4"
debugpy = "^1.6.7"
icecream = "^2.1.3"

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-playwright = "^0.3.3"
pytest-xdist = "^3.2.1"
pytest-asyncio = "^0.21.0"
pytest-spec = "^3.2.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.0.261"
ruff-lsp = "^0.0.24"
sourcery = "^1.2.0"
pyright = "^1.1.303"
python-lsp-server = "^1.7.2"
python-lsp-ruff = "^1.4.0"
python-lsp-black = "^1.2.1"
python-lsp-isort = "^0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
pytest = { cmd = "pytest", help = "pytest" }
pyright = { cmd = "pyright", help = "pyright" }
lint_ruff = { cmd = "ruff check . --fix", help = "ruff" }
lint_types = { cmd = "pyright", help = "pyright" }
lint = { cmd = "task lint_ruff && task lint_types", help = "lint" }
test = { cmd = "pytest tests" }

[tool.pyright]
include = ["weba", "tests"]
typeCheckingMode = "strict"
extraPaths = ["__pypackages__/3.11/lib", ".venv/lib/python3.11/site-packages", "__pypackages__/3.10/lib", ".venv/lib/python3.10/site-packages"]
reportMissingTypeStubs = true
reportUnknownMemberType = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownVariableType = false
reportUnusedFunction = false

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "D",  # pydocstyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "S",  # flake8-bandit
    "PT", # flake8-pytest-style
    "TCH",# flake8-type-checking
]

line-length = 120

ignore = ["D100", "D104", "D203", "D212"]

[tool.ruff.flake8-type-checking]
strict = true

[tool.black]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"*_test.py" = ["S101"]
"*test_*.py"  = ["S101"]

[tool.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator"]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette", "prisma", "termcolor", "honeybadger", "nicegui", "validators", "starlette_babel", "pytz", "pydash", "aiocache", "starlette_securecookies", "cryptography", "bcrypt", "itsdangerous", "cloudpickle", "pyftpdlib"]
