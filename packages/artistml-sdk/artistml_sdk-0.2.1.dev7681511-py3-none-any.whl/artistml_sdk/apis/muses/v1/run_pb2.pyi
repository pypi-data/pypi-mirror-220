"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Run(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CREATE_AT_FIELD_NUMBER: builtins.int
    UPDATE_AT_FIELD_NUMBER: builtins.int
    FLOW_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TRIGGER_FIELD_NUMBER: builtins.int
    PIPELINE_SPEC_FIELD_NUMBER: builtins.int
    RUN_DETAIL_FIELD_NUMBER: builtins.int
    EXPERIMENT_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    id: builtins.int
    """auto increase id."""

    create_at: typing.Text
    """Output only. Timestamp when this Dataset was created, convert to local timezone string."""

    update_at: typing.Text
    """Output only. Timestamp when this Dataset was last updated, convert to local timezone string."""

    flow_id: builtins.int
    name: typing.Text
    """Unique name for run, defined by user or generate for scheduler job."""

    @property
    def trigger(self) -> google.protobuf.struct_pb2.Struct:
        """Runner config."""
        pass
    @property
    def pipeline_spec(self) -> google.protobuf.struct_pb2.Struct:
        """Definition of the input parameters and artifacts of the flow."""
        pass
    @property
    def run_detail(self) -> google.protobuf.struct_pb2.Struct:
        """The output from kfp."""
        pass
    experiment: typing.Text
    """Create run in this experiment, experiment will be create if it does not exists."""

    namespace: typing.Text
    """Namespace that bind to experiment and run."""

    def __init__(self,
        *,
        id: builtins.int = ...,
        create_at: typing.Text = ...,
        update_at: typing.Text = ...,
        flow_id: builtins.int = ...,
        name: typing.Text = ...,
        trigger: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        pipeline_spec: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        run_detail: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        experiment: typing.Text = ...,
        namespace: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pipeline_spec",b"pipeline_spec","run_detail",b"run_detail","trigger",b"trigger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_at",b"create_at","experiment",b"experiment","flow_id",b"flow_id","id",b"id","name",b"name","namespace",b"namespace","pipeline_spec",b"pipeline_spec","run_detail",b"run_detail","trigger",b"trigger","update_at",b"update_at"]) -> None: ...
global___Run = Run

class RunOptionFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___RunOptionFilter = RunOptionFilter
