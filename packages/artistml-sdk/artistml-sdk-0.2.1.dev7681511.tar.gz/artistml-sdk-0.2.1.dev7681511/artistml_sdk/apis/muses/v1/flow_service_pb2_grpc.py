# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ...muses.v1 import flow_service_pb2 as muses_dot_v1_dot_flow__service__pb2


class FlowServiceStub(object):
    """The service that handles the CRUD of Flow.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFlow = channel.unary_unary(
                '/muses.v1.FlowService/CreateFlow',
                request_serializer=muses_dot_v1_dot_flow__service__pb2.CreateFlowRequest.SerializeToString,
                response_deserializer=muses_dot_v1_dot_flow__service__pb2.CreateFlowResponse.FromString,
                )
        self.GetFlow = channel.unary_unary(
                '/muses.v1.FlowService/GetFlow',
                request_serializer=muses_dot_v1_dot_flow__service__pb2.GetFlowRequest.SerializeToString,
                response_deserializer=muses_dot_v1_dot_flow__service__pb2.GetFlowResponse.FromString,
                )
        self.UpdateFlow = channel.unary_unary(
                '/muses.v1.FlowService/UpdateFlow',
                request_serializer=muses_dot_v1_dot_flow__service__pb2.UpdateFlowRequest.SerializeToString,
                response_deserializer=muses_dot_v1_dot_flow__service__pb2.UpdateFlowResponse.FromString,
                )
        self.ListFlows = channel.unary_unary(
                '/muses.v1.FlowService/ListFlows',
                request_serializer=muses_dot_v1_dot_flow__service__pb2.ListFlowsRequest.SerializeToString,
                response_deserializer=muses_dot_v1_dot_flow__service__pb2.ListFlowsResponse.FromString,
                )
        self.DeleteFlow = channel.unary_unary(
                '/muses.v1.FlowService/DeleteFlow',
                request_serializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowRequest.SerializeToString,
                response_deserializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowResponse.FromString,
                )
        self.DeleteFlows = channel.unary_unary(
                '/muses.v1.FlowService/DeleteFlows',
                request_serializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowsRequest.SerializeToString,
                response_deserializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowsResponse.FromString,
                )


class FlowServiceServicer(object):
    """The service that handles the CRUD of Flow.
    """

    def CreateFlow(self, request, context):
        """Creates a Flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlow(self, request, context):
        """Gets a Flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFlow(self, request, context):
        """Updates a Flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFlows(self, request, context):
        """Lists Flows in a Location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFlow(self, request, context):
        """Deletes a Flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFlows(self, request, context):
        """Batch delete Flow by filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFlow,
                    request_deserializer=muses_dot_v1_dot_flow__service__pb2.CreateFlowRequest.FromString,
                    response_serializer=muses_dot_v1_dot_flow__service__pb2.CreateFlowResponse.SerializeToString,
            ),
            'GetFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlow,
                    request_deserializer=muses_dot_v1_dot_flow__service__pb2.GetFlowRequest.FromString,
                    response_serializer=muses_dot_v1_dot_flow__service__pb2.GetFlowResponse.SerializeToString,
            ),
            'UpdateFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFlow,
                    request_deserializer=muses_dot_v1_dot_flow__service__pb2.UpdateFlowRequest.FromString,
                    response_serializer=muses_dot_v1_dot_flow__service__pb2.UpdateFlowResponse.SerializeToString,
            ),
            'ListFlows': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFlows,
                    request_deserializer=muses_dot_v1_dot_flow__service__pb2.ListFlowsRequest.FromString,
                    response_serializer=muses_dot_v1_dot_flow__service__pb2.ListFlowsResponse.SerializeToString,
            ),
            'DeleteFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFlow,
                    request_deserializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowRequest.FromString,
                    response_serializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowResponse.SerializeToString,
            ),
            'DeleteFlows': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFlows,
                    request_deserializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowsRequest.FromString,
                    response_serializer=muses_dot_v1_dot_flow__service__pb2.DeleteFlowsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'muses.v1.FlowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FlowService(object):
    """The service that handles the CRUD of Flow.
    """

    @staticmethod
    def CreateFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muses.v1.FlowService/CreateFlow',
            muses_dot_v1_dot_flow__service__pb2.CreateFlowRequest.SerializeToString,
            muses_dot_v1_dot_flow__service__pb2.CreateFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muses.v1.FlowService/GetFlow',
            muses_dot_v1_dot_flow__service__pb2.GetFlowRequest.SerializeToString,
            muses_dot_v1_dot_flow__service__pb2.GetFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muses.v1.FlowService/UpdateFlow',
            muses_dot_v1_dot_flow__service__pb2.UpdateFlowRequest.SerializeToString,
            muses_dot_v1_dot_flow__service__pb2.UpdateFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFlows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muses.v1.FlowService/ListFlows',
            muses_dot_v1_dot_flow__service__pb2.ListFlowsRequest.SerializeToString,
            muses_dot_v1_dot_flow__service__pb2.ListFlowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muses.v1.FlowService/DeleteFlow',
            muses_dot_v1_dot_flow__service__pb2.DeleteFlowRequest.SerializeToString,
            muses_dot_v1_dot_flow__service__pb2.DeleteFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFlows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/muses.v1.FlowService/DeleteFlows',
            muses_dot_v1_dot_flow__service__pb2.DeleteFlowsRequest.SerializeToString,
            muses_dot_v1_dot_flow__service__pb2.DeleteFlowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
