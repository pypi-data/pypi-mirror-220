"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import ...common.v1.types_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import ...muses.v1.component_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CreateFlowRequest(google.protobuf.message.Message):
    """Request message for [FlowService.CreateFlow][v1.FlowService.CreateFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    FLOW_FIELD_NUMBER: builtins.int
    parent: typing.Text
    """The path of the Flow's parent resource, if exists.
    Format: ``
    """

    @property
    def flow(self) -> global___Flow:
        """Required. The Flow to create."""
        pass
    def __init__(self,
        *,
        parent: typing.Text = ...,
        flow: typing.Optional[global___Flow] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["flow",b"flow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["flow",b"flow","parent",b"parent"]) -> None: ...
global___CreateFlowRequest = CreateFlowRequest

class CreateFlowResponse(google.protobuf.message.Message):
    """Response message for [FlowService.CreateFlow][v1.FlowService.CreateFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """status code."""

    message: typing.Text
    """error message."""

    @property
    def details(self) -> global___Flow:
        """response data."""
        pass
    def __init__(self,
        *,
        code: builtins.int = ...,
        message: typing.Text = ...,
        details: typing.Optional[global___Flow] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details",b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","details",b"details","message",b"message"]) -> None: ...
global___CreateFlowResponse = CreateFlowResponse

class GetFlowRequest(google.protobuf.message.Message):
    """Request message for [FlowService.GetFlow][v1.FlowService.GetFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    READ_MASK_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    parent: typing.Text
    """The path of the Flow's parent resource, if exists.
    Format: ``
    """

    id: builtins.int
    """Required. The id of the Flow in database."""

    @property
    def read_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Mask specifying which fields to read."""
        pass
    version: typing.Text
    """Version of flow."""

    def __init__(self,
        *,
        parent: typing.Text = ...,
        id: builtins.int = ...,
        read_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        version: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_mask",b"read_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","parent",b"parent","read_mask",b"read_mask","version",b"version"]) -> None: ...
global___GetFlowRequest = GetFlowRequest

class GetFlowResponse(google.protobuf.message.Message):
    """Response message for [FlowService.GetFlow][v1.FlowService.GetFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """status code."""

    message: typing.Text
    """error message."""

    @property
    def details(self) -> global___Flow:
        """response data."""
        pass
    def __init__(self,
        *,
        code: builtins.int = ...,
        message: typing.Text = ...,
        details: typing.Optional[global___Flow] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details",b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","details",b"details","message",b"message"]) -> None: ...
global___GetFlowResponse = GetFlowResponse

class UpdateFlowRequest(google.protobuf.message.Message):
    """Request message for [FlowService.UpdateFlow][v1.FlowService.UpdateFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    FLOW_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    parent: typing.Text
    """The path of the Flow's parent resource, if exists.
    Format: ``
    """

    @property
    def flow(self) -> global___Flow:
        """Required. The Flow which replaces the resource on the server."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The update mask applies to the resource.
        For the `FieldMask` definition, see [google.protobuf.FieldMask][google.protobuf.FieldMask].
        Updatable fields:

          * `id`
          * `update_at`
          * `create_at`
        """
        pass
    def __init__(self,
        *,
        parent: typing.Text = ...,
        flow: typing.Optional[global___Flow] = ...,
        update_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["flow",b"flow","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["flow",b"flow","parent",b"parent","update_mask",b"update_mask"]) -> None: ...
global___UpdateFlowRequest = UpdateFlowRequest

class UpdateFlowResponse(google.protobuf.message.Message):
    """Response message for [FlowService.UpdateFlow][v1.FlowService.UpdateFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """status code."""

    message: typing.Text
    """error message."""

    @property
    def details(self) -> global___Flow:
        """response data."""
        pass
    def __init__(self,
        *,
        code: builtins.int = ...,
        message: typing.Text = ...,
        details: typing.Optional[global___Flow] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details",b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","details",b"details","message",b"message"]) -> None: ...
global___UpdateFlowResponse = UpdateFlowResponse

class ListFlowsRequest(google.protobuf.message.Message):
    """Request message for [FlowService.ListFlows][v1.FlowService.ListFlows]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    COMMON_OPTION_FIELD_NUMBER: builtins.int
    COMMON_FILTER_FIELD_NUMBER: builtins.int
    READ_MASK_FIELD_NUMBER: builtins.int
    OPTION_FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text
    """The path of the Flow's parent resource, if exists.
    Format: ``
    """

    @property
    def common_option(self) -> common.v1.types_pb2.CommonOption:
        """common list option."""
        pass
    @property
    def common_filter(self) -> common.v1.types_pb2.CommonFilter:
        """common list filter."""
        pass
    @property
    def read_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Mask specifying which fields to read."""
        pass
    @property
    def option_filter(self) -> global___FlowOptionFilter:
        """option filter struct for list Flow."""
        pass
    def __init__(self,
        *,
        parent: typing.Text = ...,
        common_option: typing.Optional[common.v1.types_pb2.CommonOption] = ...,
        common_filter: typing.Optional[common.v1.types_pb2.CommonFilter] = ...,
        read_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        option_filter: typing.Optional[global___FlowOptionFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["common_filter",b"common_filter","common_option",b"common_option","option_filter",b"option_filter","read_mask",b"read_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["common_filter",b"common_filter","common_option",b"common_option","option_filter",b"option_filter","parent",b"parent","read_mask",b"read_mask"]) -> None: ...
global___ListFlowsRequest = ListFlowsRequest

class ListFlowsResponse(google.protobuf.message.Message):
    """Response message for [FlowService.ListFlows][v1.FlowService.ListFlows]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Details(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        ITEMS_FIELD_NUMBER: builtins.int
        NEXT_REQUEST_FIELD_NUMBER: builtins.int
        TOTAL_COUNT_FIELD_NUMBER: builtins.int
        @property
        def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Flow]:
            """A list of Flows that matches the specified filter in the request."""
            pass
        @property
        def next_request(self) -> global___ListFlowsRequest:
            """next request."""
            pass
        total_count: builtins.int
        """total items count of this filter."""

        def __init__(self,
            *,
            items: typing.Optional[typing.Iterable[global___Flow]] = ...,
            next_request: typing.Optional[global___ListFlowsRequest] = ...,
            total_count: builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["next_request",b"next_request"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["items",b"items","next_request",b"next_request","total_count",b"total_count"]) -> None: ...

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """status code."""

    message: typing.Text
    """error message."""

    @property
    def details(self) -> global___ListFlowsResponse.Details: ...
    def __init__(self,
        *,
        code: builtins.int = ...,
        message: typing.Text = ...,
        details: typing.Optional[global___ListFlowsResponse.Details] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details",b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","details",b"details","message",b"message"]) -> None: ...
global___ListFlowsResponse = ListFlowsResponse

class DeleteFlowRequest(google.protobuf.message.Message):
    """Request message for [FlowService.DeleteFlow][v1.FlowService.DeleteFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    parent: typing.Text
    """The path of the Flow's parent resource, if exists.
    Format: ``
    """

    id: builtins.int
    """Required. The resource name of the Flow to delete.
    Format:
    `flows/{id}`
    """

    def __init__(self,
        *,
        parent: typing.Text = ...,
        id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","parent",b"parent"]) -> None: ...
global___DeleteFlowRequest = DeleteFlowRequest

class DeleteFlowResponse(google.protobuf.message.Message):
    """Response message for [FlowService.DeleteFlow][v1.FlowService.DeleteFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """status code."""

    message: typing.Text
    """error message."""

    @property
    def details(self) -> global___Flow:
        """response data."""
        pass
    def __init__(self,
        *,
        code: builtins.int = ...,
        message: typing.Text = ...,
        details: typing.Optional[global___Flow] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details",b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","details",b"details","message",b"message"]) -> None: ...
global___DeleteFlowResponse = DeleteFlowResponse

class DeleteFlowsRequest(google.protobuf.message.Message):
    """Request message for [FlowService.DeleteFlows][v1.FlowService.DeleteFlows]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARENT_FIELD_NUMBER: builtins.int
    COMMON_FILTER_FIELD_NUMBER: builtins.int
    OPTION_FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text
    """The path of the Flow's parent resource, if exists.
    Format: ``
    """

    @property
    def common_filter(self) -> common.v1.types_pb2.CommonFilter:
        """use common filter to delete Flow"""
        pass
    @property
    def option_filter(self) -> global___FlowOptionFilter:
        """option filter struct for delete Flow items."""
        pass
    def __init__(self,
        *,
        parent: typing.Text = ...,
        common_filter: typing.Optional[common.v1.types_pb2.CommonFilter] = ...,
        option_filter: typing.Optional[global___FlowOptionFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["common_filter",b"common_filter","option_filter",b"option_filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["common_filter",b"common_filter","option_filter",b"option_filter","parent",b"parent"]) -> None: ...
global___DeleteFlowsRequest = DeleteFlowsRequest

class DeleteFlowsResponse(google.protobuf.message.Message):
    """Response message for [FlowService.DeleteFlows][v1.FlowService.DeleteFlows]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """status code."""

    message: typing.Text
    """error message."""

    @property
    def details(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """deleted id list."""
        pass
    def __init__(self,
        *,
        code: builtins.int = ...,
        message: typing.Text = ...,
        details: typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","details",b"details","message",b"message"]) -> None: ...
global___DeleteFlowsResponse = DeleteFlowsResponse

class Flow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class ComponentsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> muses.v1.component_pb2.Component: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[muses.v1.component_pb2.Component] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    CREATE_AT_FIELD_NUMBER: builtins.int
    UPDATE_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_SPEC_FIELD_NUMBER: builtins.int
    PARALLELISM_LIMIT_FIELD_NUMBER: builtins.int
    COMPONENTS_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    id: builtins.int
    """auto increase id."""

    create_at: typing.Text
    """Output only. Timestamp when this Dataset was created, convert to local timezone string."""

    update_at: typing.Text
    """Output only. Timestamp when this Dataset was last updated, convert to local timezone string."""

    name: typing.Text
    """Name for flow."""

    version: typing.Text
    """Version for flow."""

    @property
    def resource_spec(self) -> google.protobuf.struct_pb2.Struct:
        """Resource config for flow."""
        pass
    parallelism_limit: builtins.int
    """Parallelism limit of job;"""

    @property
    def components(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, muses.v1.component_pb2.Component]:
        """node_id -> component"""
        pass
    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Parameter]: ...
    def __init__(self,
        *,
        id: builtins.int = ...,
        create_at: typing.Text = ...,
        update_at: typing.Text = ...,
        name: typing.Text = ...,
        version: typing.Text = ...,
        resource_spec: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        parallelism_limit: builtins.int = ...,
        components: typing.Optional[typing.Mapping[typing.Text, muses.v1.component_pb2.Component]] = ...,
        parameters: typing.Optional[typing.Iterable[global___Parameter]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_spec",b"resource_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["components",b"components","create_at",b"create_at","id",b"id","name",b"name","parallelism_limit",b"parallelism_limit","parameters",b"parameters","resource_spec",b"resource_spec","update_at",b"update_at","version",b"version"]) -> None: ...
global___Flow = Flow

class Parameter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARAMETER_FIELD_NUMBER: builtins.int
    PARENT_PARAMETER_FIELD_NUMBER: builtins.int
    PARAMETER_SPEC_FIELD_NUMBER: builtins.int
    @property
    def parameter(self) -> global___ComponentParameter: ...
    @property
    def parent_parameter(self) -> global___ComponentParameter: ...
    @property
    def parameter_spec(self) -> google.protobuf.struct_pb2.Struct:
        """parameter generate by kfp."""
        pass
    def __init__(self,
        *,
        parameter: typing.Optional[global___ComponentParameter] = ...,
        parent_parameter: typing.Optional[global___ComponentParameter] = ...,
        parameter_spec: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["parameter",b"parameter","parameter_spec",b"parameter_spec","parent_parameter",b"parent_parameter","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parameter",b"parameter","parameter_spec",b"parameter_spec","parent_parameter",b"parent_parameter","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["parent_parameter","parameter_spec"]]: ...
global___Parameter = Parameter

class ComponentParameter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NODE_ID_FIELD_NUMBER: builtins.int
    PARAM_NAME_FIELD_NUMBER: builtins.int
    node_id: typing.Text
    """empty string if param_name is from root.input_definitions"""

    param_name: typing.Text
    def __init__(self,
        *,
        node_id: typing.Text = ...,
        param_name: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_id",b"node_id","param_name",b"param_name"]) -> None: ...
global___ComponentParameter = ComponentParameter

class FlowOptionFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HISTORY_ID_FIELD_NUMBER: builtins.int
    history_id: builtins.int
    """show history list of flow."""

    def __init__(self,
        *,
        history_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["history_id",b"history_id"]) -> None: ...
global___FlowOptionFilter = FlowOptionFilter
