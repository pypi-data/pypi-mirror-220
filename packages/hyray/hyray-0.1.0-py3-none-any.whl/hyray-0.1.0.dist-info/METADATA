Metadata-Version: 2.1
Name: hyray
Version: 0.1.0
Summary: GPU arrays (via CuPy) when possible, otherwise CPU arrays (via NumPy)
Author: Christopher Ariza
License: MIT
Keywords: NumPy,CuPy,hybrid,array,CUDA
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Environment :: GPU :: NVIDIA CUDA
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy (>=1.18.5)
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: invoke (==2.2.*) ; extra == 'test'

# HyRay
### `GPU ? CuPy : NumPy`
GPU arrays (via CuPy) when possible, otherwise CPU arrays (via NumPy)

The `hyray` library provides a single interface to use both NumPy and CuPy, depending on the availability of CuPy, CUDA, or sufficient memory. With `hyray` a single implementation can run with CuPy when CuPy is available (on a local machine with a GPU), and still work with NumPy when on GPU or insufficient memory is available (such as on continuous integration servers).

