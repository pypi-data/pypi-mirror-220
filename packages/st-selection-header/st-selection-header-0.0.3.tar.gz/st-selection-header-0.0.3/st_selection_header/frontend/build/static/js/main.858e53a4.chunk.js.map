{"version":3,"sources":["consts.ts","SelectionHeader.tsx","index.tsx"],"names":["names","SelectionHeader","renderData","useRenderData","initialDate","dayjs","args","initialData","date","fromTime","interval","showType","filterLength","filter","minLength","maxLength","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","isValid","returnData","_objectSpread","format","Streamlit","setComponentValue","returnValue","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","_jsxs","marginTop","children","LocalizationProvider","dateAdapter","AdapterDayjs","_jsx","DatePicker","label","value","onChange","newValue","set","hour","minute","sx","backgroundColor","borderRadius","marginRight","TimePicker","ampm","TextField","id","margin","newVal","val","Number","target","isNaN","FormControl","m","InputLabel","Select","labelId","multiple","event","split","input","OutlinedInput","renderValue","selected","join","map","name","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","FormControlLabel","control","Button","onClick","subtract","add","height","console","warn","theme","createTheme","palette","main","common","black","secondary","text","action","active","background","default","paper","ReactDOM","render","React","StrictMode","StreamlitProvider","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.858e53a4.chunk.js","sourcesContent":["export const names = [\n  \"Pedestrian\",\n  \"Bicycle\",\n  \"Light vehicle\",\n  \"Heavy vehicle\",\n  \"Unknown\",\n]\n","import {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  ListItemText,\n  FormControlLabel,\n  Button,\n  SelectChangeEvent,\n} from \"@mui/material\"\nimport {\n  LocalizationProvider,\n  DatePicker,\n  TimePicker,\n} from \"@mui/x-date-pickers\"\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\"\nimport dayjs, { Dayjs } from \"dayjs\"\nimport React, { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport { names } from \"./consts\"\nimport { Streamlit } from \"streamlit-component-lib\"\n\ninterface Data {\n  date: Dayjs\n  fromTime: Dayjs\n  interval: number\n  showType: typeof names\n  filterLength: FilterLength\n}\n\ninterface FilterLength {\n  filter: boolean\n  minLength: number\n  maxLength: number\n}\n\ninterface ReturnData {\n  date: string\n  fromTime: string\n  interval: number\n  showType: typeof names\n  filterLength: FilterLength\n}\n\nexport const SelectionHeader: React.FC = () => {\n  const renderData = useRenderData()\n  const initialDate = dayjs(renderData.args[\"date\"])\n  const initialData: Data = {\n    date: initialDate,\n    fromTime: initialDate,\n    interval: 0,\n    showType: names,\n    filterLength: {\n      filter: false,\n      minLength: 0,\n      maxLength: 0,\n    },\n  }\n  const [data, setData] = useState<Data>(initialData)\n\n  useEffect(() => {\n    const returnValue = () => {\n      const returnData: ReturnData = {\n        ...data,\n        date: data.date.format(\"YYYY-MM-DD HH:mm:ss\"),\n        fromTime: data.fromTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n      }\n      Streamlit.setComponentValue(returnData)\n    }\n    if (data.date.isValid() && data.fromTime.isValid()) returnValue()\n  }, [data])\n\n  const handleChange = (event: SelectChangeEvent<typeof names>) => {\n    const {\n      target: { value },\n    } = event\n    setData((data) => {\n      data.showType = typeof value === \"string\" ? value.split(\",\") : value\n      return { ...data }\n    })\n  }\n\n  const handleBackwardClick = () => {\n    setData((data) => {\n      data.fromTime = data.fromTime.subtract(data.interval, \"minutes\")\n      return { ...data }\n    })\n  }\n\n  const handleForwardClick = () => {\n    setData((data) => {\n      data.fromTime = data.fromTime.add(data.interval, \"minutes\")\n      return { ...data }\n    })\n  }\n\n  const ITEM_HEIGHT = 48\n  const ITEM_PADDING_TOP = 8\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  }\n\n  return (\n    <div style={{ marginTop: 30 }}>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          label=\"Date\"\n          format=\"YYYY-MM-DD\"\n          value={data.date}\n          onChange={(newValue) => {\n            if (newValue)\n              setData((data) => {\n                data.date = newValue\n                if (newValue.isValid()) {\n                  data.fromTime = newValue\n                    .set(\"hour\", data.fromTime.hour())\n                    .set(\"minute\", data.fromTime.minute())\n                }\n                return { ...data }\n              })\n          }}\n          sx={{\n            backgroundColor: \"background.default\",\n            borderRadius: 1,\n            marginRight: 2,\n          }}\n        />\n        <TimePicker\n          label=\"From time\"\n          value={data.fromTime}\n          onChange={(newValue) => {\n            if (newValue) {\n              setData((data) => {\n                data.fromTime = newValue\n                return { ...data }\n              })\n            }\n          }}\n          ampm={false}\n          sx={{\n            backgroundColor: \"background.default\",\n            borderRadius: 1,\n            marginRight: 2,\n          }}\n        />\n      </LocalizationProvider>\n      <TextField\n        label=\"Interval in minutes\"\n        id=\"outlined-start-adornment\"\n        sx={{\n          width: \"25ch\",\n          backgroundColor: \"background.default\",\n          borderRadius: 1,\n          margin: 0,\n          marginRight: 2,\n        }}\n        value={data.interval}\n        onChange={(newVal) => {\n          const val = Number(newVal.target.value)\n          if (!isNaN(val)) {\n            setData((data) => {\n              data.interval = val\n              return { ...data }\n            })\n          }\n        }}\n      />\n      <FormControl sx={{ m: 1, width: 300, margin: 0 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Show types</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={data.showType}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Show types\" />}\n          renderValue={(selected) => selected.join(\", \")}\n          MenuProps={MenuProps}\n          sx={{ backgroundColor: \"background.default\" }}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name}>\n              <Checkbox checked={data.showType.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <div>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={data.filterLength.filter}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setData((data) => {\n                  data.filterLength.filter = event.target.checked\n                  return { ...data }\n                })\n              }}\n            />\n          }\n          label=\"Filter length\"\n          style={{ margin: 0, marginTop: 10 }}\n        />\n      </div>\n      {data.filterLength.filter && (\n        <div style={{ marginTop: 10 }}>\n          <TextField\n            label=\"Minimum length\"\n            id=\"outlined-start-adornment\"\n            sx={{\n              m: 1,\n              width: \"25ch\",\n              backgroundColor: \"background.default\",\n              borderRadius: 1,\n              margin: 0,\n              marginRight: 2,\n            }}\n            value={data.filterLength.minLength}\n            onChange={(newVal) => {\n              const val = Number(newVal.target.value)\n              if (!isNaN(val)) {\n                setData((data) => {\n                  data.filterLength.minLength = val\n                  return { ...data }\n                })\n              }\n            }}\n          />\n          <TextField\n            label=\"Maximum length\"\n            id=\"outlined-start-adornment\"\n            sx={{\n              m: 1,\n              width: \"25ch\",\n              backgroundColor: \"background.default\",\n              borderRadius: 1,\n              margin: 0,\n              marginRight: 2,\n            }}\n            value={data.filterLength.maxLength}\n            onChange={(newVal) => {\n              const val = Number(newVal.target.value)\n              if (!isNaN(val)) {\n                setData((data) => {\n                  data.filterLength.maxLength = val\n                  return { ...data }\n                })\n              }\n            }}\n          />\n        </div>\n      )}\n      <div style={{ margin: 0, marginTop: 10 }}>\n        <Button\n          sx={{ marginRight: 2, backgroundColor: \"background.default\" }}\n          onClick={() => handleBackwardClick()}\n        >\n          {\"<\"}\n        </Button>\n        <Button\n          sx={{ marginRight: 2, backgroundColor: \"background.default\" }}\n          onClick={() => handleForwardClick()}\n        >\n          {\">\"}\n        </Button>\n      </div>\n      <div style={{ height: 100 }}></div>\n    </div>\n  )\n}\n\nexport default SelectionHeader\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport SelectionHeader from \"./SelectionHeader\"\nimport { ThemeProvider, createTheme } from \"@mui/material\"\n\n//Dirty dirty\nconsole.warn = () => {}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#F63366\",\n    },\n    common: {\n      black: \"#F63366\",\n    },\n    secondary: {\n      main: \"#F0F2F6\",\n    },\n    text: {\n      primary: \"#fff\",\n      secondary: \"#fff\",\n    },\n    action: {\n      active: \"#fff\",\n    },\n    background: {\n      default: \"#262730\",\n      paper: \"#262730\",\n    },\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <ThemeProvider theme={theme}>\n        <SelectionHeader />\n      </ThemeProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}